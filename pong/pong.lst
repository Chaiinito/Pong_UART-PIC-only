;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 13/sep./2022 06:17:21 p. m.
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF009EF87  	GOTO        4878
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_Delay_10us:
;__Lib_Delays.c,11 :: 		void Delay_10us() {
;__Lib_Delays.c,12 :: 		Delay_us(10);
0x001C	0x0E06      	MOVLW       6
0x001E	0x6E0D      	MOVWF       R13, 0
L_Delay_10us0:
0x0020	0x2E0D      	DECFSZ      R13, 1, 0
0x0022	0xD7FE      	BRA         L_Delay_10us0
0x0024	0x0000      	NOP
;__Lib_Delays.c,13 :: 		}
L_end_Delay_10us:
0x0026	0x0012      	RETURN      0
; end of _Delay_10us
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x0028	0x0000      	NOP
0x002A	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x002C	0x0012      	RETURN      0
; end of _Delay_1us
__Lib_Glcd_Strobe:
;__Lib_Glcd.c,32 :: 		
;__Lib_Glcd.c,33 :: 		
0x002E	0xDFF6      	RCALL       _Delay_10us
;__Lib_Glcd.c,34 :: 		
0x0030	0x888A      	BSF         GLCD_EN, BitPos(GLCD_EN+0) 
;__Lib_Glcd.c,35 :: 		
0x0032	0xDFF4      	RCALL       _Delay_10us
;__Lib_Glcd.c,36 :: 		
0x0034	0x988A      	BCF         GLCD_EN, BitPos(GLCD_EN+0) 
;__Lib_Glcd.c,37 :: 		
L_end_Strobe:
0x0036	0x0012      	RETURN      0
; end of __Lib_Glcd_Strobe
_Glcd_Set_Page:
;__Lib_Glcd.c,40 :: 		
;__Lib_Glcd.c,42 :: 		
0x0038	0x948A      	BCF         GLCD_RS, BitPos(GLCD_RS+0) 
;__Lib_Glcd.c,43 :: 		
0x003A	0x968A      	BCF         GLCD_RW, BitPos(GLCD_RW+0) 
;__Lib_Glcd.c,44 :: 		
0x003C	0x0EB8      	MOVLW       184
0x003E	0x0100      	MOVLB       0
0x0040	0x11F9      	IORWF       FARG_Glcd_Set_Page_page, 0, 1
0x0042	0x6E83      	MOVWF       GLCD_DataPort 
;__Lib_Glcd.c,45 :: 		
0x0044	0xDFF4      	RCALL       __Lib_Glcd_Strobe
;__Lib_Glcd.c,46 :: 		
L_end_Glcd_Set_Page:
0x0046	0x0012      	RETURN      0
; end of _Glcd_Set_Page
_Glcd_Set_Side:
;__Lib_Glcd.c,49 :: 		
;__Lib_Glcd.c,50 :: 		
0x0048	0x0E7F      	MOVLW       127
0x004A	0x0100      	MOVLB       0
0x004C	0x15F9      	ANDWF       FARG_Glcd_Set_Side_x_pos, 0, 1
0x004E	0x6E01      	MOVWF       R1 
0x0050	0xF0F9C001  	MOVFF       R1, FARG_Glcd_Set_Side_x_pos
;__Lib_Glcd.c,51 :: 		
0x0054	0xAC01      	BTFSS       R1, 6 
0x0056	0xD003      	BRA         L_Glcd_Set_Side0
;__Lib_Glcd.c,52 :: 		
0x0058	0x808A      	BSF         GLCD_CS1, BitPos(GLCD_CS1+0) 
;__Lib_Glcd.c,53 :: 		
0x005A	0x928A      	BCF         GLCD_CS2, BitPos(GLCD_CS2+0) 
;__Lib_Glcd.c,54 :: 		
0x005C	0xD002      	BRA         L_Glcd_Set_Side1
L_Glcd_Set_Side0:
;__Lib_Glcd.c,55 :: 		
0x005E	0x908A      	BCF         GLCD_CS1, BitPos(GLCD_CS1+0) 
;__Lib_Glcd.c,56 :: 		
0x0060	0x828A      	BSF         GLCD_CS2, BitPos(GLCD_CS2+0) 
;__Lib_Glcd.c,57 :: 		
L_Glcd_Set_Side1:
;__Lib_Glcd.c,58 :: 		
L_end_Glcd_Set_Side:
0x0062	0x0012      	RETURN      0
; end of _Glcd_Set_Side
_Glcd_Read_Data:
;__Lib_Glcd.c,75 :: 		
;__Lib_Glcd.c,80 :: 		
0x0064	0x0E12      	MOVLW       18
0x0066	0x6E00      	MOVWF       R0 
0x0068	0x0E00      	MOVLW       0
0x006A	0x6E01      	MOVWF       R1 
0x006C	0x0E83      	MOVLW       GLCD_DataPort
0x006E	0x2400      	ADDWF       R0, 0 
0x0070	0x6EE1      	MOVWF       FSR1L 
0x0072	0x0E0F      	MOVLW       hi_addr(GLCD_DataPort)
0x0074	0x2001      	ADDWFC      R1, 0 
0x0076	0x6EE2      	MOVWF       FSR1H 
0x0078	0x0EFF      	MOVLW       255
0x007A	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Glcd.c,82 :: 		
0x007C	0xDFD5      	RCALL       _Delay_1us
;__Lib_Glcd.c,83 :: 		
0x007E	0xDFD4      	RCALL       _Delay_1us
;__Lib_Glcd.c,85 :: 		
0x0080	0x848A      	BSF         GLCD_RS, BitPos(GLCD_RS+0) 
;__Lib_Glcd.c,86 :: 		
0x0082	0x988A      	BCF         GLCD_EN, BitPos(GLCD_EN+0) 
;__Lib_Glcd.c,87 :: 		
0x0084	0x868A      	BSF         GLCD_RW, BitPos(GLCD_RW+0) 
;__Lib_Glcd.c,89 :: 		
0x0086	0x888A      	BSF         GLCD_EN, BitPos(GLCD_EN+0) 
;__Lib_Glcd.c,91 :: 		
0x0088	0xDFC9      	RCALL       _Delay_10us
;__Lib_Glcd.c,99 :: 		
0x008A	0xF0F9CF83  	MOVFF       GLCD_DataPort, Glcd_Read_Data_local_L0
;__Lib_Glcd.c,101 :: 		
0x008E	0x988A      	BCF         GLCD_EN, BitPos(GLCD_EN+0) 
;__Lib_Glcd.c,102 :: 		
0x0090	0x968A      	BCF         GLCD_RW, BitPos(GLCD_RW+0) 
;__Lib_Glcd.c,104 :: 		
0x0092	0xDFCA      	RCALL       _Delay_1us
;__Lib_Glcd.c,105 :: 		
0x0094	0xDFC9      	RCALL       _Delay_1us
;__Lib_Glcd.c,108 :: 		
0x0096	0x0E12      	MOVLW       18
0x0098	0x6E00      	MOVWF       R0 
0x009A	0x0E00      	MOVLW       0
0x009C	0x6E01      	MOVWF       R1 
0x009E	0x0E83      	MOVLW       GLCD_DataPort
0x00A0	0x2400      	ADDWF       R0, 0 
0x00A2	0x6EE1      	MOVWF       FSR1L 
0x00A4	0x0E0F      	MOVLW       hi_addr(GLCD_DataPort)
0x00A6	0x2001      	ADDWFC      R1, 0 
0x00A8	0x6EE2      	MOVWF       FSR1H 
0x00AA	0x6AE6      	CLRF        POSTINC1 
;__Lib_Glcd.c,110 :: 		
0x00AC	0xF000C0F9  	MOVFF       Glcd_Read_Data_local_L0, R0
;__Lib_Glcd.c,111 :: 		
L_end_Glcd_Read_Data:
0x00B0	0x0012      	RETURN      0
; end of _Glcd_Read_Data
_Glcd_Write_Data:
;__Lib_Glcd.c,114 :: 		
;__Lib_Glcd.c,116 :: 		
0x00B2	0x988A      	BCF         GLCD_EN, BitPos(GLCD_EN+0) 
;__Lib_Glcd.c,117 :: 		
0x00B4	0x848A      	BSF         GLCD_RS, BitPos(GLCD_RS+0) 
;__Lib_Glcd.c,118 :: 		
0x00B6	0x968A      	BCF         GLCD_RW, BitPos(GLCD_RW+0) 
;__Lib_Glcd.c,120 :: 		
0x00B8	0xFF83C0F9  	MOVFF       FARG_Glcd_Write_Data_ddata, GLCD_DataPort
;__Lib_Glcd.c,121 :: 		
0x00BC	0xDFB8      	RCALL       __Lib_Glcd_Strobe
;__Lib_Glcd.c,122 :: 		
L_end_Glcd_Write_Data:
0x00BE	0x0012      	RETURN      0
; end of _Glcd_Write_Data
_Glcd_Set_X:
;__Lib_Glcd.c,61 :: 		
;__Lib_Glcd.c,63 :: 		
0x00C0	0x0E7F      	MOVLW       127
0x00C2	0x0100      	MOVLB       0
0x00C4	0x15F9      	ANDWF       FARG_Glcd_Set_X_x_pos, 0, 1
0x00C6	0x6E00      	MOVWF       R0 
0x00C8	0xF0F9C000  	MOVFF       R0, FARG_Glcd_Set_X_x_pos
;__Lib_Glcd.c,64 :: 		
0x00CC	0x948A      	BCF         GLCD_RS, BitPos(GLCD_RS+0) 
;__Lib_Glcd.c,65 :: 		
0x00CE	0x968A      	BCF         GLCD_RW, BitPos(GLCD_RW+0) 
;__Lib_Glcd.c,67 :: 		
0x00D0	0x0EBF      	MOVLW       191
0x00D2	0x1600      	ANDWF       R0, 1 
0x00D4	0xF0F9C000  	MOVFF       R0, FARG_Glcd_Set_X_x_pos
;__Lib_Glcd.c,68 :: 		
0x00D8	0x8C00      	BSF         R0, 6 
0x00DA	0xF0F9C000  	MOVFF       R0, FARG_Glcd_Set_X_x_pos
;__Lib_Glcd.c,70 :: 		
0x00DE	0xFF83C000  	MOVFF       R0, GLCD_DataPort
;__Lib_Glcd.c,71 :: 		
0x00E2	0xDFA5      	RCALL       __Lib_Glcd_Strobe
;__Lib_Glcd.c,72 :: 		
L_end_Glcd_Set_X:
0x00E4	0x0012      	RETURN      0
; end of _Glcd_Set_X
_Glcd_Dot:
;__Lib_Glcd.c,321 :: 		
;__Lib_Glcd.c,325 :: 		
0x00E6	0x0E00      	MOVLW       0
0x00E8	0x0100      	MOVLB       0
0x00EA	0x5DF3      	SUBWF       FARG_Glcd_Dot_x_pos, 0, 1
0x00EC	0xE30A      	BNC         L__Glcd_Dot299
0x00EE	0x51F3      	MOVF        FARG_Glcd_Dot_x_pos, 0, 1
0x00F0	0x087F      	SUBLW       127
0x00F2	0xE307      	BNC         L__Glcd_Dot299
0x00F4	0x0E00      	MOVLW       0
0x00F6	0x5DF4      	SUBWF       FARG_Glcd_Dot_y_pos, 0, 1
0x00F8	0xE304      	BNC         L__Glcd_Dot299
0x00FA	0x51F4      	MOVF        FARG_Glcd_Dot_y_pos, 0, 1
0x00FC	0x083F      	SUBLW       63
0x00FE	0xE301      	BNC         L__Glcd_Dot299
0x0100	0xD001      	BRA         L_Glcd_Dot36
L__Glcd_Dot299:
;__Lib_Glcd.c,326 :: 		
0x0102	0xD04A      	BRA         L_end_Glcd_Dot
L_Glcd_Dot36:
;__Lib_Glcd.c,329 :: 		
0x0104	0xF0F9C0F3  	MOVFF       FARG_Glcd_Dot_x_pos, FARG_Glcd_Set_Side_x_pos
0x0108	0xDF9F      	RCALL       _Glcd_Set_Side
;__Lib_Glcd.c,330 :: 		
0x010A	0xF0F9C0F4  	MOVFF       FARG_Glcd_Dot_y_pos, FARG_Glcd_Set_Page_page
0x010E	0x33F9      	RRCF        FARG_Glcd_Set_Page_page, 1, 1
0x0110	0x9FF9      	BCF         FARG_Glcd_Set_Page_page, 7, 1
0x0112	0x33F9      	RRCF        FARG_Glcd_Set_Page_page, 1, 1
0x0114	0x9FF9      	BCF         FARG_Glcd_Set_Page_page, 7, 1
0x0116	0x33F9      	RRCF        FARG_Glcd_Set_Page_page, 1, 1
0x0118	0x9FF9      	BCF         FARG_Glcd_Set_Page_page, 7, 1
0x011A	0xDF8E      	RCALL       _Glcd_Set_Page
;__Lib_Glcd.c,331 :: 		
0x011C	0xF0F9C0F3  	MOVFF       FARG_Glcd_Dot_x_pos, FARG_Glcd_Set_X_x_pos
0x0120	0xDFCF      	RCALL       _Glcd_Set_X
;__Lib_Glcd.c,334 :: 		
0x0122	0xDFA0      	RCALL       _Glcd_Read_Data
0x0124	0xF0F8C000  	MOVFF       R0, Glcd_Dot_ddata_L0
;__Lib_Glcd.c,335 :: 		
0x0128	0xDF9D      	RCALL       _Glcd_Read_Data
0x012A	0xF0F8C000  	MOVFF       R0, Glcd_Dot_ddata_L0
;__Lib_Glcd.c,337 :: 		
0x012E	0xF0F9C0F4  	MOVFF       FARG_Glcd_Dot_y_pos, FARG_Glcd_Set_Page_page
0x0132	0x33F9      	RRCF        FARG_Glcd_Set_Page_page, 1, 1
0x0134	0x9FF9      	BCF         FARG_Glcd_Set_Page_page, 7, 1
0x0136	0x33F9      	RRCF        FARG_Glcd_Set_Page_page, 1, 1
0x0138	0x9FF9      	BCF         FARG_Glcd_Set_Page_page, 7, 1
0x013A	0x33F9      	RRCF        FARG_Glcd_Set_Page_page, 1, 1
0x013C	0x9FF9      	BCF         FARG_Glcd_Set_Page_page, 7, 1
0x013E	0xDF7C      	RCALL       _Glcd_Set_Page
;__Lib_Glcd.c,338 :: 		
0x0140	0xF0F9C0F3  	MOVFF       FARG_Glcd_Dot_x_pos, FARG_Glcd_Set_X_x_pos
0x0144	0xDFBD      	RCALL       _Glcd_Set_X
;__Lib_Glcd.c,340 :: 		
0x0146	0x0E07      	MOVLW       7
0x0148	0x15F4      	ANDWF       FARG_Glcd_Dot_y_pos, 0, 1
0x014A	0x6E00      	MOVWF       R0 
0x014C	0xF0F6C000  	MOVFF       R0, Glcd_Dot_bit_mask1_L0
;__Lib_Glcd.c,341 :: 		
0x0150	0xF001C000  	MOVFF       R0, R1
0x0154	0x0E01      	MOVLW       1
0x0156	0x6E00      	MOVWF       R0 
0x0158	0x5001      	MOVF        R1, 0 
L__Glcd_Dot324:
0x015A	0xE004      	BZ          L__Glcd_Dot325
0x015C	0x3600      	RLCF        R0, 1 
0x015E	0x9000      	BCF         R0, 0 
0x0160	0x0FFF      	ADDLW       255
0x0162	0xD7FB      	BRA         L__Glcd_Dot324
L__Glcd_Dot325:
0x0164	0xF0F6C000  	MOVFF       R0, Glcd_Dot_bit_mask1_L0
;__Lib_Glcd.c,342 :: 		
0x0168	0x1C00      	COMF        R0, 0 
0x016A	0x6FF7      	MOVWF       Glcd_Dot_bit_mask0_L0, 1
;__Lib_Glcd.c,345 :: 		
0x016C	0xD009      	BRA         L_Glcd_Dot37
;__Lib_Glcd.c,346 :: 		
L_Glcd_Dot39:
;__Lib_Glcd.c,347 :: 		
0x016E	0x51F7      	MOVF        Glcd_Dot_bit_mask0_L0, 0, 1
0x0170	0x17F8      	ANDWF       Glcd_Dot_ddata_L0, 1, 1
;__Lib_Glcd.c,348 :: 		
0x0172	0xD00F      	BRA         L_Glcd_Dot38
;__Lib_Glcd.c,349 :: 		
L_Glcd_Dot40:
;__Lib_Glcd.c,350 :: 		
0x0174	0x51F6      	MOVF        Glcd_Dot_bit_mask1_L0, 0, 1
0x0176	0x13F8      	IORWF       Glcd_Dot_ddata_L0, 1, 1
;__Lib_Glcd.c,351 :: 		
0x0178	0xD00C      	BRA         L_Glcd_Dot38
;__Lib_Glcd.c,352 :: 		
L_Glcd_Dot41:
;__Lib_Glcd.c,353 :: 		
0x017A	0x51F6      	MOVF        Glcd_Dot_bit_mask1_L0, 0, 1
0x017C	0x1BF8      	XORWF       Glcd_Dot_ddata_L0, 1, 1
;__Lib_Glcd.c,354 :: 		
0x017E	0xD009      	BRA         L_Glcd_Dot38
L_Glcd_Dot37:
0x0180	0x51F5      	MOVF        FARG_Glcd_Dot_color, 0, 1
0x0182	0x0A00      	XORLW       0
0x0184	0xE0F4      	BZ          L_Glcd_Dot39
0x0186	0x51F5      	MOVF        FARG_Glcd_Dot_color, 0, 1
0x0188	0x0A01      	XORLW       1
0x018A	0xE0F4      	BZ          L_Glcd_Dot40
0x018C	0x51F5      	MOVF        FARG_Glcd_Dot_color, 0, 1
0x018E	0x0A02      	XORLW       2
0x0190	0xE0F4      	BZ          L_Glcd_Dot41
L_Glcd_Dot38:
;__Lib_Glcd.c,356 :: 		
0x0192	0xF0F9C0F8  	MOVFF       Glcd_Dot_ddata_L0, FARG_Glcd_Write_Data_ddata
0x0196	0xDF8D      	RCALL       _Glcd_Write_Data
;__Lib_Glcd.c,357 :: 		
L_end_Glcd_Dot:
0x0198	0x0012      	RETURN      0
; end of _Glcd_Dot
_Glcd_V_Line:
;__Lib_Glcd.c,473 :: 		
;__Lib_Glcd.c,475 :: 		
0x019A	0x0E00      	MOVLW       0
0x019C	0x0100      	MOVLB       0
0x019E	0x5DF0      	SUBWF       FARG_Glcd_V_Line_x_pos, 0, 1
0x01A0	0xE304      	BNC         L__Glcd_V_Line301
0x01A2	0x51F0      	MOVF        FARG_Glcd_V_Line_x_pos, 0, 1
0x01A4	0x087F      	SUBLW       127
0x01A6	0xE301      	BNC         L__Glcd_V_Line301
0x01A8	0xD001      	BRA         L_Glcd_V_Line74
L__Glcd_V_Line301:
;__Lib_Glcd.c,476 :: 		
0x01AA	0xD027      	BRA         L_end_Glcd_V_Line
L_Glcd_V_Line74:
;__Lib_Glcd.c,478 :: 		
0x01AC	0x0E00      	MOVLW       0
0x01AE	0x5DEE      	SUBWF       FARG_Glcd_V_Line_y_start, 0, 1
0x01B0	0xA0D8      	BTFSS       STATUS, 0 
;__Lib_Glcd.c,479 :: 		
0x01B2	0x6BEE      	CLRF        FARG_Glcd_V_Line_y_start, 1
L_Glcd_V_Line75:
;__Lib_Glcd.c,480 :: 		
0x01B4	0x51EE      	MOVF        FARG_Glcd_V_Line_y_start, 0, 1
0x01B6	0x083F      	SUBLW       63
0x01B8	0xE202      	BC          L_Glcd_V_Line76
;__Lib_Glcd.c,481 :: 		
0x01BA	0x0E3F      	MOVLW       63
0x01BC	0x6FEE      	MOVWF       FARG_Glcd_V_Line_y_start, 1
L_Glcd_V_Line76:
;__Lib_Glcd.c,483 :: 		
0x01BE	0x0E00      	MOVLW       0
0x01C0	0x5DEF      	SUBWF       FARG_Glcd_V_Line_y_end, 0, 1
0x01C2	0xA0D8      	BTFSS       STATUS, 0 
;__Lib_Glcd.c,484 :: 		
0x01C4	0x6BEF      	CLRF        FARG_Glcd_V_Line_y_end, 1
L_Glcd_V_Line77:
;__Lib_Glcd.c,485 :: 		
0x01C6	0x51EF      	MOVF        FARG_Glcd_V_Line_y_end, 0, 1
0x01C8	0x083F      	SUBLW       63
0x01CA	0xE202      	BC          L_Glcd_V_Line78
;__Lib_Glcd.c,486 :: 		
0x01CC	0x0E3F      	MOVLW       63
0x01CE	0x6FEF      	MOVWF       FARG_Glcd_V_Line_y_end, 1
L_Glcd_V_Line78:
;__Lib_Glcd.c,488 :: 		
0x01D0	0x51EE      	MOVF        FARG_Glcd_V_Line_y_start, 0, 1
0x01D2	0x5DEF      	SUBWF       FARG_Glcd_V_Line_y_end, 0, 1
0x01D4	0xE206      	BC          L_Glcd_V_Line79
;__Lib_Glcd.c,489 :: 		
0x01D6	0xF0F2C0EE  	MOVFF       FARG_Glcd_V_Line_y_start, Glcd_V_Line_loc_L0
;__Lib_Glcd.c,490 :: 		
0x01DA	0xF0EEC0EF  	MOVFF       FARG_Glcd_V_Line_y_end, FARG_Glcd_V_Line_y_start
;__Lib_Glcd.c,491 :: 		
0x01DE	0xF0EFC0F2  	MOVFF       Glcd_V_Line_loc_L0, FARG_Glcd_V_Line_y_end
;__Lib_Glcd.c,492 :: 		
L_Glcd_V_Line79:
;__Lib_Glcd.c,494 :: 		
L_Glcd_V_Line80:
0x01E2	0x51EE      	MOVF        FARG_Glcd_V_Line_y_start, 0, 1
0x01E4	0x5DEF      	SUBWF       FARG_Glcd_V_Line_y_end, 0, 1
0x01E6	0xE309      	BNC         L_Glcd_V_Line81
;__Lib_Glcd.c,495 :: 		
0x01E8	0xF0F3C0F0  	MOVFF       FARG_Glcd_V_Line_x_pos, FARG_Glcd_Dot_x_pos
0x01EC	0xF0F4C0EE  	MOVFF       FARG_Glcd_V_Line_y_start, FARG_Glcd_Dot_y_pos
0x01F0	0xF0F5C0F1  	MOVFF       FARG_Glcd_V_Line_color, FARG_Glcd_Dot_color
0x01F4	0xDF78      	RCALL       _Glcd_Dot
;__Lib_Glcd.c,496 :: 		
0x01F6	0x2BEE      	INCF        FARG_Glcd_V_Line_y_start, 1, 1
;__Lib_Glcd.c,497 :: 		
0x01F8	0xD7F4      	BRA         L_Glcd_V_Line80
L_Glcd_V_Line81:
;__Lib_Glcd.c,498 :: 		
L_end_Glcd_V_Line:
0x01FA	0x0012      	RETURN      0
; end of _Glcd_V_Line
_Mul_16X16_U:
;__Lib_Math.c,440 :: 		
;__Lib_Math.c,447 :: 		
0x01FC	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,448 :: 		
0x01FE	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,449 :: 		
0x0200	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,450 :: 		
0x0202	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,451 :: 		
0x0204	0x0204      	MULWF       R4, 0
;__Lib_Math.c,453 :: 		
0x0206	0xF009CFF4  	MOVFF       PRODH, R9
;__Lib_Math.c,454 :: 		
0x020A	0xF008CFF3  	MOVFF       PRODL, R8
;__Lib_Math.c,455 :: 		
0x020E	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,456 :: 		
0x0210	0x0205      	MULWF       R5, 0
;__Lib_Math.c,458 :: 		
0x0212	0xF00BCFF4  	MOVFF       PRODH, R11
;__Lib_Math.c,459 :: 		
0x0216	0xF00ACFF3  	MOVFF       PRODL, R10
;__Lib_Math.c,460 :: 		
0x021A	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,461 :: 		
0x021C	0x0205      	MULWF       R5, 0
;__Lib_Math.c,463 :: 		
0x021E	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,464 :: 		
0x0220	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,465 :: 		
0x0222	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,466 :: 		
0x0224	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,467 :: 		
0x0226	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,468 :: 		
0x0228	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,469 :: 		
0x022A	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,470 :: 		
0x022C	0x0204      	MULWF       R4, 0
;__Lib_Math.c,472 :: 		
0x022E	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,473 :: 		
0x0230	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,474 :: 		
0x0232	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,475 :: 		
0x0234	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,476 :: 		
0x0236	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,477 :: 		
0x0238	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,479 :: 		
0x023A	0xF000C008  	MOVFF       R8, R0
;__Lib_Math.c,480 :: 		
0x023E	0xF001C009  	MOVFF       R9, R1
;__Lib_Math.c,481 :: 		
0x0242	0xF002C00A  	MOVFF       R10, R2
;__Lib_Math.c,482 :: 		
0x0246	0xF003C00B  	MOVFF       R11, R3
;__Lib_Math.c,485 :: 		
L_end_Mul_16X16_U:
0x024A	0x0012      	RETURN      0
; end of _Mul_16X16_U
_srand:
;__Lib_CStdlib.c,301 :: 		
;__Lib_CStdlib.c,302 :: 		
0x024C	0xF0D1C0EA  	MOVFF       FARG_srand_x, __Lib_CStdlib_randx
0x0250	0xF0D2C0EB  	MOVFF       FARG_srand_x+1, __Lib_CStdlib_randx+1
0x0254	0x0E00      	MOVLW       0
0x0256	0x0100      	MOVLB       0
0x0258	0x6FD3      	MOVWF       __Lib_CStdlib_randx+2, 1
0x025A	0x6FD4      	MOVWF       __Lib_CStdlib_randx+3, 1
;__Lib_CStdlib.c,303 :: 		
0x025C	0x0E01      	MOVLW       1
0x025E	0x6FCA      	MOVWF       __Lib_CStdlib_randf, 1
;__Lib_CStdlib.c,304 :: 		
L_end_srand:
0x0260	0x0012      	RETURN      0
; end of _srand
_Delay_500us:
;__Lib_Delays.c,27 :: 		void Delay_500us() {
;__Lib_Delays.c,28 :: 		Delay_us(498);
0x0262	0x0E02      	MOVLW       2
0x0264	0x6E0C      	MOVWF       R12, 0
0x0266	0x0E49      	MOVLW       73
0x0268	0x6E0D      	MOVWF       R13, 0
L_Delay_500us4:
0x026A	0x2E0D      	DECFSZ      R13, 1, 0
0x026C	0xD7FE      	BRA         L_Delay_500us4
0x026E	0x2E0C      	DECFSZ      R12, 1, 0
0x0270	0xD7FC      	BRA         L_Delay_500us4
0x0272	0x0000      	NOP
0x0274	0x0000      	NOP
;__Lib_Delays.c,29 :: 		}
L_end_Delay_500us:
0x0276	0x0012      	RETURN      0
; end of _Delay_500us
_UART1_Read:
;__Lib_UART_c67.c,39 :: 		
;__Lib_UART_c67.c,42 :: 		
0x0278	0xF001CFAE  	MOVFF       RCREG, R1
;__Lib_UART_c67.c,43 :: 		
0x027C	0xA2AB      	BTFSS       RCSTA, 1 
0x027E	0xD002      	BRA         L_UART1_Read2
;__Lib_UART_c67.c,44 :: 		
0x0280	0x98AB      	BCF         RCSTA, 4 
;__Lib_UART_c67.c,45 :: 		
0x0282	0x88AB      	BSF         RCSTA, 4 
;__Lib_UART_c67.c,46 :: 		
L_UART1_Read2:
;__Lib_UART_c67.c,47 :: 		
0x0284	0xF000C001  	MOVFF       R1, R0
;__Lib_UART_c67.c,48 :: 		
L_end_UART1_Read:
0x0288	0x0012      	RETURN      0
; end of _UART1_Read
_UART1_Data_Ready:
;__Lib_UART_c67.c,34 :: 		
;__Lib_UART_c67.c,35 :: 		
0x028A	0x0E00      	MOVLW       0
0x028C	0xBA9E      	BTFSC       PIR1, 5 
0x028E	0x0E01      	MOVLW       1
0x0290	0x6E00      	MOVWF       R0 
;__Lib_UART_c67.c,36 :: 		
L_end_UART1_Data_Ready:
0x0292	0x0012      	RETURN      0
; end of _UART1_Data_Ready
_DrawBall:
;pong.c,58 :: 		void DrawBall(unsigned short x, unsigned short y){
;pong.c,59 :: 		Glcd_Dot(x, y, 1);
0x0294	0xF0F3C0EA  	MOVFF       FARG_DrawBall_x, FARG_Glcd_Dot_x_pos
0x0298	0xF0F4C0EB  	MOVFF       FARG_DrawBall_y, FARG_Glcd_Dot_y_pos
0x029C	0x0E01      	MOVLW       1
0x029E	0x0100      	MOVLB       0
0x02A0	0x6FF5      	MOVWF       FARG_Glcd_Dot_color, 1
0x02A2	0xDF21      	RCALL       _Glcd_Dot
;pong.c,60 :: 		}
L_end_DrawBall:
0x02A4	0x0012      	RETURN      0
; end of _DrawBall
_Mul_32x32_U:
;__Lib_Math.c,1616 :: 		
;__Lib_Math.c,1631 :: 		
0x02A6	0x0E22      	MOVLW       34
;__Lib_Math.c,1632 :: 		
0x02A8	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,1633 :: 		
0x02AA	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,1634 :: 		
0x02AC	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,1635 :: 		
0x02AE	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,1636 :: 		
0x02B0	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,1638 :: 		
_NEXT:
;__Lib_Math.c,1642 :: 		
0x02B2	0x060C      	DECF        R12, 1, 0
;__Lib_Math.c,1643 :: 		
0x02B4	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1644 :: 		
0x02B6	0xD01F      	BRA         _EXIT2
;__Lib_Math.c,1645 :: 		
0x02B8	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,1647 :: 		
_LOOP:
;__Lib_Math.c,1656 :: 		
0x02BA	0x320B      	RRCF        R11, 1, 0
;__Lib_Math.c,1657 :: 		
0x02BC	0x320A      	RRCF        R10, 1, 0
;__Lib_Math.c,1658 :: 		
0x02BE	0x3209      	RRCF        R9, 1, 0
;__Lib_Math.c,1659 :: 		
0x02C0	0x3208      	RRCF        R8, 1, 0
;__Lib_Math.c,1660 :: 		
0x02C2	0x3203      	RRCF        R3, 1, 0
;__Lib_Math.c,1661 :: 		
0x02C4	0x3202      	RRCF        R2, 1, 0
;__Lib_Math.c,1662 :: 		
0x02C6	0x3201      	RRCF        R1, 1, 0
;__Lib_Math.c,1663 :: 		
0x02C8	0x3200      	RRCF        R0, 1, 0
;__Lib_Math.c,1668 :: 		
0x02CA	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1669 :: 		
0x02CC	0xD7F2      	BRA         _NEXT
;__Lib_Math.c,1670 :: 		
0x02CE	0x060C      	DECF        R12, 1, 0
;__Lib_Math.c,1671 :: 		
0x02D0	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1672 :: 		
0x02D2	0xD009      	BRA         _EXIT1
;__Lib_Math.c,1679 :: 		
0x02D4	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1680 :: 		
0x02D6	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1681 :: 		
0x02D8	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1684 :: 		
0x02DA	0x2209      	ADDWFC      R9, 1, 0
;__Lib_Math.c,1685 :: 		
0x02DC	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1688 :: 		
0x02DE	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,1689 :: 		
0x02E0	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1692 :: 		
0x02E2	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,1694 :: 		
0x02E4	0xD7EA      	BRA         _LOOP
;__Lib_Math.c,1696 :: 		
_EXIT1:
;__Lib_Math.c,1701 :: 		
0x02E6	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1702 :: 		
0x02E8	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1703 :: 		
0x02EA	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1706 :: 		
0x02EC	0x2209      	ADDWFC      R9, 1, 0
;__Lib_Math.c,1707 :: 		
0x02EE	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1710 :: 		
0x02F0	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,1711 :: 		
0x02F2	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1714 :: 		
0x02F4	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,1717 :: 		
_EXIT2:
;__Lib_Math.c,1719 :: 		
L_end_Mul_32x32_U:
0x02F6	0x0012      	RETURN      0
; end of _Mul_32x32_U
_UART1_Write:
;__Lib_UART_c67.c,58 :: 		
;__Lib_UART_c67.c,59 :: 		
L_UART1_Write3:
0x02F8	0xB2AC      	BTFSC       TXSTA, 1 
0x02FA	0xD002      	BRA         L_UART1_Write4
;__Lib_UART_c67.c,60 :: 		
0x02FC	0x0000      	NOP
0x02FE	0xD7FC      	BRA         L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,61 :: 		
0x0300	0xFFADC0EA  	MOVFF       FARG_UART1_Write_data_, TXREG
;__Lib_UART_c67.c,62 :: 		
L_end_UART1_Write:
0x0304	0x0012      	RETURN      0
; end of _UART1_Write
_draw_player:
;pong.c,50 :: 		void draw_player(unsigned short x, unsigned short y, unsigned short w, unsigned short h){
;pong.c,51 :: 		Glcd_V_Line(y, y+h, x, 1);
0x0306	0xF0EEC0EB  	MOVFF       FARG_draw_player_y, FARG_Glcd_V_Line_y_start
0x030A	0x0100      	MOVLB       0
0x030C	0x51ED      	MOVF        FARG_draw_player_h, 0, 1
0x030E	0x25EB      	ADDWF       FARG_draw_player_y, 0, 1
0x0310	0x6FEF      	MOVWF       FARG_Glcd_V_Line_y_end, 1
0x0312	0xF0F0C0EA  	MOVFF       FARG_draw_player_x, FARG_Glcd_V_Line_x_pos
0x0316	0x0E01      	MOVLW       1
0x0318	0x6FF1      	MOVWF       FARG_Glcd_V_Line_color, 1
0x031A	0xDF3F      	RCALL       _Glcd_V_Line
;pong.c,52 :: 		}
L_end_draw_player:
0x031C	0x0012      	RETURN      0
; end of _draw_player
_Div_16x16_S_L:
;__Lib_Math.c,139 :: 		
;__Lib_Math.c,146 :: 		
0x031E	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,147 :: 		
0x0320	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,148 :: 		
0x0322	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,149 :: 		
0x0324	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,150 :: 		
0x0326	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,151 :: 		
0x0328	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,152 :: 		
0x032A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,153 :: 		
0x032C	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,154 :: 		
0x032E	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,155 :: 		
0x0330	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,156 :: 		
0x0332	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,158 :: 		
0x0334	0x0E0F      	MOVLW       15
;__Lib_Math.c,159 :: 		
0x0336	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,161 :: 		
0x0338	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,162 :: 		
0x033A	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,163 :: 		
0x033C	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,164 :: 		
0x033E	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,166 :: 		
0x0340	0xA000      	BTFSS       R0, 0, 0
;__Lib_Math.c,167 :: 		
0x0342	0xD006      	BRA         $+14
;__Lib_Math.c,168 :: 		
0x0344	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,169 :: 		
0x0346	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,170 :: 		
0x0348	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,171 :: 		
0x034A	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,172 :: 		
0x034C	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,173 :: 		
0x034E	0xD005      	BRA         $+12
;__Lib_Math.c,175 :: 		
0x0350	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,176 :: 		
0x0352	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,177 :: 		
0x0354	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,178 :: 		
0x0356	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,179 :: 		
0x0358	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,181 :: 		
0x035A	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,182 :: 		
0x035C	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,184 :: 		
0x035E	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,185 :: 		
0x0360	0xD7EB      	BRA         $-40
;__Lib_Math.c,187 :: 		
0x0362	0xB000      	BTFSC       R0, 0, 0
;__Lib_Math.c,188 :: 		
0x0364	0xD006      	BRA         $+14
;__Lib_Math.c,189 :: 		
0x0366	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,190 :: 		
0x0368	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,191 :: 		
0x036A	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,192 :: 		
0x036C	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,193 :: 		
0x036E	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,194 :: 		
0x0370	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,195 :: 		
0x0372	0x0000      	NOP
;__Lib_Math.c,197 :: 		
L_end_Div_16x16_S_L:
0x0374	0x0012      	RETURN      0
; end of _Div_16x16_S_L
_check_collision:
;pong.c,85 :: 		short check_collision(paddles paleta, balls bola, unsigned short a){ //Retorna 1 si detecta colision / 0 si no
;pong.c,86 :: 		if(a == 1){
0x0376	0x0100      	MOVLB       0
0x0378	0x51E8      	MOVF        FARG_check_collision_a, 0, 1
0x037A	0x0A01      	XORLW       1
0x037C	0xE12E      	BNZ         L_check_collision0
;pong.c,88 :: 		if((bola.x+1 == paleta.x) && (bola.y >= paleta.y) && (bola.y <= (paleta.y + paleta.h))){ //check collision con el lado izquierdo
0x037E	0x51E4      	MOVF        FARG_check_collision_bola, 0, 1
0x0380	0x0F01      	ADDLW       1
0x0382	0x6E01      	MOVWF       R1 
0x0384	0x6A02      	CLRF        R2 
0x0386	0x0E00      	MOVLW       0
0x0388	0xBFE4      	BTFSC       FARG_check_collision_bola, 7, 1
0x038A	0x0EFF      	MOVLW       255
0x038C	0x2202      	ADDWFC      R2, 1 
0x038E	0x0E00      	MOVLW       0
0x0390	0x1802      	XORWF       R2, 0 
0x0392	0xE102      	BNZ         L__check_collision223
0x0394	0x51E0      	MOVF        FARG_check_collision_paleta, 0, 1
0x0396	0x1801      	XORWF       R1, 0 
L__check_collision223:
0x0398	0xE11E      	BNZ         L_check_collision3
0x039A	0x0E80      	MOVLW       128
0x039C	0xBFE5      	BTFSC       FARG_check_collision_bola+1, 7, 1
0x039E	0x0E7F      	MOVLW       127
0x03A0	0x6E00      	MOVWF       R0 
0x03A2	0x0E80      	MOVLW       128
0x03A4	0x5C00      	SUBWF       R0, 0 
0x03A6	0xE102      	BNZ         L__check_collision224
0x03A8	0x51E1      	MOVF        FARG_check_collision_paleta+1, 0, 1
0x03AA	0x5DE5      	SUBWF       FARG_check_collision_bola+1, 0, 1
L__check_collision224:
0x03AC	0xE314      	BNC         L_check_collision3
0x03AE	0x51E3      	MOVF        FARG_check_collision_paleta+3, 0, 1
0x03B0	0x25E1      	ADDWF       FARG_check_collision_paleta+1, 0, 1
0x03B2	0x6E01      	MOVWF       R1 
0x03B4	0x6A02      	CLRF        R2 
0x03B6	0x0E00      	MOVLW       0
0x03B8	0x2202      	ADDWFC      R2, 1 
0x03BA	0x0E80      	MOVLW       128
0x03BC	0x1802      	XORWF       R2, 0 
0x03BE	0x6E00      	MOVWF       R0 
0x03C0	0x0E80      	MOVLW       128
0x03C2	0xBFE5      	BTFSC       FARG_check_collision_bola+1, 7, 1
0x03C4	0x0E7F      	MOVLW       127
0x03C6	0x5C00      	SUBWF       R0, 0 
0x03C8	0xE102      	BNZ         L__check_collision225
0x03CA	0x51E5      	MOVF        FARG_check_collision_bola+1, 0, 1
0x03CC	0x5C01      	SUBWF       R1, 0 
L__check_collision225:
0x03CE	0xE303      	BNC         L_check_collision3
L__check_collision211:
;pong.c,89 :: 		return 1;
0x03D0	0x0E01      	MOVLW       1
0x03D2	0x6E00      	MOVWF       R0 
0x03D4	0xD02F      	BRA         L_end_check_collision
;pong.c,90 :: 		}
L_check_collision3:
;pong.c,92 :: 		return 0;
0x03D6	0x6A00      	CLRF        R0 
0x03D8	0xD02D      	BRA         L_end_check_collision
;pong.c,94 :: 		}
L_check_collision0:
;pong.c,96 :: 		if((bola.x == paleta.x + 1) && (bola.y >= paleta.y) && (bola.y <= (paleta.y + paleta.h))){ // check collision con el lado derecho
0x03DA	0x51E0      	MOVF        FARG_check_collision_paleta, 0, 1
0x03DC	0x0F01      	ADDLW       1
0x03DE	0x6E01      	MOVWF       R1 
0x03E0	0x6A02      	CLRF        R2 
0x03E2	0x0E00      	MOVLW       0
0x03E4	0x2202      	ADDWFC      R2, 1 
0x03E6	0x0E00      	MOVLW       0
0x03E8	0xBFE4      	BTFSC       FARG_check_collision_bola, 7, 1
0x03EA	0x0EFF      	MOVLW       255
0x03EC	0x1802      	XORWF       R2, 0 
0x03EE	0xE102      	BNZ         L__check_collision226
0x03F0	0x5001      	MOVF        R1, 0 
0x03F2	0x19E4      	XORWF       FARG_check_collision_bola, 0, 1
L__check_collision226:
0x03F4	0xE11E      	BNZ         L_check_collision8
0x03F6	0x0E80      	MOVLW       128
0x03F8	0xBFE5      	BTFSC       FARG_check_collision_bola+1, 7, 1
0x03FA	0x0E7F      	MOVLW       127
0x03FC	0x6E00      	MOVWF       R0 
0x03FE	0x0E80      	MOVLW       128
0x0400	0x5C00      	SUBWF       R0, 0 
0x0402	0xE102      	BNZ         L__check_collision227
0x0404	0x51E1      	MOVF        FARG_check_collision_paleta+1, 0, 1
0x0406	0x5DE5      	SUBWF       FARG_check_collision_bola+1, 0, 1
L__check_collision227:
0x0408	0xE314      	BNC         L_check_collision8
0x040A	0x51E3      	MOVF        FARG_check_collision_paleta+3, 0, 1
0x040C	0x25E1      	ADDWF       FARG_check_collision_paleta+1, 0, 1
0x040E	0x6E01      	MOVWF       R1 
0x0410	0x6A02      	CLRF        R2 
0x0412	0x0E00      	MOVLW       0
0x0414	0x2202      	ADDWFC      R2, 1 
0x0416	0x0E80      	MOVLW       128
0x0418	0x1802      	XORWF       R2, 0 
0x041A	0x6E00      	MOVWF       R0 
0x041C	0x0E80      	MOVLW       128
0x041E	0xBFE5      	BTFSC       FARG_check_collision_bola+1, 7, 1
0x0420	0x0E7F      	MOVLW       127
0x0422	0x5C00      	SUBWF       R0, 0 
0x0424	0xE102      	BNZ         L__check_collision228
0x0426	0x51E5      	MOVF        FARG_check_collision_bola+1, 0, 1
0x0428	0x5C01      	SUBWF       R1, 0 
L__check_collision228:
0x042A	0xE303      	BNC         L_check_collision8
L__check_collision210:
;pong.c,97 :: 		return 1;
0x042C	0x0E01      	MOVLW       1
0x042E	0x6E00      	MOVWF       R0 
0x0430	0xD001      	BRA         L_end_check_collision
;pong.c,98 :: 		}
L_check_collision8:
;pong.c,100 :: 		return 0;
0x0432	0x6A00      	CLRF        R0 
;pong.c,103 :: 		}
L_end_check_collision:
0x0434	0x0012      	RETURN      0
; end of _check_collision
_Button:
;__Lib_Button.c,6 :: 		
;__Lib_Button.c,8 :: 		
0x0436	0x0100      	MOVLB       0
0x0438	0x6BE6      	CLRF        Button_rslt_L0, 1
;__Lib_Button.c,11 :: 		
0x043A	0xF001C0E2  	MOVFF       FARG_Button_pin, R1
0x043E	0x0E01      	MOVLW       1
0x0440	0x6E00      	MOVWF       R0 
0x0442	0x5001      	MOVF        R1, 0 
L__Button5:
0x0444	0xE004      	BZ          L__Button6
0x0446	0x3600      	RLCF        R0, 1 
0x0448	0x9000      	BCF         R0, 0 
0x044A	0x0FFF      	ADDLW       255
0x044C	0xD7FB      	BRA         L__Button5
L__Button6:
0x044E	0xF0E5C000  	MOVFF       R0, Button_pMask_L0
;__Lib_Button.c,13 :: 		
0x0452	0xFFE9C0E0  	MOVFF       FARG_Button_port, FSR0L
0x0456	0xFFEAC0E1  	MOVFF       FARG_Button_port+1, FSR0H
0x045A	0x5000      	MOVF        R0, 0 
0x045C	0x14EE      	ANDWF       POSTINC0, 0 
0x045E	0x6E01      	MOVWF       R1 
0x0460	0x5201      	MOVF        R1, 1 
0x0462	0x0E01      	MOVLW       1
0x0464	0xA4D8      	BTFSS       STATUS, 2 
0x0466	0x0E00      	MOVLW       0
0x0468	0x6E00      	MOVWF       R0 
0x046A	0x51E4      	MOVF        FARG_Button_active_state, 0, 1
0x046C	0x1A00      	XORWF       R0, 1 
0x046E	0xE018      	BZ          L_Button0
;__Lib_Button.c,15 :: 		
L_Button1:
0x0470	0x51E3      	MOVF        FARG_Button_time_ms, 0, 1
0x0472	0x0800      	SUBLW       0
0x0474	0xE204      	BC          L_Button2
;__Lib_Button.c,16 :: 		
0x0476	0xDEF5      	RCALL       _Delay_500us
;__Lib_Button.c,17 :: 		
0x0478	0xDEF4      	RCALL       _Delay_500us
;__Lib_Button.c,18 :: 		
0x047A	0x07E3      	DECF        FARG_Button_time_ms, 1, 1
;__Lib_Button.c,19 :: 		
0x047C	0xD7F9      	BRA         L_Button1
L_Button2:
;__Lib_Button.c,21 :: 		
0x047E	0xFFE9C0E0  	MOVFF       FARG_Button_port, FSR0L
0x0482	0xFFEAC0E1  	MOVFF       FARG_Button_port+1, FSR0H
0x0486	0x51E5      	MOVF        Button_pMask_L0, 0, 1
0x0488	0x14EE      	ANDWF       POSTINC0, 0 
0x048A	0x6E01      	MOVWF       R1 
0x048C	0x5201      	MOVF        R1, 1 
0x048E	0x0E01      	MOVLW       1
0x0490	0xA4D8      	BTFSS       STATUS, 2 
0x0492	0x0E00      	MOVLW       0
0x0494	0x6E00      	MOVWF       R0 
0x0496	0x51E4      	MOVF        FARG_Button_active_state, 0, 1
0x0498	0x1A00      	XORWF       R0, 1 
0x049A	0xE002      	BZ          L_Button3
;__Lib_Button.c,22 :: 		
0x049C	0x0EFF      	MOVLW       255
0x049E	0x6FE6      	MOVWF       Button_rslt_L0, 1
L_Button3:
;__Lib_Button.c,23 :: 		
L_Button0:
;__Lib_Button.c,25 :: 		
0x04A0	0xF000C0E6  	MOVFF       Button_rslt_L0, R0
;__Lib_Button.c,26 :: 		
L_end_Button:
0x04A4	0x0012      	RETURN      0
; end of _Button
_rand:
;__Lib_CStdlib.c,307 :: 		
;__Lib_CStdlib.c,308 :: 		
0x04A6	0x0100      	MOVLB       0
0x04A8	0x53CA      	MOVF        __Lib_CStdlib_randf, 1, 1
0x04AA	0xE105      	BNZ         L_rand75
;__Lib_CStdlib.c,309 :: 		
0x04AC	0x0E01      	MOVLW       1
0x04AE	0x6FEA      	MOVWF       FARG_srand_x, 1
0x04B0	0x0E00      	MOVLW       0
0x04B2	0x6FEB      	MOVWF       FARG_srand_x+1, 1
0x04B4	0xDECB      	RCALL       _srand
L_rand75:
;__Lib_CStdlib.c,310 :: 		
0x04B6	0xF000C0D1  	MOVFF       __Lib_CStdlib_randx, R0
0x04BA	0xF001C0D2  	MOVFF       __Lib_CStdlib_randx+1, R1
0x04BE	0xF002C0D3  	MOVFF       __Lib_CStdlib_randx+2, R2
0x04C2	0xF003C0D4  	MOVFF       __Lib_CStdlib_randx+3, R3
0x04C6	0x0E6D      	MOVLW       109
0x04C8	0x6E04      	MOVWF       R4 
0x04CA	0x0E4E      	MOVLW       78
0x04CC	0x6E05      	MOVWF       R5 
0x04CE	0x0EC6      	MOVLW       198
0x04D0	0x6E06      	MOVWF       R6 
0x04D2	0x0E41      	MOVLW       65
0x04D4	0x6E07      	MOVWF       R7 
0x04D6	0xDEE7      	RCALL       _Mul_32x32_U
0x04D8	0x0E39      	MOVLW       57
0x04DA	0x2400      	ADDWF       R0, 0 
0x04DC	0x6E05      	MOVWF       R5 
0x04DE	0x0E30      	MOVLW       48
0x04E0	0x2001      	ADDWFC      R1, 0 
0x04E2	0x6E06      	MOVWF       R6 
0x04E4	0x0E00      	MOVLW       0
0x04E6	0x2002      	ADDWFC      R2, 0 
0x04E8	0x6E07      	MOVWF       R7 
0x04EA	0x0E00      	MOVLW       0
0x04EC	0x2003      	ADDWFC      R3, 0 
0x04EE	0x6E08      	MOVWF       R8 
0x04F0	0xF000C007  	MOVFF       R7, R0
0x04F4	0xF001C008  	MOVFF       R8, R1
0x04F8	0x0E00      	MOVLW       0
0x04FA	0xBE08      	BTFSC       R8, 7 
0x04FC	0x0EFF      	MOVLW       255
0x04FE	0x6E02      	MOVWF       R2 
0x0500	0x6E03      	MOVWF       R3 
0x0502	0x0EFF      	MOVLW       255
0x0504	0x1600      	ANDWF       R0, 1 
0x0506	0x0E7F      	MOVLW       127
0x0508	0x1601      	ANDWF       R1, 1 
0x050A	0x0E00      	MOVLW       0
0x050C	0x1602      	ANDWF       R2, 1 
0x050E	0x1603      	ANDWF       R3, 1 
0x0510	0xF0D1C000  	MOVFF       R0, __Lib_CStdlib_randx
0x0514	0xF0D2C001  	MOVFF       R1, __Lib_CStdlib_randx+1
0x0518	0xF0D3C002  	MOVFF       R2, __Lib_CStdlib_randx+2
0x051C	0xF0D4C003  	MOVFF       R3, __Lib_CStdlib_randx+3
;__Lib_CStdlib.c,311 :: 		
;__Lib_CStdlib.c,312 :: 		
L_end_rand:
0x0520	0x0012      	RETURN      0
; end of _rand
_Div_16x16_S:
;__Lib_Math.c,200 :: 		
;__Lib_Math.c,208 :: 		
0x0522	0x5004      	MOVF        R4, 0 
0x0524	0x0A00      	XORLW       0
0x0526	0xE108      	BNZ         L_Div_16x16_S0
;__Lib_Math.c,209 :: 		
0x0528	0x5005      	MOVF        R5, 0 
0x052A	0x0A00      	XORLW       0
0x052C	0xE105      	BNZ         L_Div_16x16_S1
;__Lib_Math.c,210 :: 		
0x052E	0x0EFF      	MOVLW       255
0x0530	0x6E00      	MOVWF       R0 
;__Lib_Math.c,211 :: 		
0x0532	0x0E7F      	MOVLW       127
0x0534	0x6E01      	MOVWF       R1 
;__Lib_Math.c,212 :: 		
0x0536	0xD057      	BRA         L_end_Div_16x16_S
;__Lib_Math.c,213 :: 		
L_Div_16x16_S1:
L_Div_16x16_S0:
;__Lib_Math.c,216 :: 		
0x0538	0x6A0D      	CLRF        R13, 0
;__Lib_Math.c,217 :: 		
0x053A	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,218 :: 		
0x053C	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,219 :: 		
0x053E	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,220 :: 		
0x0540	0x1000      	IORWF       R0, 0, 0
;__Lib_Math.c,221 :: 		
0x0542	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,222 :: 		
0x0544	0x0C00      	RETLW       0
;__Lib_Math.c,224 :: 		
0x0546	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,225 :: 		
0x0548	0x1805      	XORWF       R5, 0, 0
;__Lib_Math.c,226 :: 		
0x054A	0x6E0A      	MOVWF       R10, 0
;__Lib_Math.c,227 :: 		
0x054C	0xBE0A      	BTFSC       R10, 7, 0
;__Lib_Math.c,228 :: 		
0x054E	0x1E0D      	COMF        R13, 1, 0
;__Lib_Math.c,230 :: 		
0x0550	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,232 :: 		
0x0552	0xAE05      	BTFSS       R5, 7, 0
;__Lib_Math.c,233 :: 		
0x0554	0xD005      	BRA         $+12
;__Lib_Math.c,235 :: 		
0x0556	0x1E04      	COMF        R4, 1, 0
;__Lib_Math.c,236 :: 		
0x0558	0x1E05      	COMF        R5, 1, 0
;__Lib_Math.c,237 :: 		
0x055A	0x2A04      	INCF        R4, 1, 0
;__Lib_Math.c,238 :: 		
0x055C	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,239 :: 		
0x055E	0x2A05      	INCF        R5, 1, 0
;__Lib_Math.c,241 :: 		
0x0560	0xAE01      	BTFSS       R1, 7, 0
;__Lib_Math.c,242 :: 		
0x0562	0xD005      	BRA         $+12
;__Lib_Math.c,244 :: 		
0x0564	0x1E00      	COMF        R0, 1, 0
;__Lib_Math.c,245 :: 		
0x0566	0x1E01      	COMF        R1, 1, 0
;__Lib_Math.c,246 :: 		
0x0568	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,247 :: 		
0x056A	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,248 :: 		
0x056C	0x2A01      	INCF        R1, 1, 0
;__Lib_Math.c,250 :: 		
0x056E	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,251 :: 		
0x0570	0x1005      	IORWF       R5, 0, 0
;__Lib_Math.c,252 :: 		
0x0572	0x6E0A      	MOVWF       R10, 0
;__Lib_Math.c,253 :: 		
0x0574	0xBE0A      	BTFSC       R10, 7, 0
;__Lib_Math.c,254 :: 		
0x0576	0xD010      	BRA         $+34
;__Lib_Math.c,256 :: 		
0x0578	0xDED2      	RCALL       _Div_16x16_S_L
;__Lib_Math.c,258 :: 		
0x057A	0xB00B      	BTFSC       R11, 0, 0
;__Lib_Math.c,259 :: 		
0x057C	0xD020      	BRA         $+66
;__Lib_Math.c,261 :: 		
0x057E	0xAE0D      	BTFSS       R13, 7, 0
;__Lib_Math.c,262 :: 		
0x0580	0x0C00      	RETLW       0
;__Lib_Math.c,264 :: 		
0x0582	0x1E00      	COMF        R0, 1, 0
;__Lib_Math.c,265 :: 		
0x0584	0x1E01      	COMF        R1, 1, 0
;__Lib_Math.c,266 :: 		
0x0586	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,267 :: 		
0x0588	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,268 :: 		
0x058A	0x2A01      	INCF        R1, 1, 0
;__Lib_Math.c,270 :: 		
0x058C	0x1E08      	COMF        R8, 1, 0
;__Lib_Math.c,271 :: 		
0x058E	0x1E09      	COMF        R9, 1, 0
;__Lib_Math.c,272 :: 		
0x0590	0x2A08      	INCF        R8, 1, 0
;__Lib_Math.c,273 :: 		
0x0592	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,274 :: 		
0x0594	0x2A09      	INCF        R9, 1, 0
;__Lib_Math.c,276 :: 		
0x0596	0x0C00      	RETLW       0
;__Lib_Math.c,278 :: 		
0x0598	0xAE05      	BTFSS       R5, 7, 0
;__Lib_Math.c,279 :: 		
0x059A	0xD00D      	BRA         $+28
;__Lib_Math.c,280 :: 		
0x059C	0xBE01      	BTFSC       R1, 7, 0
;__Lib_Math.c,281 :: 		
0x059E	0xD007      	BRA         $+16
;__Lib_Math.c,282 :: 		
0x05A0	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,283 :: 		
0x05A2	0x6E09      	MOVWF       R9, 0
;__Lib_Math.c,284 :: 		
0x05A4	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,285 :: 		
0x05A6	0x6E08      	MOVWF       R8, 0
;__Lib_Math.c,286 :: 		
0x05A8	0x6A01      	CLRF        R1, 0
;__Lib_Math.c,287 :: 		
0x05AA	0x6A00      	CLRF        R0, 0
;__Lib_Math.c,288 :: 		
0x05AC	0xD7E8      	BRA         $-46
;__Lib_Math.c,289 :: 		
0x05AE	0x6A01      	CLRF        R1, 0
;__Lib_Math.c,290 :: 		
0x05B0	0x6A00      	CLRF        R0, 0
;__Lib_Math.c,291 :: 		
0x05B2	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,292 :: 		
0x05B4	0x0C00      	RETLW       0
;__Lib_Math.c,294 :: 		
0x05B6	0x1E01      	COMF        R1, 1, 0
;__Lib_Math.c,295 :: 		
0x05B8	0x1E00      	COMF        R0, 1, 0
;__Lib_Math.c,296 :: 		
0x05BA	0x2A0B      	INCF        R11, 1, 0
;__Lib_Math.c,297 :: 		
0x05BC	0xD7DD      	BRA         $-68
;__Lib_Math.c,299 :: 		
0x05BE	0x2A08      	INCF        R8, 1, 0
;__Lib_Math.c,300 :: 		
0x05C0	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,301 :: 		
0x05C2	0x2A09      	INCF        R9, 1, 0
;__Lib_Math.c,302 :: 		
0x05C4	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,303 :: 		
0x05C6	0x5C08      	SUBWF       R8, 0, 0
;__Lib_Math.c,304 :: 		
0x05C8	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_Math.c,305 :: 		
0x05CA	0xD7D9      	BRA         $-76
;__Lib_Math.c,306 :: 		
0x05CC	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,307 :: 		
0x05CE	0x5C09      	SUBWF       R9, 0, 0
;__Lib_Math.c,308 :: 		
0x05D0	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_Math.c,309 :: 		
0x05D2	0xD7D5      	BRA         $-84
;__Lib_Math.c,310 :: 		
0x05D4	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,311 :: 		
0x05D6	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,312 :: 		
0x05D8	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,313 :: 		
0x05DA	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,314 :: 		
0x05DC	0x2A01      	INCF        R1, 1, 0
;__Lib_Math.c,315 :: 		
0x05DE	0xAE01      	BTFSS       R1, 7, 0
;__Lib_Math.c,316 :: 		
0x05E0	0xD7CE      	BRA         $-98
;__Lib_Math.c,317 :: 		
0x05E2	0x0000      	NOP
;__Lib_Math.c,318 :: 		
0x05E4	0x0CFF      	RETLW       255
;__Lib_Math.c,320 :: 		
L_end_Div_16x16_S:
0x05E6	0x0012      	RETURN      0
; end of _Div_16x16_S
_UART1_Write_Text:
;__Lib_UART_c67.c,66 :: 		
;__Lib_UART_c67.c,67 :: 		
0x05E8	0x0100      	MOVLB       0
0x05EA	0x6BE3      	CLRF        UART1_Write_Text_counter_L0, 1
;__Lib_UART_c67.c,69 :: 		
0x05EC	0xFFE9C0E0  	MOVFF       FARG_UART1_Write_Text_uart_text, FSR0L
0x05F0	0xFFEAC0E1  	MOVFF       FARG_UART1_Write_Text_uart_text+1, FSR0H
0x05F4	0xF0E2CFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;__Lib_UART_c67.c,70 :: 		
L_UART1_Write_Text5:
0x05F8	0x51E2      	MOVF        UART1_Write_Text_data__L0, 0, 1
0x05FA	0x0A00      	XORLW       0
0x05FC	0xE00E      	BZ          L_UART1_Write_Text6
;__Lib_UART_c67.c,71 :: 		
0x05FE	0xF0EAC0E2  	MOVFF       UART1_Write_Text_data__L0, FARG_UART1_Write_data_
0x0602	0xDE7A      	RCALL       _UART1_Write
;__Lib_UART_c67.c,72 :: 		
0x0604	0x0100      	MOVLB       0
0x0606	0x2BE3      	INCF        UART1_Write_Text_counter_L0, 1, 1
;__Lib_UART_c67.c,73 :: 		
0x0608	0x51E3      	MOVF        UART1_Write_Text_counter_L0, 0, 1
0x060A	0x25E0      	ADDWF       FARG_UART1_Write_Text_uart_text, 0, 1
0x060C	0x6EE9      	MOVWF       FSR0L 
0x060E	0x0E00      	MOVLW       0
0x0610	0x21E1      	ADDWFC      FARG_UART1_Write_Text_uart_text+1, 0, 1
0x0612	0x6EEA      	MOVWF       FSR0H 
0x0614	0xF0E2CFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;__Lib_UART_c67.c,74 :: 		
0x0618	0xD7EF      	BRA         L_UART1_Write_Text5
L_UART1_Write_Text6:
;__Lib_UART_c67.c,75 :: 		
L_end_UART1_Write_Text:
0x061A	0x0012      	RETURN      0
; end of _UART1_Write_Text
_UART1_Read_Text:
;__Lib_UART_c67.c,78 :: 		
;__Lib_UART_c67.c,79 :: 		
0x061C	0x0100      	MOVLB       0
0x061E	0x6BE6      	CLRF        UART1_Read_Text_out_idx_L0, 1
0x0620	0x6BE7      	CLRF        UART1_Read_Text_delim_idx_L0, 1
;__Lib_UART_c67.c,81 :: 		
L_UART1_Read_Text7:
0x0622	0x53E4      	MOVF        FARG_UART1_Read_Text_Attempts, 1, 1
0x0624	0xE042      	BZ          L_UART1_Read_Text8
;__Lib_UART_c67.c,83 :: 		
0x0626	0x51E4      	MOVF        FARG_UART1_Read_Text_Attempts, 0, 1
0x0628	0x0AFF      	XORLW       255
0x062A	0xA4D8      	BTFSS       STATUS, 2 
;__Lib_UART_c67.c,84 :: 		
0x062C	0x07E4      	DECF        FARG_UART1_Read_Text_Attempts, 1, 1
L_UART1_Read_Text9:
;__Lib_UART_c67.c,86 :: 		
L_UART1_Read_Text10:
0x062E	0xDE2D      	RCALL       _UART1_Data_Ready
0x0630	0x5000      	MOVF        R0, 0 
0x0632	0x0A00      	XORLW       0
0x0634	0xE101      	BNZ         L_UART1_Read_Text11
;__Lib_UART_c67.c,87 :: 		
0x0636	0xD7FB      	BRA         L_UART1_Read_Text10
L_UART1_Read_Text11:
;__Lib_UART_c67.c,89 :: 		
0x0638	0xDE1F      	RCALL       _UART1_Read
0x063A	0xF0E5C000  	MOVFF       R0, UART1_Read_Text_r_data_L0
;__Lib_UART_c67.c,90 :: 		
0x063E	0x0100      	MOVLB       0
0x0640	0x51E6      	MOVF        UART1_Read_Text_out_idx_L0, 0, 1
0x0642	0x25E0      	ADDWF       FARG_UART1_Read_Text_Output, 0, 1
0x0644	0x6EE1      	MOVWF       FSR1L 
0x0646	0x0E00      	MOVLW       0
0x0648	0x21E1      	ADDWFC      FARG_UART1_Read_Text_Output+1, 0, 1
0x064A	0x6EE2      	MOVWF       FSR1H 
0x064C	0xFFE6C000  	MOVFF       R0, POSTINC1
0x0650	0x2BE6      	INCF        UART1_Read_Text_out_idx_L0, 1, 1
;__Lib_UART_c67.c,91 :: 		
0x0652	0x51E7      	MOVF        UART1_Read_Text_delim_idx_L0, 0, 1
0x0654	0x25E2      	ADDWF       FARG_UART1_Read_Text_Delimiter, 0, 1
0x0656	0x6EE9      	MOVWF       FSR0L 
0x0658	0x0E00      	MOVLW       0
0x065A	0x21E3      	ADDWFC      FARG_UART1_Read_Text_Delimiter+1, 0, 1
0x065C	0x6EEA      	MOVWF       FSR0H 
0x065E	0x50EE      	MOVF        POSTINC0, 0 
0x0660	0x19E5      	XORWF       UART1_Read_Text_r_data_L0, 0, 1
0x0662	0xE102      	BNZ         L_UART1_Read_Text12
;__Lib_UART_c67.c,92 :: 		
0x0664	0x2BE7      	INCF        UART1_Read_Text_delim_idx_L0, 1, 1
;__Lib_UART_c67.c,93 :: 		
0x0666	0xD009      	BRA         L_UART1_Read_Text13
L_UART1_Read_Text12:
;__Lib_UART_c67.c,95 :: 		
0x0668	0x6BE7      	CLRF        UART1_Read_Text_delim_idx_L0, 1
;__Lib_UART_c67.c,96 :: 		
0x066A	0xFFE9C0E2  	MOVFF       FARG_UART1_Read_Text_Delimiter, FSR0L
0x066E	0xFFEAC0E3  	MOVFF       FARG_UART1_Read_Text_Delimiter+1, FSR0H
0x0672	0x50EE      	MOVF        POSTINC0, 0 
0x0674	0x19E5      	XORWF       UART1_Read_Text_r_data_L0, 0, 1
0x0676	0xB4D8      	BTFSC       STATUS, 2 
;__Lib_UART_c67.c,97 :: 		
0x0678	0x2BE7      	INCF        UART1_Read_Text_delim_idx_L0, 1, 1
;__Lib_UART_c67.c,98 :: 		
L_UART1_Read_Text14:
;__Lib_UART_c67.c,99 :: 		
L_UART1_Read_Text13:
;__Lib_UART_c67.c,101 :: 		
0x067A	0x51E7      	MOVF        UART1_Read_Text_delim_idx_L0, 0, 1
0x067C	0x25E2      	ADDWF       FARG_UART1_Read_Text_Delimiter, 0, 1
0x067E	0x6EE9      	MOVWF       FSR0L 
0x0680	0x0E00      	MOVLW       0
0x0682	0x21E3      	ADDWFC      FARG_UART1_Read_Text_Delimiter+1, 0, 1
0x0684	0x6EEA      	MOVWF       FSR0H 
0x0686	0x50EE      	MOVF        POSTINC0, 0 
0x0688	0x0A00      	XORLW       0
0x068A	0xE10E      	BNZ         L_UART1_Read_Text15
;__Lib_UART_c67.c,102 :: 		
0x068C	0x51E7      	MOVF        UART1_Read_Text_delim_idx_L0, 0, 1
0x068E	0x5DE6      	SUBWF       UART1_Read_Text_out_idx_L0, 0, 1
0x0690	0x6E00      	MOVWF       R0 
0x0692	0x6A01      	CLRF        R1 
0x0694	0x0E00      	MOVLW       0
0x0696	0x5A01      	SUBWFB      R1, 1 
0x0698	0x5000      	MOVF        R0, 0 
0x069A	0x25E0      	ADDWF       FARG_UART1_Read_Text_Output, 0, 1
0x069C	0x6EE1      	MOVWF       FSR1L 
0x069E	0x5001      	MOVF        R1, 0 
0x06A0	0x21E1      	ADDWFC      FARG_UART1_Read_Text_Output+1, 0, 1
0x06A2	0x6EE2      	MOVWF       FSR1H 
0x06A4	0x6AE6      	CLRF        POSTINC1 
;__Lib_UART_c67.c,103 :: 		
0x06A6	0xD006      	BRA         L_end_UART1_Read_Text
;__Lib_UART_c67.c,104 :: 		
L_UART1_Read_Text15:
;__Lib_UART_c67.c,106 :: 		
0x06A8	0xD7BC      	BRA         L_UART1_Read_Text7
L_UART1_Read_Text8:
;__Lib_UART_c67.c,107 :: 		
0x06AA	0xFFE1C0E0  	MOVFF       FARG_UART1_Read_Text_Output, FSR1L
0x06AE	0xFFE2C0E1  	MOVFF       FARG_UART1_Read_Text_Output+1, FSR1H
0x06B2	0x6AE6      	CLRF        POSTINC1 
;__Lib_UART_c67.c,108 :: 		
L_end_UART1_Read_Text:
0x06B4	0x0012      	RETURN      0
; end of _UART1_Read_Text
_UART1_Tx_Idle:
;__Lib_UART_c67.c,52 :: 		
;__Lib_UART_c67.c,53 :: 		
0x06B6	0x0E00      	MOVLW       0
0x06B8	0xB2AC      	BTFSC       TXSTA, 1 
0x06BA	0x0E01      	MOVLW       1
0x06BC	0x6E00      	MOVWF       R0 
;__Lib_UART_c67.c,54 :: 		
L_end_UART1_Tx_Idle:
0x06BE	0x0012      	RETURN      0
; end of _UART1_Tx_Idle
_Glcd_Fill:
;__Lib_Glcd.c,125 :: 		
;__Lib_Glcd.c,128 :: 		
0x06C0	0x908A      	BCF         GLCD_CS1, BitPos(GLCD_CS1+0) 
0x06C2	0x828A      	BSF         GLCD_CS2, BitPos(GLCD_CS2+0) 
;__Lib_Glcd.c,129 :: 		
0x06C4	0x0100      	MOVLB       0
0x06C6	0x6BE2      	CLRF        Glcd_Fill_page_L0, 1
L_Glcd_Fill2:
0x06C8	0x51E2      	MOVF        Glcd_Fill_page_L0, 0, 1
0x06CA	0x0807      	SUBLW       7
0x06CC	0xE30E      	BNC         L_Glcd_Fill3
;__Lib_Glcd.c,130 :: 		
0x06CE	0xF0F9C0E2  	MOVFF       Glcd_Fill_page_L0, FARG_Glcd_Set_Page_page
0x06D2	0xDCB2      	RCALL       _Glcd_Set_Page
;__Lib_Glcd.c,132 :: 		
0x06D4	0x6BE1      	CLRF        Glcd_Fill_yy_L0, 1
L_Glcd_Fill5:
0x06D6	0x51E1      	MOVF        Glcd_Fill_yy_L0, 0, 1
0x06D8	0x083F      	SUBLW       63
0x06DA	0xE305      	BNC         L_Glcd_Fill6
;__Lib_Glcd.c,133 :: 		
0x06DC	0xF0F9C0E0  	MOVFF       FARG_Glcd_Fill_pattern, FARG_Glcd_Write_Data_ddata
0x06E0	0xDCE8      	RCALL       _Glcd_Write_Data
;__Lib_Glcd.c,132 :: 		
0x06E2	0x2BE1      	INCF        Glcd_Fill_yy_L0, 1, 1
;__Lib_Glcd.c,135 :: 		
0x06E4	0xD7F8      	BRA         L_Glcd_Fill5
L_Glcd_Fill6:
;__Lib_Glcd.c,129 :: 		
0x06E6	0x2BE2      	INCF        Glcd_Fill_page_L0, 1, 1
;__Lib_Glcd.c,136 :: 		
0x06E8	0xD7EF      	BRA         L_Glcd_Fill2
L_Glcd_Fill3:
;__Lib_Glcd.c,138 :: 		
0x06EA	0x928A      	BCF         GLCD_CS2, BitPos(GLCD_CS2+0) 
0x06EC	0x808A      	BSF         GLCD_CS1, BitPos(GLCD_CS1+0) 
;__Lib_Glcd.c,139 :: 		
0x06EE	0x6BE2      	CLRF        Glcd_Fill_page_L0, 1
L_Glcd_Fill8:
0x06F0	0x51E2      	MOVF        Glcd_Fill_page_L0, 0, 1
0x06F2	0x0807      	SUBLW       7
0x06F4	0xE30E      	BNC         L_Glcd_Fill9
;__Lib_Glcd.c,140 :: 		
0x06F6	0xF0F9C0E2  	MOVFF       Glcd_Fill_page_L0, FARG_Glcd_Set_Page_page
0x06FA	0xDC9E      	RCALL       _Glcd_Set_Page
;__Lib_Glcd.c,141 :: 		
0x06FC	0x6BE1      	CLRF        Glcd_Fill_yy_L0, 1
L_Glcd_Fill11:
0x06FE	0x51E1      	MOVF        Glcd_Fill_yy_L0, 0, 1
0x0700	0x083F      	SUBLW       63
0x0702	0xE305      	BNC         L_Glcd_Fill12
;__Lib_Glcd.c,142 :: 		
0x0704	0xF0F9C0E0  	MOVFF       FARG_Glcd_Fill_pattern, FARG_Glcd_Write_Data_ddata
0x0708	0xDCD4      	RCALL       _Glcd_Write_Data
;__Lib_Glcd.c,141 :: 		
0x070A	0x2BE1      	INCF        Glcd_Fill_yy_L0, 1, 1
;__Lib_Glcd.c,142 :: 		
0x070C	0xD7F8      	BRA         L_Glcd_Fill11
L_Glcd_Fill12:
;__Lib_Glcd.c,139 :: 		
0x070E	0x2BE2      	INCF        Glcd_Fill_page_L0, 1, 1
;__Lib_Glcd.c,143 :: 		
0x0710	0xD7EF      	BRA         L_Glcd_Fill8
L_Glcd_Fill9:
;__Lib_Glcd.c,144 :: 		
L_end_Glcd_Fill:
0x0712	0x0012      	RETURN      0
; end of _Glcd_Fill
_erase_player:
;pong.c,54 :: 		void erase_player(unsigned short x, unsigned short y, unsigned short w, unsigned short h){
;pong.c,55 :: 		Glcd_V_Line(y, y+h, x, 0);
0x0714	0xF0EEC0E1  	MOVFF       FARG_erase_player_y, FARG_Glcd_V_Line_y_start
0x0718	0x0100      	MOVLB       0
0x071A	0x51E3      	MOVF        FARG_erase_player_h, 0, 1
0x071C	0x25E1      	ADDWF       FARG_erase_player_y, 0, 1
0x071E	0x6FEF      	MOVWF       FARG_Glcd_V_Line_y_end, 1
0x0720	0xF0F0C0E0  	MOVFF       FARG_erase_player_x, FARG_Glcd_V_Line_x_pos
0x0724	0x6BF1      	CLRF        FARG_Glcd_V_Line_color, 1
0x0726	0xDD39      	RCALL       _Glcd_V_Line
;pong.c,56 :: 		}
L_end_erase_player:
0x0728	0x0012      	RETURN      0
; end of _erase_player
_Delay_22us:
;__Lib_Delays.c,15 :: 		void Delay_22us() {
;__Lib_Delays.c,16 :: 		Delay_us(22);
0x072A	0x0E0E      	MOVLW       14
0x072C	0x6E0D      	MOVWF       R13, 0
L_Delay_22us1:
0x072E	0x2E0D      	DECFSZ      R13, 1, 0
0x0730	0xD7FE      	BRA         L_Delay_22us1
0x0732	0x0000      	NOP
;__Lib_Delays.c,17 :: 		}
L_end_Delay_22us:
0x0734	0x0012      	RETURN      0
; end of _Delay_22us
_Glcd_Image:
;__Lib_Glcd.c,596 :: 		
;__Lib_Glcd.c,600 :: 		
0x0736	0x0100      	MOVLB       0
0x0738	0x6BE4      	CLRF        Glcd_Image_pg_L0, 1
0x073A	0x6BE5      	CLRF        Glcd_Image_clan_niza_L0, 1
0x073C	0x6BE6      	CLRF        Glcd_Image_clan_niza_L0+1, 1
;__Lib_Glcd.c,602 :: 		
L_Glcd_Image100:
0x073E	0x51E4      	MOVF        Glcd_Image_pg_L0, 0, 1
0x0740	0x0807      	SUBLW       7
0x0742	0xE33D      	BNC         L_Glcd_Image101
;__Lib_Glcd.c,603 :: 		
0x0744	0x6BF9      	CLRF        FARG_Glcd_Set_Side_x_pos, 1
0x0746	0xDC80      	RCALL       _Glcd_Set_Side
;__Lib_Glcd.c,604 :: 		
0x0748	0xF0F9C0E4  	MOVFF       Glcd_Image_pg_L0, FARG_Glcd_Set_Page_page
0x074C	0xDC75      	RCALL       _Glcd_Set_Page
;__Lib_Glcd.c,605 :: 		
0x074E	0x6BF9      	CLRF        FARG_Glcd_Set_X_x_pos, 1
0x0750	0xDCB7      	RCALL       _Glcd_Set_X
;__Lib_Glcd.c,606 :: 		
0x0752	0x6BE3      	CLRF        Glcd_Image_col_L0, 1
L_Glcd_Image102:
0x0754	0x51E3      	MOVF        Glcd_Image_col_L0, 0, 1
0x0756	0x083F      	SUBLW       63
0x0758	0xE311      	BNC         L_Glcd_Image103
;__Lib_Glcd.c,607 :: 		
0x075A	0x51E5      	MOVF        Glcd_Image_clan_niza_L0, 0, 1
0x075C	0x25E0      	ADDWF       FARG_Glcd_Image_image, 0, 1
0x075E	0x6EF6      	MOVWF       4086 
0x0760	0x51E6      	MOVF        Glcd_Image_clan_niza_L0+1, 0, 1
0x0762	0x21E1      	ADDWFC      FARG_Glcd_Image_image+1, 0, 1
0x0764	0x6EF7      	MOVWF       TBLPTRH 
0x0766	0x0E00      	MOVLW       0
0x0768	0x21E2      	ADDWFC      FARG_Glcd_Image_image+2, 0, 1
0x076A	0x6EF8      	MOVWF       TBLPTRU 
0x076C	0x0009      	TBLRD*+
0x076E	0xF0F9CFF5  	MOVFF       TABLAT, FARG_Glcd_Write_Data_ddata
0x0772	0xDC9F      	RCALL       _Glcd_Write_Data
0x0774	0x4BE5      	INFSNZ      Glcd_Image_clan_niza_L0, 1, 1
0x0776	0x2BE6      	INCF        Glcd_Image_clan_niza_L0+1, 1, 1
;__Lib_Glcd.c,606 :: 		
0x0778	0x2BE3      	INCF        Glcd_Image_col_L0, 1, 1
;__Lib_Glcd.c,608 :: 		
0x077A	0xD7EC      	BRA         L_Glcd_Image102
L_Glcd_Image103:
;__Lib_Glcd.c,610 :: 		
0x077C	0x0E40      	MOVLW       64
0x077E	0x6FF9      	MOVWF       FARG_Glcd_Set_Side_x_pos, 1
0x0780	0xDC63      	RCALL       _Glcd_Set_Side
;__Lib_Glcd.c,611 :: 		
0x0782	0xF0F9C0E4  	MOVFF       Glcd_Image_pg_L0, FARG_Glcd_Set_Page_page
0x0786	0xDC58      	RCALL       _Glcd_Set_Page
;__Lib_Glcd.c,612 :: 		
0x0788	0x0E40      	MOVLW       64
0x078A	0x6FF9      	MOVWF       FARG_Glcd_Set_X_x_pos, 1
0x078C	0xDC99      	RCALL       _Glcd_Set_X
;__Lib_Glcd.c,613 :: 		
0x078E	0x0E40      	MOVLW       64
0x0790	0x6FE3      	MOVWF       Glcd_Image_col_L0, 1
L_Glcd_Image105:
0x0792	0x51E3      	MOVF        Glcd_Image_col_L0, 0, 1
0x0794	0x087F      	SUBLW       127
0x0796	0xE311      	BNC         L_Glcd_Image106
;__Lib_Glcd.c,614 :: 		
0x0798	0x51E5      	MOVF        Glcd_Image_clan_niza_L0, 0, 1
0x079A	0x25E0      	ADDWF       FARG_Glcd_Image_image, 0, 1
0x079C	0x6EF6      	MOVWF       4086 
0x079E	0x51E6      	MOVF        Glcd_Image_clan_niza_L0+1, 0, 1
0x07A0	0x21E1      	ADDWFC      FARG_Glcd_Image_image+1, 0, 1
0x07A2	0x6EF7      	MOVWF       TBLPTRH 
0x07A4	0x0E00      	MOVLW       0
0x07A6	0x21E2      	ADDWFC      FARG_Glcd_Image_image+2, 0, 1
0x07A8	0x6EF8      	MOVWF       TBLPTRU 
0x07AA	0x0009      	TBLRD*+
0x07AC	0xF0F9CFF5  	MOVFF       TABLAT, FARG_Glcd_Write_Data_ddata
0x07B0	0xDC80      	RCALL       _Glcd_Write_Data
0x07B2	0x4BE5      	INFSNZ      Glcd_Image_clan_niza_L0, 1, 1
0x07B4	0x2BE6      	INCF        Glcd_Image_clan_niza_L0+1, 1, 1
;__Lib_Glcd.c,613 :: 		
0x07B6	0x2BE3      	INCF        Glcd_Image_col_L0, 1, 1
;__Lib_Glcd.c,615 :: 		
0x07B8	0xD7EC      	BRA         L_Glcd_Image105
L_Glcd_Image106:
;__Lib_Glcd.c,617 :: 		
0x07BA	0x2BE4      	INCF        Glcd_Image_pg_L0, 1, 1
;__Lib_Glcd.c,618 :: 		
0x07BC	0xD7C0      	BRA         L_Glcd_Image100
L_Glcd_Image101:
;__Lib_Glcd.c,619 :: 		
L_end_Glcd_Image:
0x07BE	0x0012      	RETURN      0
; end of _Glcd_Image
_Glcd_Write_Char:
;__Lib_Glcd.c,217 :: 		
;__Lib_Glcd.c,221 :: 		
0x07C0	0x0100      	MOVLB       0
0x07C2	0x51E2      	MOVF        FARG_Glcd_Write_Char_page_num, 0, 1
0x07C4	0x0807      	SUBLW       7
0x07C6	0xE201      	BC          L_Glcd_Write_Char14
;__Lib_Glcd.c,222 :: 		
0x07C8	0xD086      	BRA         L_end_Glcd_Write_Char
L_Glcd_Write_Char14:
;__Lib_Glcd.c,224 :: 		
0x07CA	0x51CB      	MOVF        __Lib_Glcd_fontOffset, 0, 1
0x07CC	0x5DE0      	SUBWF       FARG_Glcd_Write_Char_chr, 0, 1
0x07CE	0x6E00      	MOVWF       R0 
0x07D0	0xF001C0CC  	MOVFF       __Lib_Glcd_fontOffset+1, R1
0x07D4	0x0E00      	MOVLW       0
0x07D6	0x5601      	SUBFWB      R1, 1 
0x07D8	0xF004C0AF  	MOVFF       __Lib_Glcd_fontW, R4
0x07DC	0x0E00      	MOVLW       0
0x07DE	0x6E05      	MOVWF       R5 
0x07E0	0xDD0D      	RCALL       _Mul_16X16_U
0x07E2	0xF0E8C000  	MOVFF       R0, Glcd_Write_Char_pointer_L0
0x07E6	0xF0E9C001  	MOVFF       R1, Glcd_Write_Char_pointer_L0+1
;__Lib_Glcd.c,226 :: 		
0x07EA	0xF0F9C0E1  	MOVFF       FARG_Glcd_Write_Char_x_pos, FARG_Glcd_Set_X_x_pos
0x07EE	0xDC68      	RCALL       _Glcd_Set_X
;__Lib_Glcd.c,227 :: 		
0x07F0	0xF0F9C0E2  	MOVFF       FARG_Glcd_Write_Char_page_num, FARG_Glcd_Set_Page_page
0x07F4	0xDC21      	RCALL       _Glcd_Set_Page
;__Lib_Glcd.c,229 :: 		
0x07F6	0x6BE4      	CLRF        Glcd_Write_Char_ii_L0, 1
L_Glcd_Write_Char15:
0x07F8	0x51AF      	MOVF        __Lib_Glcd_fontW, 0, 1
0x07FA	0x5DE4      	SUBWF       Glcd_Write_Char_ii_L0, 0, 1
0x07FC	0xE249      	BC          L_Glcd_Write_Char16
;__Lib_Glcd.c,230 :: 		
0x07FE	0x51E1      	MOVF        FARG_Glcd_Write_Char_x_pos, 0, 1
0x0800	0x087F      	SUBLW       127
0x0802	0xE201      	BC          L_Glcd_Write_Char18
;__Lib_Glcd.c,231 :: 		
0x0804	0xD068      	BRA         L_end_Glcd_Write_Char
L_Glcd_Write_Char18:
;__Lib_Glcd.c,232 :: 		
0x0806	0xF0F9C0E1  	MOVFF       FARG_Glcd_Write_Char_x_pos, FARG_Glcd_Set_Side_x_pos
0x080A	0xDC1E      	RCALL       _Glcd_Set_Side
;__Lib_Glcd.c,233 :: 		
0x080C	0xF0F9C0E2  	MOVFF       FARG_Glcd_Write_Char_page_num, FARG_Glcd_Set_Page_page
0x0810	0xDC13      	RCALL       _Glcd_Set_Page
;__Lib_Glcd.c,234 :: 		
0x0812	0xF0F9C0E1  	MOVFF       FARG_Glcd_Write_Char_x_pos, FARG_Glcd_Set_X_x_pos
0x0816	0xDC54      	RCALL       _Glcd_Set_X
;__Lib_Glcd.c,236 :: 		
0x0818	0xDC25      	RCALL       _Glcd_Read_Data
0x081A	0xF0E5C000  	MOVFF       R0, Glcd_Write_Char_data_read_L0
;__Lib_Glcd.c,237 :: 		
0x081E	0xDC22      	RCALL       _Glcd_Read_Data
0x0820	0xF0E5C000  	MOVFF       R0, Glcd_Write_Char_data_read_L0
;__Lib_Glcd.c,239 :: 		
0x0824	0xF0F9C0E1  	MOVFF       FARG_Glcd_Write_Char_x_pos, FARG_Glcd_Set_Side_x_pos
0x0828	0xDC0F      	RCALL       _Glcd_Set_Side
;__Lib_Glcd.c,240 :: 		
0x082A	0xF0F9C0E2  	MOVFF       FARG_Glcd_Write_Char_page_num, FARG_Glcd_Set_Page_page
0x082E	0xDC04      	RCALL       _Glcd_Set_Page
;__Lib_Glcd.c,241 :: 		
0x0830	0xF0F9C0E1  	MOVFF       FARG_Glcd_Write_Char_x_pos, FARG_Glcd_Set_X_x_pos
0x0834	0xDC45      	RCALL       _Glcd_Set_X
;__Lib_Glcd.c,244 :: 		
0x0836	0x51E8      	MOVF        Glcd_Write_Char_pointer_L0, 0, 1
0x0838	0x25B0      	ADDWF       __Lib_Glcd_fontDef, 0, 1
0x083A	0x6EF6      	MOVWF       4086 
0x083C	0x51E9      	MOVF        Glcd_Write_Char_pointer_L0+1, 0, 1
0x083E	0x21B1      	ADDWFC      __Lib_Glcd_fontDef+1, 0, 1
0x0840	0x6EF7      	MOVWF       TBLPTRH 
0x0842	0x0E00      	MOVLW       0
0x0844	0xBFE9      	BTFSC       Glcd_Write_Char_pointer_L0+1, 7, 1
0x0846	0x0EFF      	MOVLW       255
0x0848	0x21B2      	ADDWFC      __Lib_Glcd_fontDef+2, 0, 1
0x084A	0x6EF8      	MOVWF       TBLPTRU 
0x084C	0x0009      	TBLRD*+
0x084E	0xF000CFF5  	MOVFF       TABLAT, R0
0x0852	0xF0E6C000  	MOVFF       R0, Glcd_Write_Char_font_ch_L0
0x0856	0x4BE8      	INFSNZ      Glcd_Write_Char_pointer_L0, 1, 1
0x0858	0x2BE9      	INCF        Glcd_Write_Char_pointer_L0+1, 1, 1
;__Lib_Glcd.c,245 :: 		
0x085A	0x1C00      	COMF        R0, 0 
0x085C	0x6FE7      	MOVWF       Glcd_Write_Char_font_ch_inv_L0, 1
;__Lib_Glcd.c,248 :: 		
0x085E	0xD009      	BRA         L_Glcd_Write_Char19
;__Lib_Glcd.c,249 :: 		
L_Glcd_Write_Char21:
0x0860	0xF0E5C0E7  	MOVFF       Glcd_Write_Char_font_ch_inv_L0, Glcd_Write_Char_data_read_L0
0x0864	0xD00F      	BRA         L_Glcd_Write_Char20
;__Lib_Glcd.c,250 :: 		
L_Glcd_Write_Char22:
0x0866	0xF0E5C0E6  	MOVFF       Glcd_Write_Char_font_ch_L0, Glcd_Write_Char_data_read_L0
0x086A	0xD00C      	BRA         L_Glcd_Write_Char20
;__Lib_Glcd.c,251 :: 		
L_Glcd_Write_Char23:
0x086C	0x51E6      	MOVF        Glcd_Write_Char_font_ch_L0, 0, 1
0x086E	0x1BE5      	XORWF       Glcd_Write_Char_data_read_L0, 1, 1
;__Lib_Glcd.c,252 :: 		
0x0870	0xD009      	BRA         L_Glcd_Write_Char20
L_Glcd_Write_Char19:
0x0872	0x51E3      	MOVF        FARG_Glcd_Write_Char_color, 0, 1
0x0874	0x0A00      	XORLW       0
0x0876	0xE0F4      	BZ          L_Glcd_Write_Char21
0x0878	0x51E3      	MOVF        FARG_Glcd_Write_Char_color, 0, 1
0x087A	0x0A01      	XORLW       1
0x087C	0xE0F4      	BZ          L_Glcd_Write_Char22
0x087E	0x51E3      	MOVF        FARG_Glcd_Write_Char_color, 0, 1
0x0880	0x0A02      	XORLW       2
0x0882	0xE0F4      	BZ          L_Glcd_Write_Char23
L_Glcd_Write_Char20:
;__Lib_Glcd.c,254 :: 		
0x0884	0xF0F9C0E5  	MOVFF       Glcd_Write_Char_data_read_L0, FARG_Glcd_Write_Data_ddata
0x0888	0xDC14      	RCALL       _Glcd_Write_Data
;__Lib_Glcd.c,255 :: 		
0x088A	0x2BE1      	INCF        FARG_Glcd_Write_Char_x_pos, 1, 1
;__Lib_Glcd.c,229 :: 		
0x088C	0x2BE4      	INCF        Glcd_Write_Char_ii_L0, 1, 1
;__Lib_Glcd.c,256 :: 		
0x088E	0xD7B4      	BRA         L_Glcd_Write_Char15
L_Glcd_Write_Char16:
;__Lib_Glcd.c,259 :: 		
0x0890	0xF0F9C0E1  	MOVFF       FARG_Glcd_Write_Char_x_pos, FARG_Glcd_Set_Side_x_pos
0x0894	0xF000EC24  	CALL        _Glcd_Set_Side, 0
;__Lib_Glcd.c,260 :: 		
0x0898	0xF0F9C0E2  	MOVFF       FARG_Glcd_Write_Char_page_num, FARG_Glcd_Set_Page_page
0x089C	0xF000EC1C  	CALL        _Glcd_Set_Page, 0
;__Lib_Glcd.c,261 :: 		
0x08A0	0xF0F9C0E1  	MOVFF       FARG_Glcd_Write_Char_x_pos, FARG_Glcd_Set_X_x_pos
0x08A4	0xDC0D      	RCALL       _Glcd_Set_X
;__Lib_Glcd.c,263 :: 		
0x08A6	0x0EFF      	MOVLW       255
0x08A8	0x6FE6      	MOVWF       Glcd_Write_Char_font_ch_L0, 1
;__Lib_Glcd.c,264 :: 		
0x08AA	0x6BE7      	CLRF        Glcd_Write_Char_font_ch_inv_L0, 1
;__Lib_Glcd.c,266 :: 		
0x08AC	0xD00E      	BRA         L_Glcd_Write_Char24
;__Lib_Glcd.c,267 :: 		
L_Glcd_Write_Char26:
;__Lib_Glcd.c,268 :: 		
0x08AE	0xF0E5C0E6  	MOVFF       Glcd_Write_Char_font_ch_L0, Glcd_Write_Char_data_read_L0
;__Lib_Glcd.c,269 :: 		
0x08B2	0xF0F9C0E6  	MOVFF       Glcd_Write_Char_font_ch_L0, FARG_Glcd_Write_Data_ddata
0x08B6	0xF000EC59  	CALL        _Glcd_Write_Data, 0
;__Lib_Glcd.c,270 :: 		
0x08BA	0xD00D      	BRA         L_Glcd_Write_Char25
;__Lib_Glcd.c,271 :: 		
L_Glcd_Write_Char27:
;__Lib_Glcd.c,272 :: 		
0x08BC	0xF0E5C0E7  	MOVFF       Glcd_Write_Char_font_ch_inv_L0, Glcd_Write_Char_data_read_L0
;__Lib_Glcd.c,273 :: 		
0x08C0	0xF0F9C0E7  	MOVFF       Glcd_Write_Char_font_ch_inv_L0, FARG_Glcd_Write_Data_ddata
0x08C4	0xF000EC59  	CALL        _Glcd_Write_Data, 0
;__Lib_Glcd.c,274 :: 		
0x08C8	0xD006      	BRA         L_Glcd_Write_Char25
;__Lib_Glcd.c,275 :: 		
L_Glcd_Write_Char24:
0x08CA	0x51E3      	MOVF        FARG_Glcd_Write_Char_color, 0, 1
0x08CC	0x0A00      	XORLW       0
0x08CE	0xE0EF      	BZ          L_Glcd_Write_Char26
0x08D0	0x51E3      	MOVF        FARG_Glcd_Write_Char_color, 0, 1
0x08D2	0x0A01      	XORLW       1
0x08D4	0xE0F3      	BZ          L_Glcd_Write_Char27
L_Glcd_Write_Char25:
;__Lib_Glcd.c,277 :: 		
L_end_Glcd_Write_Char:
0x08D6	0x0012      	RETURN      0
; end of _Glcd_Write_Char
_init:
;pong.c,63 :: 		void init(){
;pong.c,65 :: 		paddle[0].x =  5;
0x08D8	0x0E05      	MOVLW       5
0x08DA	0x0100      	MOVLB       0
0x08DC	0x6F99      	MOVWF       _paddle, 1
;pong.c,66 :: 		paddle[0].y = 30;
0x08DE	0x0E1E      	MOVLW       30
0x08E0	0x6F9A      	MOVWF       _paddle+1, 1
;pong.c,67 :: 		paddle[0].w = 2;
0x08E2	0x0E02      	MOVLW       2
0x08E4	0x6F9B      	MOVWF       _paddle+2, 1
;pong.c,68 :: 		paddle[0].h = 9;
0x08E6	0x0E09      	MOVLW       9
0x08E8	0x6F9C      	MOVWF       _paddle+3, 1
;pong.c,70 :: 		paddle[1].x =  121;
0x08EA	0x0E79      	MOVLW       121
0x08EC	0x6F9D      	MOVWF       _paddle+4, 1
;pong.c,71 :: 		paddle[1].y = 30;
0x08EE	0x0E1E      	MOVLW       30
0x08F0	0x6F9E      	MOVWF       _paddle+5, 1
;pong.c,72 :: 		paddle[1].w = 2;
0x08F2	0x0E02      	MOVLW       2
0x08F4	0x6F9F      	MOVWF       _paddle+6, 1
;pong.c,73 :: 		paddle[1].h = 9;
0x08F6	0x0E09      	MOVLW       9
0x08F8	0x6FA0      	MOVWF       _paddle+7, 1
;pong.c,75 :: 		ball.x = 64;
0x08FA	0x0E40      	MOVLW       64
0x08FC	0x6F95      	MOVWF       _ball, 1
;pong.c,76 :: 		ball.y = 32;
0x08FE	0x0E20      	MOVLW       32
0x0900	0x6F96      	MOVWF       _ball+1, 1
;pong.c,77 :: 		ball.dx = 2;
0x0902	0x0E02      	MOVLW       2
0x0904	0x6F97      	MOVWF       _ball+2, 1
;pong.c,78 :: 		ball.dy = 2;
0x0906	0x0E02      	MOVLW       2
0x0908	0x6F98      	MOVWF       _ball+3, 1
;pong.c,80 :: 		draw_player(paddle[0].x, paddle[0].y, paddle[0].w, paddle[0].h);
0x090A	0x0E05      	MOVLW       5
0x090C	0x6FEA      	MOVWF       FARG_draw_player_x, 1
0x090E	0x0E1E      	MOVLW       30
0x0910	0x6FEB      	MOVWF       FARG_draw_player_y, 1
0x0912	0x0E02      	MOVLW       2
0x0914	0x6FEC      	MOVWF       FARG_draw_player_w, 1
0x0916	0x0E09      	MOVLW       9
0x0918	0x6FED      	MOVWF       FARG_draw_player_h, 1
0x091A	0xDCF5      	RCALL       _draw_player
;pong.c,81 :: 		draw_player(paddle[1].x, paddle[1].y, paddle[1].w, paddle[1].h);
0x091C	0xF0EAC09D  	MOVFF       _paddle+4, FARG_draw_player_x
0x0920	0xF0EBC09E  	MOVFF       _paddle+5, FARG_draw_player_y
0x0924	0xF0ECC09F  	MOVFF       _paddle+6, FARG_draw_player_w
0x0928	0xF0EDC0A0  	MOVFF       _paddle+7, FARG_draw_player_h
0x092C	0xDCEC      	RCALL       _draw_player
;pong.c,82 :: 		DrawBall(ball.x, ball.y);
0x092E	0xF0EAC095  	MOVFF       _ball, FARG_DrawBall_x
0x0932	0xF0EBC096  	MOVFF       _ball+1, FARG_DrawBall_y
0x0936	0xDCAE      	RCALL       _DrawBall
;pong.c,83 :: 		}
L_end_init:
0x0938	0x0012      	RETURN      0
; end of _init
_Glcd_Init:
;__Lib_Glcd.c,147 :: 		
;__Lib_Glcd.c,148 :: 		
0x093A	0x0100      	MOVLB       0
0x093C	0x6BAD      	CLRF        __Lib_Glcd_FontInitialized, 1
;__Lib_Glcd.c,149 :: 		
0x093E	0x6BB3      	CLRF        __Lib_Glcd_ExternalFontSet, 1
0x0940	0x6BB4      	CLRF        __Lib_Glcd_ExternalFontSet+1, 1
;__Lib_Glcd.c,151 :: 		
0x0942	0x9A93      	BCF         GLCD_RST_Direction, BitPos(GLCD_RST_Direction+0) 
;__Lib_Glcd.c,152 :: 		
0x0944	0x9893      	BCF         GLCD_EN_Direction, BitPos(GLCD_EN_Direction+0) 
;__Lib_Glcd.c,153 :: 		
0x0946	0x9493      	BCF         GLCD_RS_Direction, BitPos(GLCD_RS_Direction+0) 
;__Lib_Glcd.c,154 :: 		
0x0948	0x9693      	BCF         GLCD_RW_Direction, BitPos(GLCD_RW_Direction+0) 
;__Lib_Glcd.c,155 :: 		
0x094A	0x9093      	BCF         GLCD_CS1_Direction, BitPos(GLCD_CS1_Direction+0) 
;__Lib_Glcd.c,156 :: 		
0x094C	0x9293      	BCF         GLCD_CS2_Direction, BitPos(GLCD_CS2_Direction+0) 
;__Lib_Glcd.c,158 :: 		
0x094E	0x9A8A      	BCF         GLCD_RST, BitPos(GLCD_RST+0) 
;__Lib_Glcd.c,163 :: 		
0x0950	0x0E12      	MOVLW       18
0x0952	0x6E00      	MOVWF       R0 
0x0954	0x0E00      	MOVLW       0
0x0956	0x6E01      	MOVWF       R1 
0x0958	0x0E83      	MOVLW       GLCD_DataPort
0x095A	0x2400      	ADDWF       R0, 0 
0x095C	0x6EE1      	MOVWF       FSR1L 
0x095E	0x0E0F      	MOVLW       hi_addr(GLCD_DataPort)
0x0960	0x2001      	ADDWFC      R1, 0 
0x0962	0x6EE2      	MOVWF       FSR1H 
0x0964	0x6AE6      	CLRF        POSTINC1 
;__Lib_Glcd.c,173 :: 		
0x0966	0x948A      	BCF         GLCD_RS, BitPos(GLCD_RS+0) 
;__Lib_Glcd.c,174 :: 		
0x0968	0x968A      	BCF         GLCD_RW, BitPos(GLCD_RW+0) 
;__Lib_Glcd.c,176 :: 		
0x096A	0x908A      	BCF         GLCD_CS1, BitPos(GLCD_CS1+0) 
;__Lib_Glcd.c,177 :: 		
0x096C	0x828A      	BSF         GLCD_CS2, BitPos(GLCD_CS2+0) 
;__Lib_Glcd.c,179 :: 		
0x096E	0x8A8A      	BSF         GLCD_RST, BitPos(GLCD_RST+0) 
;__Lib_Glcd.c,186 :: 		
0x0970	0x0E3F      	MOVLW       63
0x0972	0x6E83      	MOVWF       GLCD_DataPort 
;__Lib_Glcd.c,187 :: 		
0x0974	0xF000EC17  	CALL        __Lib_Glcd_Strobe, 0
;__Lib_Glcd.c,189 :: 		
0x0978	0x0EC0      	MOVLW       192
0x097A	0x6E83      	MOVWF       GLCD_DataPort 
;__Lib_Glcd.c,190 :: 		
0x097C	0xF000EC17  	CALL        __Lib_Glcd_Strobe, 0
;__Lib_Glcd.c,192 :: 		
0x0980	0x808A      	BSF         GLCD_CS1, BitPos(GLCD_CS1+0) 
;__Lib_Glcd.c,193 :: 		
0x0982	0x928A      	BCF         GLCD_CS2, BitPos(GLCD_CS2+0) 
;__Lib_Glcd.c,195 :: 		
0x0984	0x0E3F      	MOVLW       63
0x0986	0x6E83      	MOVWF       GLCD_DataPort 
;__Lib_Glcd.c,196 :: 		
0x0988	0xF000EC17  	CALL        __Lib_Glcd_Strobe, 0
;__Lib_Glcd.c,198 :: 		
0x098C	0x0EC0      	MOVLW       192
0x098E	0x6E83      	MOVWF       GLCD_DataPort 
;__Lib_Glcd.c,199 :: 		
0x0990	0xF000EC17  	CALL        __Lib_Glcd_Strobe, 0
;__Lib_Glcd.c,201 :: 		
L_end_Glcd_Init:
0x0994	0x0012      	RETURN      0
; end of _Glcd_Init
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x0996	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0998	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x099C	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x099E	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x09A0	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x09A2	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x09A4	0x0012      	RETURN      0
; end of ___CC2DW
_ADC_Read:
;__Lib_ADC_A_D.c,51 :: 		
;__Lib_ADC_A_D.c,54 :: 		
0x09A6	0x6AC2      	CLRF        ADCON0 
;__Lib_ADC_A_D.c,55 :: 		
0x09A8	0x0100      	MOVLB       0
0x09AA	0x1D8B      	COMF        _vref_mask, 0, 1
0x09AC	0x6E00      	MOVWF       R0 
0x09AE	0x5000      	MOVF        R0, 0 
0x09B0	0x16C1      	ANDWF       ADCON1, 1 
;__Lib_ADC_A_D.c,56 :: 		
0x09B2	0x0E07      	MOVLW       7
0x09B4	0x12C0      	IORWF       ADCON2, 1 
;__Lib_ADC_A_D.c,57 :: 		
0x09B6	0x8EC0      	BSF         ADCON2, 7 
;__Lib_ADC_A_D.c,58 :: 		
0x09B8	0xF000C0DA  	MOVFF       FARG_ADC_Read_channel, R0
0x09BC	0x3600      	RLCF        R0, 1 
0x09BE	0x9000      	BCF         R0, 0 
0x09C0	0x3600      	RLCF        R0, 1 
0x09C2	0x9000      	BCF         R0, 0 
0x09C4	0x5000      	MOVF        R0, 0 
0x09C6	0x12C2      	IORWF       ADCON0, 1 
;__Lib_ADC_A_D.c,59 :: 		
0x09C8	0x80C2      	BSF         ADCON0, 0 
;__Lib_ADC_A_D.c,60 :: 		
0x09CA	0xDEAF      	RCALL       _Delay_22us
;__Lib_ADC_A_D.c,61 :: 		
0x09CC	0x82C2      	BSF         ADCON0, 1 
;__Lib_ADC_A_D.c,62 :: 		
L_ADC_Read2:
0x09CE	0xA2C2      	BTFSS       ADCON0, 1 
0x09D0	0xD001      	BRA         L_ADC_Read3
;__Lib_ADC_A_D.c,63 :: 		
0x09D2	0xD7FD      	BRA         L_ADC_Read2
L_ADC_Read3:
;__Lib_ADC_A_D.c,64 :: 		
0x09D4	0xF001CFC4  	MOVFF       ADRESH, R1
0x09D8	0x6A00      	CLRF        R0 
;__Lib_ADC_A_D.c,65 :: 		
0x09DA	0x50C3      	MOVF        ADRESL, 0 
0x09DC	0x1200      	IORWF       R0, 1 
0x09DE	0x0E00      	MOVLW       0
0x09E0	0x1201      	IORWF       R1, 1 
;__Lib_ADC_A_D.c,66 :: 		
0x09E2	0x90C2      	BCF         ADCON0, 0 
;__Lib_ADC_A_D.c,68 :: 		
;__Lib_ADC_A_D.c,69 :: 		
L_end_ADC_Read:
0x09E4	0x0012      	RETURN      0
; end of _ADC_Read
_cover:
;pong.c,233 :: 		void cover(){
;pong.c,234 :: 		Glcd_Image(portada);
0x09E6	0x0E78      	MOVLW       _Portada
0x09E8	0x0100      	MOVLB       0
0x09EA	0x6FE0      	MOVWF       FARG_Glcd_Image_image, 1
0x09EC	0x0E1A      	MOVLW       hi_addr(_Portada)
0x09EE	0x6FE1      	MOVWF       FARG_Glcd_Image_image+1, 1
0x09F0	0x0E00      	MOVLW       higher_addr(_Portada)
0x09F2	0x6FE2      	MOVWF       FARG_Glcd_Image_image+2, 1
0x09F4	0xDEA0      	RCALL       _Glcd_Image
;pong.c,235 :: 		while(1){
L_cover69:
;pong.c,236 :: 		if(Button(&PORTC,1,1,0)){
0x09F6	0x0E82      	MOVLW       PORTC
0x09F8	0x6FE0      	MOVWF       FARG_Button_port, 1
0x09FA	0x0E0F      	MOVLW       hi_addr(PORTC)
0x09FC	0x6FE1      	MOVWF       FARG_Button_port+1, 1
0x09FE	0x0E01      	MOVLW       1
0x0A00	0x6FE2      	MOVWF       FARG_Button_pin, 1
0x0A02	0x0E01      	MOVLW       1
0x0A04	0x6FE3      	MOVWF       FARG_Button_time_ms, 1
0x0A06	0x6BE4      	CLRF        FARG_Button_active_state, 1
0x0A08	0xDD16      	RCALL       _Button
0x0A0A	0x5200      	MOVF        R0, 1 
0x0A0C	0xE003      	BZ          L_cover71
;pong.c,237 :: 		Glcd_Fill(0x00);
0x0A0E	0x6BE0      	CLRF        FARG_Glcd_Fill_pattern, 1
0x0A10	0xDE57      	RCALL       _Glcd_Fill
;pong.c,238 :: 		break;
0x0A12	0xD001      	BRA         L_cover70
;pong.c,239 :: 		}
L_cover71:
;pong.c,240 :: 		}
0x0A14	0xD7F0      	BRA         L_cover69
L_cover70:
;pong.c,241 :: 		}
L_end_cover:
0x0A16	0x0012      	RETURN      0
; end of _cover
_ADC_Init:
;__Lib_ADC_A_D.c,13 :: 		
;__Lib_ADC_A_D.c,14 :: 		
0x0A18	0x0EFF      	MOVLW       _ADC_Get_Sample
0x0A1A	0x0100      	MOVLB       0
0x0A1C	0x6FCD      	MOVWF       _ADC_Get_Sample_Ptr, 1
0x0A1E	0x0EFF      	MOVLW       hi_addr(_ADC_Get_Sample)
0x0A20	0x6FCE      	MOVWF       _ADC_Get_Sample_Ptr+1, 1
0x0A22	0x0EFF      	MOVLW       FARG_ADC_Get_Sample_channel
0x0A24	0x6FCF      	MOVWF       _ADC_Get_Sample_Ptr+2, 1
0x0A26	0x0EFF      	MOVLW       hi_addr(FARG_ADC_Get_Sample_channel)
0x0A28	0x6FD0      	MOVWF       _ADC_Get_Sample_Ptr+3, 1
;__Lib_ADC_A_D.c,16 :: 		
0x0A2A	0x6AC2      	CLRF        ADCON0 
;__Lib_ADC_A_D.c,17 :: 		
0x0A2C	0x1D8B      	COMF        _vref_mask, 0, 1
0x0A2E	0x6E00      	MOVWF       R0 
0x0A30	0x5000      	MOVF        R0, 0 
0x0A32	0x16C1      	ANDWF       ADCON1, 1 
;__Lib_ADC_A_D.c,18 :: 		
0x0A34	0x0E07      	MOVLW       7
0x0A36	0x12C0      	IORWF       ADCON2, 1 
;__Lib_ADC_A_D.c,19 :: 		
0x0A38	0x8EC0      	BSF         ADCON2, 7 
;__Lib_ADC_A_D.c,20 :: 		
0x0A3A	0x80C2      	BSF         ADCON0, 0 
;__Lib_ADC_A_D.c,21 :: 		
L_end_ADC_Init:
0x0A3C	0x0012      	RETURN      0
; end of _ADC_Init
_UART1_Init:
;__Lib_UART_c67.c,15 :: 		
;__Lib_UART_c67.c,18 :: 		
0x0A3E	0x0EF8      	MOVLW       _UART1_Write
0x0A40	0x0100      	MOVLB       0
0x0A42	0x6FBD      	MOVWF       _UART_Wr_Ptr, 1
0x0A44	0x0E02      	MOVLW       hi_addr(_UART1_Write)
0x0A46	0x6FBE      	MOVWF       _UART_Wr_Ptr+1, 1
0x0A48	0x0EEA      	MOVLW       FARG_UART1_Write_data_
0x0A4A	0x6FBF      	MOVWF       _UART_Wr_Ptr+2, 1
0x0A4C	0x0E00      	MOVLW       hi_addr(FARG_UART1_Write_data_)
0x0A4E	0x6FC0      	MOVWF       _UART_Wr_Ptr+3, 1
;__Lib_UART_c67.c,19 :: 		
0x0A50	0x0E78      	MOVLW       _UART1_Read
0x0A52	0x6FC1      	MOVWF       _UART_Rd_Ptr, 1
0x0A54	0x0E02      	MOVLW       hi_addr(_UART1_Read)
0x0A56	0x6FC2      	MOVWF       _UART_Rd_Ptr+1, 1
0x0A58	0x0E00      	MOVLW       0
0x0A5A	0x6FC3      	MOVWF       _UART_Rd_Ptr+2, 1
0x0A5C	0x0E00      	MOVLW       0
0x0A5E	0x6FC4      	MOVWF       _UART_Rd_Ptr+3, 1
;__Lib_UART_c67.c,20 :: 		
0x0A60	0x0E8A      	MOVLW       _UART1_Data_Ready
0x0A62	0x6FB5      	MOVWF       _UART_Rdy_Ptr, 1
0x0A64	0x0E02      	MOVLW       hi_addr(_UART1_Data_Ready)
0x0A66	0x6FB6      	MOVWF       _UART_Rdy_Ptr+1, 1
0x0A68	0x0E00      	MOVLW       0
0x0A6A	0x6FB7      	MOVWF       _UART_Rdy_Ptr+2, 1
0x0A6C	0x0E00      	MOVLW       0
0x0A6E	0x6FB8      	MOVWF       _UART_Rdy_Ptr+3, 1
;__Lib_UART_c67.c,21 :: 		
0x0A70	0x0EB6      	MOVLW       _UART1_Tx_Idle
0x0A72	0x6FB9      	MOVWF       _UART_Tx_Idle_Ptr, 1
0x0A74	0x0E06      	MOVLW       hi_addr(_UART1_Tx_Idle)
0x0A76	0x6FBA      	MOVWF       _UART_Tx_Idle_Ptr+1, 1
0x0A78	0x0E00      	MOVLW       0
0x0A7A	0x6FBB      	MOVWF       _UART_Tx_Idle_Ptr+2, 1
0x0A7C	0x0E00      	MOVLW       0
0x0A7E	0x6FBC      	MOVWF       _UART_Tx_Idle_Ptr+3, 1
;__Lib_UART_c67.c,23 :: 		
0x0A80	0x8AAC      	BSF         TXSTA, 5 
;__Lib_UART_c67.c,24 :: 		
0x0A82	0x0E90      	MOVLW       144
0x0A84	0x6EAB      	MOVWF       RCSTA 
;__Lib_UART_c67.c,25 :: 		
0x0A86	0x8E94      	BSF         TRISC7_bit, BitPos(TRISC7_bit+0) 
;__Lib_UART_c67.c,26 :: 		
0x0A88	0x9C94      	BCF         TRISC6_bit, BitPos(TRISC6_bit+0) 
;__Lib_UART_c67.c,28 :: 		
L_UART1_Init0:
0x0A8A	0xAA9E      	BTFSS       PIR1, 5 
0x0A8C	0xD003      	BRA         L_UART1_Init1
;__Lib_UART_c67.c,29 :: 		
0x0A8E	0xF000CFAE  	MOVFF       RCREG, R0
0x0A92	0xD7FB      	BRA         L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,30 :: 		
L_end_UART1_Init:
0x0A94	0x0012      	RETURN      0
; end of _UART1_Init
_Glcd_Write_Text:
;__Lib_Glcd.c,281 :: 		
;__Lib_Glcd.c,282 :: 		
0x0A96	0x0100      	MOVLB       0
0x0A98	0x6BDF      	CLRF        Glcd_Write_Text_i_L0, 1
;__Lib_Glcd.c,284 :: 		
0x0A9A	0x51AD      	MOVF        __Lib_Glcd_FontInitialized, 0, 1
0x0A9C	0x0A00      	XORLW       0
0x0A9E	0xE10E      	BNZ         L_Glcd_Write_Text28
;__Lib_Glcd.c,286 :: 		
0x0AA0	0x0E05      	MOVLW       5
0x0AA2	0x6FAF      	MOVWF       __Lib_Glcd_fontW, 1
;__Lib_Glcd.c,287 :: 		
0x0AA4	0x0E07      	MOVLW       7
0x0AA6	0x6FAE      	MOVWF       __Lib_Glcd_fontH, 1
;__Lib_Glcd.c,288 :: 		
0x0AA8	0x0E78      	MOVLW       _font5x7
0x0AAA	0x6FB0      	MOVWF       __Lib_Glcd_fontDef, 1
0x0AAC	0x0E1E      	MOVLW       hi_addr(_font5x7)
0x0AAE	0x6FB1      	MOVWF       __Lib_Glcd_fontDef+1, 1
0x0AB0	0x0E00      	MOVLW       higher_addr(_font5x7)
0x0AB2	0x6FB2      	MOVWF       __Lib_Glcd_fontDef+2, 1
;__Lib_Glcd.c,289 :: 		
0x0AB4	0x0E20      	MOVLW       32
0x0AB6	0x6FCB      	MOVWF       __Lib_Glcd_fontOffset, 1
0x0AB8	0x0E00      	MOVLW       0
0x0ABA	0x6FCC      	MOVWF       __Lib_Glcd_fontOffset+1, 1
;__Lib_Glcd.c,290 :: 		
L_Glcd_Write_Text28:
;__Lib_Glcd.c,293 :: 		
L_Glcd_Write_Text29:
0x0ABC	0x51DF      	MOVF        Glcd_Write_Text_i_L0, 0, 1
0x0ABE	0x25DA      	ADDWF       FARG_Glcd_Write_Text_text, 0, 1
0x0AC0	0x6EE9      	MOVWF       FSR0L 
0x0AC2	0x0E00      	MOVLW       0
0x0AC4	0x21DB      	ADDWFC      FARG_Glcd_Write_Text_text+1, 0, 1
0x0AC6	0x6EEA      	MOVWF       FSR0H 
0x0AC8	0x52EE      	MOVF        POSTINC0, 1 
0x0ACA	0xE016      	BZ          L_Glcd_Write_Text30
;__Lib_Glcd.c,294 :: 		
0x0ACC	0x51DF      	MOVF        Glcd_Write_Text_i_L0, 0, 1
0x0ACE	0x25DA      	ADDWF       FARG_Glcd_Write_Text_text, 0, 1
0x0AD0	0x6EE9      	MOVWF       FSR0L 
0x0AD2	0x0E00      	MOVLW       0
0x0AD4	0x21DB      	ADDWFC      FARG_Glcd_Write_Text_text+1, 0, 1
0x0AD6	0x6EEA      	MOVWF       FSR0H 
0x0AD8	0xF0E0CFEE  	MOVFF       POSTINC0, FARG_Glcd_Write_Char_chr
0x0ADC	0xF0E1C0DC  	MOVFF       FARG_Glcd_Write_Text_x_pos, FARG_Glcd_Write_Char_x_pos
0x0AE0	0xF0E2C0DD  	MOVFF       FARG_Glcd_Write_Text_page_num, FARG_Glcd_Write_Char_page_num
0x0AE4	0xF0E3C0DE  	MOVFF       FARG_Glcd_Write_Text_color, FARG_Glcd_Write_Char_color
0x0AE8	0xDE6B      	RCALL       _Glcd_Write_Char
;__Lib_Glcd.c,295 :: 		
0x0AEA	0x51AF      	MOVF        __Lib_Glcd_fontW, 0, 1
0x0AEC	0x0F01      	ADDLW       1
0x0AEE	0x6E00      	MOVWF       R0 
0x0AF0	0x5000      	MOVF        R0, 0 
0x0AF2	0x27DC      	ADDWF       FARG_Glcd_Write_Text_x_pos, 1, 1
;__Lib_Glcd.c,296 :: 		
0x0AF4	0x2BDF      	INCF        Glcd_Write_Text_i_L0, 1, 1
;__Lib_Glcd.c,297 :: 		
0x0AF6	0xD7E2      	BRA         L_Glcd_Write_Text29
L_Glcd_Write_Text30:
;__Lib_Glcd.c,298 :: 		
L_end_Glcd_Write_Text:
0x0AF8	0x0012      	RETURN      0
; end of _Glcd_Write_Text
_output_data:
;pong.c,378 :: 		void output_data(char *serial_dir){
;pong.c,379 :: 		while (UART1_Tx_Idle()!= 1);
L_output_data111:
0x0AFA	0xDDDD      	RCALL       _UART1_Tx_Idle
0x0AFC	0x5000      	MOVF        R0, 0 
0x0AFE	0x0A01      	XORLW       1
0x0B00	0xE001      	BZ          L_output_data112
0x0B02	0xD7FB      	BRA         L_output_data111
L_output_data112:
;pong.c,380 :: 		UART1_Write_Text(serial_dir);
0x0B04	0xF0E0C0DA  	MOVFF       FARG_output_data_serial_dir, FARG_UART1_Write_Text_uart_text
0x0B08	0xF0E1C0DB  	MOVFF       FARG_output_data_serial_dir+1, FARG_UART1_Write_Text_uart_text+1
0x0B0C	0xDD6D      	RCALL       _UART1_Write_Text
;pong.c,381 :: 		}
L_end_output_data:
0x0B0E	0x0012      	RETURN      0
; end of _output_data
_data_pack:
;pong.c,338 :: 		void data_pack() {  //Funcion para empaquetar datos a enviar
;pong.c,340 :: 		info[0] = ball.x + '0';
0x0B10	0x0E30      	MOVLW       48
0x0B12	0x0100      	MOVLB       0
0x0B14	0x2595      	ADDWF       _ball, 0, 1
0x0B16	0x6F8C      	MOVWF       _info, 1
;pong.c,341 :: 		info[1] = ball.y + '0';
0x0B18	0x0E30      	MOVLW       48
0x0B1A	0x2596      	ADDWF       _ball+1, 0, 1
0x0B1C	0x6F8D      	MOVWF       _info+1, 1
;pong.c,344 :: 		info[2] = score[0] + '0';
0x0B1E	0x0E30      	MOVLW       48
0x0B20	0x2573      	ADDWF       _score, 0, 1
0x0B22	0x6F8E      	MOVWF       _info+2, 1
;pong.c,345 :: 		info[3] = score[1] + '0';
0x0B24	0x0E30      	MOVLW       48
0x0B26	0x2574      	ADDWF       _score+1, 0, 1
0x0B28	0x6F8F      	MOVWF       _info+3, 1
;pong.c,348 :: 		info[4] = paddle[0].y + '0';  //Maestro
0x0B2A	0x0E30      	MOVLW       48
0x0B2C	0x259A      	ADDWF       _paddle+1, 0, 1
0x0B2E	0x6F90      	MOVWF       _info+4, 1
;pong.c,349 :: 		info[5] = paddle[1].y + '0';  // Esclavo
0x0B30	0x0E30      	MOVLW       48
0x0B32	0x259E      	ADDWF       _paddle+5, 0, 1
0x0B34	0x6F91      	MOVWF       _info+5, 1
;pong.c,352 :: 		info[6] = 'O';
0x0B36	0x0E4F      	MOVLW       79
0x0B38	0x6F92      	MOVWF       _info+6, 1
;pong.c,353 :: 		info[7] = 'K';
0x0B3A	0x0E4B      	MOVLW       75
0x0B3C	0x6F93      	MOVWF       _info+7, 1
;pong.c,354 :: 		info[8] = 0;
0x0B3E	0x6B94      	CLRF        _info+8, 1
;pong.c,355 :: 		}
L_end_data_pack:
0x0B40	0x0012      	RETURN      0
; end of _data_pack
_save_old_data:
;pong.c,388 :: 		void save_old_data(){
;pong.c,389 :: 		send_paddles[0].y = paddle[0].y;
0x0B42	0xF0A6C09A  	MOVFF       _paddle+1, _send_paddles+1
;pong.c,390 :: 		send_paddles[1].y = paddle[1].y;
0x0B46	0xF0AAC09E  	MOVFF       _paddle+5, _send_paddles+5
;pong.c,392 :: 		send_balls.x = ball.x;
0x0B4A	0xF0A1C095  	MOVFF       _ball, _send_balls
;pong.c,393 :: 		send_balls.y = ball.y;
0x0B4E	0xF0A2C096  	MOVFF       _ball+1, _send_balls+1
;pong.c,394 :: 		send_balls.dx = ball.dx;
0x0B52	0xF0A3C097  	MOVFF       _ball+2, _send_balls+2
;pong.c,395 :: 		send_balls.dy = ball.dy;
0x0B56	0xF0A4C098  	MOVFF       _ball+3, _send_balls+3
;pong.c,396 :: 		}
L_end_save_old_data:
0x0B5A	0x0012      	RETURN      0
; end of _save_old_data
_input_data:
;pong.c,383 :: 		void input_data(char *text_dir){
;pong.c,384 :: 		while(UART1_Data_Ready()==0);
L_input_data113:
0x0B5C	0xF001EC45  	CALL        _UART1_Data_Ready, 0
0x0B60	0x5000      	MOVF        R0, 0 
0x0B62	0x0A00      	XORLW       0
0x0B64	0xE101      	BNZ         L_input_data114
0x0B66	0xD7FA      	BRA         L_input_data113
L_input_data114:
;pong.c,385 :: 		UART1_Read_Text(text_dir, "OK", 255);
0x0B68	0xF0E0C0DA  	MOVFF       FARG_input_data_text_dir, FARG_UART1_Read_Text_Output
0x0B6C	0xF0E1C0DB  	MOVFF       FARG_input_data_text_dir+1, FARG_UART1_Read_Text_Output+1
0x0B70	0x0E80      	MOVLW       ?lstr1_pong
0x0B72	0x0100      	MOVLB       0
0x0B74	0x6FE2      	MOVWF       FARG_UART1_Read_Text_Delimiter, 1
0x0B76	0x0E00      	MOVLW       hi_addr(?lstr1_pong)
0x0B78	0x6FE3      	MOVWF       FARG_UART1_Read_Text_Delimiter+1, 1
0x0B7A	0x0EFF      	MOVLW       255
0x0B7C	0x6FE4      	MOVWF       FARG_UART1_Read_Text_Attempts, 1
0x0B7E	0xDD4E      	RCALL       _UART1_Read_Text
;pong.c,386 :: 		}
L_end_input_data:
0x0B80	0x0012      	RETURN      0
; end of _input_data
_output_character:
;pong.c,368 :: 		void output_character(char charValue){
;pong.c,369 :: 		while (UART1_Tx_Idle()!= 1);
L_output_character107:
0x0B82	0xDD99      	RCALL       _UART1_Tx_Idle
0x0B84	0x5000      	MOVF        R0, 0 
0x0B86	0x0A01      	XORLW       1
0x0B88	0xE001      	BZ          L_output_character108
0x0B8A	0xD7FB      	BRA         L_output_character107
L_output_character108:
;pong.c,370 :: 		UART1_Write(charValue);
0x0B8C	0xF0EAC0DA  	MOVFF       FARG_output_character_charValue, FARG_UART1_Write_data_
0x0B90	0xF001EC7C  	CALL        _UART1_Write, 0
;pong.c,371 :: 		}
L_end_output_character:
0x0B94	0x0012      	RETURN      0
; end of _output_character
_check_winner:
;pong.c,209 :: 		short check_winner(){
;pong.c,212 :: 		for(i = 0; i < 2; i++){
0x0B96	0x6A01      	CLRF        R1 
L_check_winner60:
0x0B98	0x0E02      	MOVLW       2
0x0B9A	0x5C01      	SUBWF       R1, 0 
0x0B9C	0xE225      	BC          L_check_winner61
;pong.c,213 :: 		if(score[i] == 3){
0x0B9E	0x0E73      	MOVLW       _score
0x0BA0	0x6EE9      	MOVWF       FSR0L 
0x0BA2	0x0E00      	MOVLW       hi_addr(_score)
0x0BA4	0x6EEA      	MOVWF       FSR0H 
0x0BA6	0x5001      	MOVF        R1, 0 
0x0BA8	0x26E9      	ADDWF       FSR0L, 1 
0x0BAA	0xB0D8      	BTFSC       STATUS, 0 
0x0BAC	0x2AEA      	INCF        FSR0H, 1 
0x0BAE	0x50EE      	MOVF        POSTINC0, 0 
0x0BB0	0x0A03      	XORLW       3
0x0BB2	0xE118      	BNZ         L_check_winner63
;pong.c,214 :: 		for(j = 0; j < 2; j++){
0x0BB4	0x6A02      	CLRF        R2 
L_check_winner64:
0x0BB6	0x0E02      	MOVLW       2
0x0BB8	0x5C02      	SUBWF       R2, 0 
0x0BBA	0xE20B      	BC          L_check_winner65
;pong.c,215 :: 		score[j] = 0;
0x0BBC	0x0E73      	MOVLW       _score
0x0BBE	0x6EE1      	MOVWF       FSR1L 
0x0BC0	0x0E00      	MOVLW       hi_addr(_score)
0x0BC2	0x6EE2      	MOVWF       FSR1H 
0x0BC4	0x5002      	MOVF        R2, 0 
0x0BC6	0x26E1      	ADDWF       FSR1L, 1 
0x0BC8	0xB0D8      	BTFSC       STATUS, 0 
0x0BCA	0x2AE2      	INCF        FSR1H, 1 
0x0BCC	0x6AE6      	CLRF        POSTINC1 
;pong.c,214 :: 		for(j = 0; j < 2; j++){
0x0BCE	0x2A02      	INCF        R2, 1 
;pong.c,216 :: 		}
0x0BD0	0xD7F2      	BRA         L_check_winner64
L_check_winner65:
;pong.c,217 :: 		if (i == 0 ){
0x0BD2	0x5001      	MOVF        R1, 0 
0x0BD4	0x0A00      	XORLW       0
0x0BD6	0xE103      	BNZ         L_check_winner67
;pong.c,218 :: 		return 1;
0x0BD8	0x0E01      	MOVLW       1
0x0BDA	0x6E00      	MOVWF       R0 
0x0BDC	0xD006      	BRA         L_end_check_winner
;pong.c,219 :: 		}
L_check_winner67:
;pong.c,221 :: 		return 2;
0x0BDE	0x0E02      	MOVLW       2
0x0BE0	0x6E00      	MOVWF       R0 
0x0BE2	0xD003      	BRA         L_end_check_winner
;pong.c,223 :: 		}
L_check_winner63:
;pong.c,212 :: 		for(i = 0; i < 2; i++){
0x0BE4	0x2A01      	INCF        R1, 1 
;pong.c,224 :: 		}
0x0BE6	0xD7D8      	BRA         L_check_winner60
L_check_winner61:
;pong.c,225 :: 		return 0;
0x0BE8	0x6A00      	CLRF        R0 
;pong.c,226 :: 		}
L_end_check_winner:
0x0BEA	0x0012      	RETURN      0
; end of _check_winner
_move_ball:
;pong.c,105 :: 		void move_ball(){
;pong.c,108 :: 		if((turno == 10 && flag == 1) ||(turno == 5 && flag == 2) ){
0x0BEC	0x0100      	MOVLB       0
0x0BEE	0x5175      	MOVF        _turno, 0, 1
0x0BF0	0x0A0A      	XORLW       10
0x0BF2	0xE104      	BNZ         L__move_ball215
0x0BF4	0x5176      	MOVF        _flag, 0, 1
0x0BF6	0x0A01      	XORLW       1
0x0BF8	0xE101      	BNZ         L__move_ball215
0x0BFA	0xD008      	BRA         L__move_ball213
L__move_ball215:
0x0BFC	0x5175      	MOVF        _turno, 0, 1
0x0BFE	0x0A05      	XORLW       5
0x0C00	0xE104      	BNZ         L__move_ball214
0x0C02	0x5176      	MOVF        _flag, 0, 1
0x0C04	0x0A02      	XORLW       2
0x0C06	0xE101      	BNZ         L__move_ball214
0x0C08	0xD001      	BRA         L__move_ball213
L__move_ball214:
0x0C0A	0xD110      	BRA         L_move_ball16
L__move_ball213:
;pong.c,109 :: 		Glcd_Dot(ball.x, ball.y, 0);
0x0C0C	0xF0F3C095  	MOVFF       _ball, FARG_Glcd_Dot_x_pos
0x0C10	0xF0F4C096  	MOVFF       _ball+1, FARG_Glcd_Dot_y_pos
0x0C14	0x6BF5      	CLRF        FARG_Glcd_Dot_color, 1
0x0C16	0xF000EC73  	CALL        _Glcd_Dot, 0
;pong.c,110 :: 		ball.x += ball.dx;
0x0C1A	0x5197      	MOVF        _ball+2, 0, 1
0x0C1C	0x2595      	ADDWF       _ball, 0, 1
0x0C1E	0x6E00      	MOVWF       R0 
0x0C20	0xF095C000  	MOVFF       R0, _ball
;pong.c,111 :: 		ball.y += ball.dy;
0x0C24	0x5198      	MOVF        _ball+3, 0, 1
0x0C26	0x2596      	ADDWF       _ball+1, 0, 1
0x0C28	0x6E00      	MOVWF       R0 
0x0C2A	0xF096C000  	MOVFF       R0, _ball+1
;pong.c,112 :: 		if(ball.x < 3){ //bola entro a la porteria de la izquierda
0x0C2E	0x0E80      	MOVLW       128
0x0C30	0x1995      	XORWF       _ball, 0, 1
0x0C32	0x6E00      	MOVWF       R0 
0x0C34	0x0E80      	MOVLW       128
0x0C36	0x0A03      	XORLW       3
0x0C38	0x5C00      	SUBWF       R0, 0 
0x0C3A	0xE214      	BC          L_move_ball17
;pong.c,113 :: 		score[1] += 1;
0x0C3C	0x2B74      	INCF        _score+1, 1, 1
;pong.c,114 :: 		erase_player(paddle[0].x, paddle[0].y, paddle[0].w, paddle[0].h);
0x0C3E	0xF0E0C099  	MOVFF       _paddle, FARG_erase_player_x
0x0C42	0xF0E1C09A  	MOVFF       _paddle+1, FARG_erase_player_y
0x0C46	0xF0E2C09B  	MOVFF       _paddle+2, FARG_erase_player_w
0x0C4A	0xF0E3C09C  	MOVFF       _paddle+3, FARG_erase_player_h
0x0C4E	0xDD62      	RCALL       _erase_player
;pong.c,115 :: 		erase_player(paddle[1].x, paddle[1].y, paddle[1].w, paddle[1].h);
0x0C50	0xF0E0C09D  	MOVFF       _paddle+4, FARG_erase_player_x
0x0C54	0xF0E1C09E  	MOVFF       _paddle+5, FARG_erase_player_y
0x0C58	0xF0E2C09F  	MOVFF       _paddle+6, FARG_erase_player_w
0x0C5C	0xF0E3C0A0  	MOVFF       _paddle+7, FARG_erase_player_h
0x0C60	0xDD59      	RCALL       _erase_player
;pong.c,116 :: 		init();
0x0C62	0xDE3A      	RCALL       _init
;pong.c,117 :: 		}
L_move_ball17:
;pong.c,118 :: 		if(ball.x > 125){//bola entro a la porteria de la derecha
0x0C64	0x0E80      	MOVLW       128
0x0C66	0x0A7D      	XORLW       125
0x0C68	0x6E00      	MOVWF       R0 
0x0C6A	0x0E80      	MOVLW       128
0x0C6C	0x1995      	XORWF       _ball, 0, 1
0x0C6E	0x5C00      	SUBWF       R0, 0 
0x0C70	0xE214      	BC          L_move_ball18
;pong.c,119 :: 		score[0] += 1;
0x0C72	0x2B73      	INCF        _score, 1, 1
;pong.c,120 :: 		erase_player(paddle[0].x, paddle[0].y, paddle[0].w, paddle[0].h);
0x0C74	0xF0E0C099  	MOVFF       _paddle, FARG_erase_player_x
0x0C78	0xF0E1C09A  	MOVFF       _paddle+1, FARG_erase_player_y
0x0C7C	0xF0E2C09B  	MOVFF       _paddle+2, FARG_erase_player_w
0x0C80	0xF0E3C09C  	MOVFF       _paddle+3, FARG_erase_player_h
0x0C84	0xDD47      	RCALL       _erase_player
;pong.c,121 :: 		erase_player(paddle[1].x, paddle[1].y, paddle[1].w, paddle[1].h);
0x0C86	0xF0E0C09D  	MOVFF       _paddle+4, FARG_erase_player_x
0x0C8A	0xF0E1C09E  	MOVFF       _paddle+5, FARG_erase_player_y
0x0C8E	0xF0E2C09F  	MOVFF       _paddle+6, FARG_erase_player_w
0x0C92	0xF0E3C0A0  	MOVFF       _paddle+7, FARG_erase_player_h
0x0C96	0xDD3E      	RCALL       _erase_player
;pong.c,122 :: 		init();
0x0C98	0xDE1F      	RCALL       _init
;pong.c,123 :: 		}
L_move_ball18:
;pong.c,124 :: 		if(ball.y <= 0 || ball.y >= 63){    // Choque con las paredes de arriba o abajo
0x0C9A	0x0E80      	MOVLW       128
0x0C9C	0x0A00      	XORLW       0
0x0C9E	0x6E00      	MOVWF       R0 
0x0CA0	0x0E80      	MOVLW       128
0x0CA2	0x1996      	XORWF       _ball+1, 0, 1
0x0CA4	0x5C00      	SUBWF       R0, 0 
0x0CA6	0xE208      	BC          L__move_ball212
0x0CA8	0x0E80      	MOVLW       128
0x0CAA	0x1996      	XORWF       _ball+1, 0, 1
0x0CAC	0x6E00      	MOVWF       R0 
0x0CAE	0x0E80      	MOVLW       128
0x0CB0	0x0A3F      	XORLW       63
0x0CB2	0x5C00      	SUBWF       R0, 0 
0x0CB4	0xE201      	BC          L__move_ball212
0x0CB6	0xD005      	BRA         L_move_ball21
L__move_ball212:
;pong.c,125 :: 		ball.dy = -ball.dy;
0x0CB8	0x5198      	MOVF        _ball+3, 0, 1
0x0CBA	0x0800      	SUBLW       0
0x0CBC	0x6E00      	MOVWF       R0 
0x0CBE	0xF098C000  	MOVFF       R0, _ball+3
;pong.c,126 :: 		}
L_move_ball21:
;pong.c,127 :: 		for(i = 0; i < 2; i++){
0x0CC2	0x6BDA      	CLRF        move_ball_i_L0, 1
L_move_ball22:
0x0CC4	0x0E02      	MOVLW       2
0x0CC6	0x5DDA      	SUBWF       move_ball_i_L0, 0, 1
0x0CC8	0xB0D8      	BTFSC       STATUS, 0 
0x0CCA	0xD0B0      	BRA         L_move_ball23
;pong.c,128 :: 		if(check_collision(paddle[i],ball,i)){    //Si choca con algun paddle
0x0CCC	0xF000C0DA  	MOVFF       move_ball_i_L0, R0
0x0CD0	0x0E00      	MOVLW       0
0x0CD2	0x6E01      	MOVWF       R1 
0x0CD4	0x3600      	RLCF        R0, 1 
0x0CD6	0x9000      	BCF         R0, 0 
0x0CD8	0x3601      	RLCF        R1, 1 
0x0CDA	0x3600      	RLCF        R0, 1 
0x0CDC	0x9000      	BCF         R0, 0 
0x0CDE	0x3601      	RLCF        R1, 1 
0x0CE0	0x0E99      	MOVLW       _paddle
0x0CE2	0x2400      	ADDWF       R0, 0 
0x0CE4	0x6EE9      	MOVWF       FSR0L 
0x0CE6	0x0E00      	MOVLW       hi_addr(_paddle)
0x0CE8	0x2001      	ADDWFC      R1, 0 
0x0CEA	0x6EEA      	MOVWF       FSR0H 
0x0CEC	0x0E04      	MOVLW       4
0x0CEE	0x6E00      	MOVWF       R0 
0x0CF0	0x0EE0      	MOVLW       FARG_check_collision_paleta
0x0CF2	0x6EE1      	MOVWF       FSR1L 
0x0CF4	0x0E00      	MOVLW       hi_addr(FARG_check_collision_paleta)
0x0CF6	0x6EE2      	MOVWF       FSR1H 
L_move_ball25:
0x0CF8	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x0CFC	0x0600      	DECF        R0, 1 
0x0CFE	0xE1FC      	BNZ         L_move_ball25
0x0D00	0x0E04      	MOVLW       4
0x0D02	0x6E00      	MOVWF       R0 
0x0D04	0x0EE4      	MOVLW       FARG_check_collision_bola
0x0D06	0x6EE1      	MOVWF       FSR1L 
0x0D08	0x0E00      	MOVLW       hi_addr(FARG_check_collision_bola)
0x0D0A	0x6EE2      	MOVWF       FSR1H 
0x0D0C	0x0E95      	MOVLW       _ball
0x0D0E	0x6EE9      	MOVWF       FSR0L 
0x0D10	0x0E00      	MOVLW       hi_addr(_ball)
0x0D12	0x6EEA      	MOVWF       FSR0H 
L_move_ball26:
0x0D14	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x0D18	0x0600      	DECF        R0, 1 
0x0D1A	0xE1FC      	BNZ         L_move_ball26
0x0D1C	0xF0E8C0DA  	MOVFF       move_ball_i_L0, FARG_check_collision_a
0x0D20	0xF001ECBB  	CALL        _check_collision, 0
0x0D24	0x5200      	MOVF        R0, 1 
0x0D26	0xB4D8      	BTFSC       STATUS, 2 
0x0D28	0xD07F      	BRA         L_move_ball27
;pong.c,129 :: 		ball.dx = -ball.dx;
0x0D2A	0x5197      	MOVF        _ball+2, 0, 1
0x0D2C	0x0800      	SUBLW       0
0x0D2E	0x6E00      	MOVWF       R0 
0x0D30	0xF097C000  	MOVFF       R0, _ball+2
;pong.c,130 :: 		angle = ((paddle[i].y + paddle[i].h)- ball.y); // donde impacta en el paddle
0x0D34	0xF000C0DA  	MOVFF       move_ball_i_L0, R0
0x0D38	0x0E00      	MOVLW       0
0x0D3A	0x6E01      	MOVWF       R1 
0x0D3C	0x3600      	RLCF        R0, 1 
0x0D3E	0x9000      	BCF         R0, 0 
0x0D40	0x3601      	RLCF        R1, 1 
0x0D42	0x3600      	RLCF        R0, 1 
0x0D44	0x9000      	BCF         R0, 0 
0x0D46	0x3601      	RLCF        R1, 1 
0x0D48	0x0E99      	MOVLW       _paddle
0x0D4A	0x2600      	ADDWF       R0, 1 
0x0D4C	0x0E00      	MOVLW       hi_addr(_paddle)
0x0D4E	0x2201      	ADDWFC      R1, 1 
0x0D50	0x0E01      	MOVLW       1
0x0D52	0x2400      	ADDWF       R0, 0 
0x0D54	0x6EE9      	MOVWF       FSR0L 
0x0D56	0x0E00      	MOVLW       0
0x0D58	0x2001      	ADDWFC      R1, 0 
0x0D5A	0x6EEA      	MOVWF       FSR0H 
0x0D5C	0x0E03      	MOVLW       3
0x0D5E	0x2400      	ADDWF       R0, 0 
0x0D60	0x6ED9      	MOVWF       FSR2L 
0x0D62	0x0E00      	MOVLW       0
0x0D64	0x2001      	ADDWFC      R1, 0 
0x0D66	0x6EDA      	MOVWF       FSR2H 
0x0D68	0x50DE      	MOVF        POSTINC2, 0 
0x0D6A	0x24EE      	ADDWF       POSTINC0, 0 
0x0D6C	0x6FDB      	MOVWF       move_ball_angle_L0, 1
0x0D6E	0x5196      	MOVF        _ball+1, 0, 1
0x0D70	0x5FDB      	SUBWF       move_ball_angle_L0, 1, 1
;pong.c,131 :: 		switch(angle){
0x0D72	0xD01C      	BRA         L_move_ball28
;pong.c,132 :: 		case 0:
L_move_ball30:
;pong.c,133 :: 		ball.dy = 3;
0x0D74	0x0E03      	MOVLW       3
0x0D76	0x6F98      	MOVWF       _ball+3, 1
;pong.c,134 :: 		break;
0x0D78	0xD03E      	BRA         L_move_ball29
;pong.c,135 :: 		case 1:
L_move_ball31:
;pong.c,136 :: 		ball.dy = 3;
0x0D7A	0x0E03      	MOVLW       3
0x0D7C	0x6F98      	MOVWF       _ball+3, 1
;pong.c,137 :: 		break;
0x0D7E	0xD03B      	BRA         L_move_ball29
;pong.c,138 :: 		case 2:
L_move_ball32:
;pong.c,139 :: 		ball.dy = 2;
0x0D80	0x0E02      	MOVLW       2
0x0D82	0x6F98      	MOVWF       _ball+3, 1
;pong.c,140 :: 		break;
0x0D84	0xD038      	BRA         L_move_ball29
;pong.c,141 :: 		case 3:
L_move_ball33:
;pong.c,142 :: 		ball.dy = 2;
0x0D86	0x0E02      	MOVLW       2
0x0D88	0x6F98      	MOVWF       _ball+3, 1
;pong.c,143 :: 		break;
0x0D8A	0xD035      	BRA         L_move_ball29
;pong.c,144 :: 		case 4:
L_move_ball34:
;pong.c,145 :: 		ball.dy = 0;
0x0D8C	0x6B98      	CLRF        _ball+3, 1
;pong.c,146 :: 		break;
0x0D8E	0xD033      	BRA         L_move_ball29
;pong.c,147 :: 		case 5:
L_move_ball35:
;pong.c,148 :: 		ball.dy = 0;
0x0D90	0x6B98      	CLRF        _ball+3, 1
;pong.c,149 :: 		break;
0x0D92	0xD031      	BRA         L_move_ball29
;pong.c,150 :: 		case 6:
L_move_ball36:
;pong.c,151 :: 		ball.dy = -2;
0x0D94	0x0EFE      	MOVLW       254
0x0D96	0x6F98      	MOVWF       _ball+3, 1
;pong.c,152 :: 		break;
0x0D98	0xD02E      	BRA         L_move_ball29
;pong.c,153 :: 		case 7:
L_move_ball37:
;pong.c,154 :: 		ball.dy = -2;
0x0D9A	0x0EFE      	MOVLW       254
0x0D9C	0x6F98      	MOVWF       _ball+3, 1
;pong.c,155 :: 		break;
0x0D9E	0xD02B      	BRA         L_move_ball29
;pong.c,156 :: 		case 8:
L_move_ball38:
;pong.c,157 :: 		ball.dy = -3;
0x0DA0	0x0EFD      	MOVLW       253
0x0DA2	0x6F98      	MOVWF       _ball+3, 1
;pong.c,158 :: 		break;
0x0DA4	0xD028      	BRA         L_move_ball29
;pong.c,159 :: 		case 9:
L_move_ball39:
;pong.c,160 :: 		ball.dy = -3;
0x0DA6	0x0EFD      	MOVLW       253
0x0DA8	0x6F98      	MOVWF       _ball+3, 1
;pong.c,161 :: 		break;
0x0DAA	0xD025      	BRA         L_move_ball29
;pong.c,162 :: 		}
L_move_ball28:
0x0DAC	0x51DB      	MOVF        move_ball_angle_L0, 0, 1
0x0DAE	0x0A00      	XORLW       0
0x0DB0	0xE0E1      	BZ          L_move_ball30
0x0DB2	0x51DB      	MOVF        move_ball_angle_L0, 0, 1
0x0DB4	0x0A01      	XORLW       1
0x0DB6	0xE0E1      	BZ          L_move_ball31
0x0DB8	0x51DB      	MOVF        move_ball_angle_L0, 0, 1
0x0DBA	0x0A02      	XORLW       2
0x0DBC	0xE0E1      	BZ          L_move_ball32
0x0DBE	0x51DB      	MOVF        move_ball_angle_L0, 0, 1
0x0DC0	0x0A03      	XORLW       3
0x0DC2	0xE0E1      	BZ          L_move_ball33
0x0DC4	0x0E00      	MOVLW       0
0x0DC6	0xBFDB      	BTFSC       move_ball_angle_L0, 7, 1
0x0DC8	0x0EFF      	MOVLW       255
0x0DCA	0x6E00      	MOVWF       R0 
0x0DCC	0x0E00      	MOVLW       0
0x0DCE	0x1800      	XORWF       R0, 0 
0x0DD0	0xE102      	BNZ         L__move_ball230
0x0DD2	0x0E04      	MOVLW       4
0x0DD4	0x19DB      	XORWF       move_ball_angle_L0, 0, 1
L__move_ball230:
0x0DD6	0xE0DA      	BZ          L_move_ball34
0x0DD8	0x51DB      	MOVF        move_ball_angle_L0, 0, 1
0x0DDA	0x0A05      	XORLW       5
0x0DDC	0xE0D9      	BZ          L_move_ball35
0x0DDE	0x51DB      	MOVF        move_ball_angle_L0, 0, 1
0x0DE0	0x0A06      	XORLW       6
0x0DE2	0xE0D8      	BZ          L_move_ball36
0x0DE4	0x51DB      	MOVF        move_ball_angle_L0, 0, 1
0x0DE6	0x0A07      	XORLW       7
0x0DE8	0xE0D8      	BZ          L_move_ball37
0x0DEA	0x51DB      	MOVF        move_ball_angle_L0, 0, 1
0x0DEC	0x0A08      	XORLW       8
0x0DEE	0xE0D8      	BZ          L_move_ball38
0x0DF0	0x51DB      	MOVF        move_ball_angle_L0, 0, 1
0x0DF2	0x0A09      	XORLW       9
0x0DF4	0xE0D8      	BZ          L_move_ball39
L_move_ball29:
;pong.c,163 :: 		if(ball.dx > 0){
0x0DF6	0x0E80      	MOVLW       128
0x0DF8	0x0A00      	XORLW       0
0x0DFA	0x6E00      	MOVWF       R0 
0x0DFC	0x0E80      	MOVLW       128
0x0DFE	0x1997      	XORWF       _ball+2, 0, 1
0x0E00	0x5C00      	SUBWF       R0, 0 
0x0E02	0xE209      	BC          L_move_ball40
;pong.c,164 :: 		if(ball.x < 0){
0x0E04	0x0E80      	MOVLW       128
0x0E06	0x1995      	XORWF       _ball, 0, 1
0x0E08	0x6E00      	MOVWF       R0 
0x0E0A	0x0E80      	MOVLW       128
0x0E0C	0x0A00      	XORLW       0
0x0E0E	0x5C00      	SUBWF       R0, 0 
0x0E10	0xA0D8      	BTFSS       STATUS, 0 
;pong.c,165 :: 		ball.x = 0;
0x0E12	0x6B95      	CLRF        _ball, 1
;pong.c,166 :: 		}
L_move_ball41:
;pong.c,167 :: 		}
0x0E14	0xD009      	BRA         L_move_ball42
L_move_ball40:
;pong.c,169 :: 		if(ball.x > 127){
0x0E16	0x0E80      	MOVLW       128
0x0E18	0x0A7F      	XORLW       127
0x0E1A	0x6E00      	MOVWF       R0 
0x0E1C	0x0E80      	MOVLW       128
0x0E1E	0x1995      	XORWF       _ball, 0, 1
0x0E20	0x5C00      	SUBWF       R0, 0 
0x0E22	0xE202      	BC          L_move_ball43
;pong.c,170 :: 		ball.x = 127;
0x0E24	0x0E7F      	MOVLW       127
0x0E26	0x6F95      	MOVWF       _ball, 1
;pong.c,171 :: 		}
L_move_ball43:
;pong.c,172 :: 		}
L_move_ball42:
;pong.c,173 :: 		}
L_move_ball27:
;pong.c,127 :: 		for(i = 0; i < 2; i++){
0x0E28	0x2BDA      	INCF        move_ball_i_L0, 1, 1
;pong.c,174 :: 		}
0x0E2A	0xD74C      	BRA         L_move_ball22
L_move_ball23:
;pong.c,175 :: 		}
L_move_ball16:
;pong.c,176 :: 		}
L_end_move_ball:
0x0E2C	0x0012      	RETURN      0
; end of _move_ball
_move_player:
;pong.c,316 :: 		void move_player(unsigned short i, unsigned short direction){
;pong.c,317 :: 		if (turno_paleta == 10){
0x0E2E	0x0100      	MOVLB       0
0x0E30	0x5178      	MOVF        _turno_paleta, 0, 1
0x0E32	0x0A0A      	XORLW       10
0x0E34	0xA4D8      	BTFSS       STATUS, 2 
0x0E36	0xD0C1      	BRA         L_move_player99
;pong.c,318 :: 		if(direction == 0){                                                        //Hacia abajo
0x0E38	0x51DB      	MOVF        FARG_move_player_direction, 0, 1
0x0E3A	0x0A00      	XORLW       0
0x0E3C	0xE16D      	BNZ         L_move_player100
;pong.c,319 :: 		if(paddle[i].y >= 63 - paddle[i].h){        //No pasarse del limite de abajo
0x0E3E	0xF000C0DA  	MOVFF       FARG_move_player_i, R0
0x0E42	0x0E00      	MOVLW       0
0x0E44	0x6E01      	MOVWF       R1 
0x0E46	0x3600      	RLCF        R0, 1 
0x0E48	0x9000      	BCF         R0, 0 
0x0E4A	0x3601      	RLCF        R1, 1 
0x0E4C	0x3600      	RLCF        R0, 1 
0x0E4E	0x9000      	BCF         R0, 0 
0x0E50	0x3601      	RLCF        R1, 1 
0x0E52	0x0E99      	MOVLW       _paddle
0x0E54	0x2600      	ADDWF       R0, 1 
0x0E56	0x0E00      	MOVLW       hi_addr(_paddle)
0x0E58	0x2201      	ADDWFC      R1, 1 
0x0E5A	0x0E01      	MOVLW       1
0x0E5C	0x2400      	ADDWF       R0, 0 
0x0E5E	0x6EE9      	MOVWF       FSR0L 
0x0E60	0x0E00      	MOVLW       0
0x0E62	0x2001      	ADDWFC      R1, 0 
0x0E64	0x6EEA      	MOVWF       FSR0H 
0x0E66	0xF003CFEE  	MOVFF       POSTINC0, R3
0x0E6A	0x0E03      	MOVLW       3
0x0E6C	0x2400      	ADDWF       R0, 0 
0x0E6E	0x6ED9      	MOVWF       FSR2L 
0x0E70	0x0E00      	MOVLW       0
0x0E72	0x2001      	ADDWFC      R1, 0 
0x0E74	0x6EDA      	MOVWF       FSR2H 
0x0E76	0x50DE      	MOVF        POSTINC2, 0 
0x0E78	0x083F      	SUBLW       63
0x0E7A	0x6E01      	MOVWF       R1 
0x0E7C	0x6A02      	CLRF        R2 
0x0E7E	0x0E00      	MOVLW       0
0x0E80	0x5A02      	SUBWFB      R2, 1 
0x0E82	0x0E80      	MOVLW       128
0x0E84	0x6E00      	MOVWF       R0 
0x0E86	0x0E80      	MOVLW       128
0x0E88	0x1802      	XORWF       R2, 0 
0x0E8A	0x5C00      	SUBWF       R0, 0 
0x0E8C	0xE102      	BNZ         L__move_player246
0x0E8E	0x5001      	MOVF        R1, 0 
0x0E90	0x5C03      	SUBWF       R3, 0 
L__move_player246:
0x0E92	0xE320      	BNC         L_move_player101
;pong.c,320 :: 		paddle[i].y = (63 - paddle[i].h);
0x0E94	0xF000C0DA  	MOVFF       FARG_move_player_i, R0
0x0E98	0x0E00      	MOVLW       0
0x0E9A	0x6E01      	MOVWF       R1 
0x0E9C	0x3600      	RLCF        R0, 1 
0x0E9E	0x9000      	BCF         R0, 0 
0x0EA0	0x3601      	RLCF        R1, 1 
0x0EA2	0x3600      	RLCF        R0, 1 
0x0EA4	0x9000      	BCF         R0, 0 
0x0EA6	0x3601      	RLCF        R1, 1 
0x0EA8	0x0E99      	MOVLW       _paddle
0x0EAA	0x2600      	ADDWF       R0, 1 
0x0EAC	0x0E00      	MOVLW       hi_addr(_paddle)
0x0EAE	0x2201      	ADDWFC      R1, 1 
0x0EB0	0x0E01      	MOVLW       1
0x0EB2	0x2400      	ADDWF       R0, 0 
0x0EB4	0x6EE1      	MOVWF       FSR1L 
0x0EB6	0x0E00      	MOVLW       0
0x0EB8	0x2001      	ADDWFC      R1, 0 
0x0EBA	0x6EE2      	MOVWF       FSR1H 
0x0EBC	0x0E03      	MOVLW       3
0x0EBE	0x2400      	ADDWF       R0, 0 
0x0EC0	0x6ED9      	MOVWF       FSR2L 
0x0EC2	0x0E00      	MOVLW       0
0x0EC4	0x2001      	ADDWFC      R1, 0 
0x0EC6	0x6EDA      	MOVWF       FSR2H 
0x0EC8	0x50DE      	MOVF        POSTINC2, 0 
0x0ECA	0x083F      	SUBLW       63
0x0ECC	0x6E00      	MOVWF       R0 
0x0ECE	0xFFE6C000  	MOVFF       R0, POSTINC1
;pong.c,321 :: 		}
0x0ED2	0xD021      	BRA         L_move_player102
L_move_player101:
;pong.c,323 :: 		paddle[i].y +=2;
0x0ED4	0xF000C0DA  	MOVFF       FARG_move_player_i, R0
0x0ED8	0x0E00      	MOVLW       0
0x0EDA	0x6E01      	MOVWF       R1 
0x0EDC	0x3600      	RLCF        R0, 1 
0x0EDE	0x9000      	BCF         R0, 0 
0x0EE0	0x3601      	RLCF        R1, 1 
0x0EE2	0x3600      	RLCF        R0, 1 
0x0EE4	0x9000      	BCF         R0, 0 
0x0EE6	0x3601      	RLCF        R1, 1 
0x0EE8	0x0E99      	MOVLW       _paddle
0x0EEA	0x2600      	ADDWF       R0, 1 
0x0EEC	0x0E00      	MOVLW       hi_addr(_paddle)
0x0EEE	0x2201      	ADDWFC      R1, 1 
0x0EF0	0x0E01      	MOVLW       1
0x0EF2	0x2400      	ADDWF       R0, 0 
0x0EF4	0x6E02      	MOVWF       R2 
0x0EF6	0x0E00      	MOVLW       0
0x0EF8	0x2001      	ADDWFC      R1, 0 
0x0EFA	0x6E03      	MOVWF       R3 
0x0EFC	0xFFE9C002  	MOVFF       R2, FSR0L
0x0F00	0xFFEAC003  	MOVFF       R3, FSR0H
0x0F04	0x0E02      	MOVLW       2
0x0F06	0x24EE      	ADDWF       POSTINC0, 0 
0x0F08	0x6E00      	MOVWF       R0 
0x0F0A	0xFFE1C002  	MOVFF       R2, FSR1L
0x0F0E	0xFFE2C003  	MOVFF       R3, FSR1H
0x0F12	0xFFE6C000  	MOVFF       R0, POSTINC1
;pong.c,324 :: 		}
L_move_player102:
;pong.c,325 :: 		}
0x0F16	0xD051      	BRA         L_move_player103
L_move_player100:
;pong.c,326 :: 		else if(direction == 1){                                                        //Hacia arriba
0x0F18	0x51DB      	MOVF        FARG_move_player_direction, 0, 1
0x0F1A	0x0A01      	XORLW       1
0x0F1C	0xE14E      	BNZ         L_move_player104
;pong.c,327 :: 		if(paddle[i].y <= 0){                                        //No pasarse del limite de arriba
0x0F1E	0xF000C0DA  	MOVFF       FARG_move_player_i, R0
0x0F22	0x0E00      	MOVLW       0
0x0F24	0x6E01      	MOVWF       R1 
0x0F26	0x3600      	RLCF        R0, 1 
0x0F28	0x9000      	BCF         R0, 0 
0x0F2A	0x3601      	RLCF        R1, 1 
0x0F2C	0x3600      	RLCF        R0, 1 
0x0F2E	0x9000      	BCF         R0, 0 
0x0F30	0x3601      	RLCF        R1, 1 
0x0F32	0x0E99      	MOVLW       _paddle
0x0F34	0x2600      	ADDWF       R0, 1 
0x0F36	0x0E00      	MOVLW       hi_addr(_paddle)
0x0F38	0x2201      	ADDWFC      R1, 1 
0x0F3A	0x0E01      	MOVLW       1
0x0F3C	0x2400      	ADDWF       R0, 0 
0x0F3E	0x6EE9      	MOVWF       FSR0L 
0x0F40	0x0E00      	MOVLW       0
0x0F42	0x2001      	ADDWFC      R1, 0 
0x0F44	0x6EEA      	MOVWF       FSR0H 
0x0F46	0x50EE      	MOVF        POSTINC0, 0 
0x0F48	0x0800      	SUBLW       0
0x0F4A	0xE316      	BNC         L_move_player105
;pong.c,328 :: 		paddle[i].y = 0;
0x0F4C	0xF000C0DA  	MOVFF       FARG_move_player_i, R0
0x0F50	0x0E00      	MOVLW       0
0x0F52	0x6E01      	MOVWF       R1 
0x0F54	0x3600      	RLCF        R0, 1 
0x0F56	0x9000      	BCF         R0, 0 
0x0F58	0x3601      	RLCF        R1, 1 
0x0F5A	0x3600      	RLCF        R0, 1 
0x0F5C	0x9000      	BCF         R0, 0 
0x0F5E	0x3601      	RLCF        R1, 1 
0x0F60	0x0E99      	MOVLW       _paddle
0x0F62	0x2600      	ADDWF       R0, 1 
0x0F64	0x0E00      	MOVLW       hi_addr(_paddle)
0x0F66	0x2201      	ADDWFC      R1, 1 
0x0F68	0x0E01      	MOVLW       1
0x0F6A	0x2400      	ADDWF       R0, 0 
0x0F6C	0x6EE1      	MOVWF       FSR1L 
0x0F6E	0x0E00      	MOVLW       0
0x0F70	0x2001      	ADDWFC      R1, 0 
0x0F72	0x6EE2      	MOVWF       FSR1H 
0x0F74	0x6AE6      	CLRF        POSTINC1 
;pong.c,329 :: 		}
0x0F76	0xD021      	BRA         L_move_player106
L_move_player105:
;pong.c,331 :: 		paddle[i].y -= 2;
0x0F78	0xF000C0DA  	MOVFF       FARG_move_player_i, R0
0x0F7C	0x0E00      	MOVLW       0
0x0F7E	0x6E01      	MOVWF       R1 
0x0F80	0x3600      	RLCF        R0, 1 
0x0F82	0x9000      	BCF         R0, 0 
0x0F84	0x3601      	RLCF        R1, 1 
0x0F86	0x3600      	RLCF        R0, 1 
0x0F88	0x9000      	BCF         R0, 0 
0x0F8A	0x3601      	RLCF        R1, 1 
0x0F8C	0x0E99      	MOVLW       _paddle
0x0F8E	0x2600      	ADDWF       R0, 1 
0x0F90	0x0E00      	MOVLW       hi_addr(_paddle)
0x0F92	0x2201      	ADDWFC      R1, 1 
0x0F94	0x0E01      	MOVLW       1
0x0F96	0x2400      	ADDWF       R0, 0 
0x0F98	0x6E02      	MOVWF       R2 
0x0F9A	0x0E00      	MOVLW       0
0x0F9C	0x2001      	ADDWFC      R1, 0 
0x0F9E	0x6E03      	MOVWF       R3 
0x0FA0	0xFFE9C002  	MOVFF       R2, FSR0L
0x0FA4	0xFFEAC003  	MOVFF       R3, FSR0H
0x0FA8	0x0E02      	MOVLW       2
0x0FAA	0x5CEE      	SUBWF       POSTINC0, 0 
0x0FAC	0x6E00      	MOVWF       R0 
0x0FAE	0xFFE1C002  	MOVFF       R2, FSR1L
0x0FB2	0xFFE2C003  	MOVFF       R3, FSR1H
0x0FB6	0xFFE6C000  	MOVFF       R0, POSTINC1
;pong.c,332 :: 		}
L_move_player106:
;pong.c,333 :: 		}
L_move_player104:
L_move_player103:
;pong.c,334 :: 		}
L_move_player99:
;pong.c,335 :: 		}
L_end_move_player:
0x0FBA	0x0012      	RETURN      0
; end of _move_player
_desdata_pack:
;pong.c,357 :: 		void desdata_pack(){   // Funcion para extraer datos del paquete recibido por esclavo
;pong.c,358 :: 		ball.x = info[0] - '0';
0x0FBC	0x0E30      	MOVLW       48
0x0FBE	0x0100      	MOVLB       0
0x0FC0	0x5D8C      	SUBWF       _info, 0, 1
0x0FC2	0x6E00      	MOVWF       R0 
0x0FC4	0xF095C000  	MOVFF       R0, _ball
;pong.c,359 :: 		ball.y = info[1] - '0';
0x0FC8	0x0E30      	MOVLW       48
0x0FCA	0x5D8D      	SUBWF       _info+1, 0, 1
0x0FCC	0x6E00      	MOVWF       R0 
0x0FCE	0xF096C000  	MOVFF       R0, _ball+1
;pong.c,361 :: 		score[0] = info[2] - '0';
0x0FD2	0x0E30      	MOVLW       48
0x0FD4	0x5D8E      	SUBWF       _info+2, 0, 1
0x0FD6	0x6F73      	MOVWF       _score, 1
;pong.c,362 :: 		score[1] = info[3] - '0';
0x0FD8	0x0E30      	MOVLW       48
0x0FDA	0x5D8F      	SUBWF       _info+3, 0, 1
0x0FDC	0x6F74      	MOVWF       _score+1, 1
;pong.c,364 :: 		paddle[0].y = info[4] - '0';
0x0FDE	0x0E30      	MOVLW       48
0x0FE0	0x5D90      	SUBWF       _info+4, 0, 1
0x0FE2	0x6E00      	MOVWF       R0 
0x0FE4	0xF09AC000  	MOVFF       R0, _paddle+1
;pong.c,365 :: 		paddle[1].y = info[5] - '0';
0x0FE8	0x0E30      	MOVLW       48
0x0FEA	0x5D91      	SUBWF       _info+5, 0, 1
0x0FEC	0x6E00      	MOVWF       R0 
0x0FEE	0xF09EC000  	MOVFF       R0, _paddle+5
;pong.c,366 :: 		}
L_end_desdata_pack:
0x0FF2	0x0012      	RETURN      0
; end of _desdata_pack
_draw_score:
;pong.c,178 :: 		void draw_score(){
;pong.c,179 :: 		unsigned short posx = 0;
0x0FF4	0x0100      	MOVLB       0
0x0FF6	0x6BDA      	CLRF        draw_score_posx_L0, 1
0x0FF8	0x6BDB      	CLRF        draw_score_jugador_L0, 1
;pong.c,181 :: 		for(jugador = 0;  jugador < 2; jugador ++){
0x0FFA	0x6BDB      	CLRF        draw_score_jugador_L0, 1
L_draw_score44:
0x0FFC	0x0E02      	MOVLW       2
0x0FFE	0x5DDB      	SUBWF       draw_score_jugador_L0, 0, 1
0x1000	0xB0D8      	BTFSC       STATUS, 0 
0x1002	0xD089      	BRA         L_draw_score45
;pong.c,182 :: 		if(jugador == 0){
0x1004	0x51DB      	MOVF        draw_score_jugador_L0, 0, 1
0x1006	0x0A00      	XORLW       0
0x1008	0xE102      	BNZ         L_draw_score47
;pong.c,183 :: 		posx = 50;
0x100A	0x0E32      	MOVLW       50
0x100C	0x6FDA      	MOVWF       draw_score_posx_L0, 1
;pong.c,184 :: 		}
L_draw_score47:
;pong.c,185 :: 		if(jugador == 1){
0x100E	0x51DB      	MOVF        draw_score_jugador_L0, 0, 1
0x1010	0x0A01      	XORLW       1
0x1012	0xE102      	BNZ         L_draw_score48
;pong.c,186 :: 		posx = 74;
0x1014	0x0E4A      	MOVLW       74
0x1016	0x6FDA      	MOVWF       draw_score_posx_L0, 1
;pong.c,187 :: 		}
L_draw_score48:
;pong.c,188 :: 		if (score[jugador] == 0){
0x1018	0x0E73      	MOVLW       _score
0x101A	0x6EE9      	MOVWF       FSR0L 
0x101C	0x0E00      	MOVLW       hi_addr(_score)
0x101E	0x6EEA      	MOVWF       FSR0H 
0x1020	0x51DB      	MOVF        draw_score_jugador_L0, 0, 1
0x1022	0x26E9      	ADDWF       FSR0L, 1 
0x1024	0xB0D8      	BTFSC       STATUS, 0 
0x1026	0x2AEA      	INCF        FSR0H, 1 
0x1028	0x50EE      	MOVF        POSTINC0, 0 
0x102A	0x0A00      	XORLW       0
0x102C	0xE10A      	BNZ         L_draw_score49
;pong.c,189 :: 		Glcd_Write_Char('0',posx,0,1);
0x102E	0x0E30      	MOVLW       48
0x1030	0x6FE0      	MOVWF       FARG_Glcd_Write_Char_chr, 1
0x1032	0xF0E1C0DA  	MOVFF       draw_score_posx_L0, FARG_Glcd_Write_Char_x_pos
0x1036	0x6BE2      	CLRF        FARG_Glcd_Write_Char_page_num, 1
0x1038	0x0E01      	MOVLW       1
0x103A	0x6FE3      	MOVWF       FARG_Glcd_Write_Char_color, 1
0x103C	0xF003ECE0  	CALL        _Glcd_Write_Char, 0
;pong.c,190 :: 		}
0x1040	0xD068      	BRA         L_draw_score50
L_draw_score49:
;pong.c,191 :: 		else if(score[jugador] == 1){
0x1042	0x0E73      	MOVLW       _score
0x1044	0x6EE9      	MOVWF       FSR0L 
0x1046	0x0E00      	MOVLW       hi_addr(_score)
0x1048	0x6EEA      	MOVWF       FSR0H 
0x104A	0x51DB      	MOVF        draw_score_jugador_L0, 0, 1
0x104C	0x26E9      	ADDWF       FSR0L, 1 
0x104E	0xB0D8      	BTFSC       STATUS, 0 
0x1050	0x2AEA      	INCF        FSR0H, 1 
0x1052	0x50EE      	MOVF        POSTINC0, 0 
0x1054	0x0A01      	XORLW       1
0x1056	0xE10A      	BNZ         L_draw_score51
;pong.c,192 :: 		Glcd_Write_Char('1',posx,0,1);
0x1058	0x0E31      	MOVLW       49
0x105A	0x6FE0      	MOVWF       FARG_Glcd_Write_Char_chr, 1
0x105C	0xF0E1C0DA  	MOVFF       draw_score_posx_L0, FARG_Glcd_Write_Char_x_pos
0x1060	0x6BE2      	CLRF        FARG_Glcd_Write_Char_page_num, 1
0x1062	0x0E01      	MOVLW       1
0x1064	0x6FE3      	MOVWF       FARG_Glcd_Write_Char_color, 1
0x1066	0xF003ECE0  	CALL        _Glcd_Write_Char, 0
;pong.c,193 :: 		}
0x106A	0xD053      	BRA         L_draw_score52
L_draw_score51:
;pong.c,194 :: 		else if(score[jugador] == 2){
0x106C	0x0E73      	MOVLW       _score
0x106E	0x6EE9      	MOVWF       FSR0L 
0x1070	0x0E00      	MOVLW       hi_addr(_score)
0x1072	0x6EEA      	MOVWF       FSR0H 
0x1074	0x51DB      	MOVF        draw_score_jugador_L0, 0, 1
0x1076	0x26E9      	ADDWF       FSR0L, 1 
0x1078	0xB0D8      	BTFSC       STATUS, 0 
0x107A	0x2AEA      	INCF        FSR0H, 1 
0x107C	0x50EE      	MOVF        POSTINC0, 0 
0x107E	0x0A02      	XORLW       2
0x1080	0xE10A      	BNZ         L_draw_score53
;pong.c,195 :: 		Glcd_Write_Char('2',posx,0,1);
0x1082	0x0E32      	MOVLW       50
0x1084	0x6FE0      	MOVWF       FARG_Glcd_Write_Char_chr, 1
0x1086	0xF0E1C0DA  	MOVFF       draw_score_posx_L0, FARG_Glcd_Write_Char_x_pos
0x108A	0x6BE2      	CLRF        FARG_Glcd_Write_Char_page_num, 1
0x108C	0x0E01      	MOVLW       1
0x108E	0x6FE3      	MOVWF       FARG_Glcd_Write_Char_color, 1
0x1090	0xF003ECE0  	CALL        _Glcd_Write_Char, 0
;pong.c,196 :: 		}
0x1094	0xD03E      	BRA         L_draw_score54
L_draw_score53:
;pong.c,197 :: 		else if(score[jugador] == 3){
0x1096	0x0E73      	MOVLW       _score
0x1098	0x6EE9      	MOVWF       FSR0L 
0x109A	0x0E00      	MOVLW       hi_addr(_score)
0x109C	0x6EEA      	MOVWF       FSR0H 
0x109E	0x51DB      	MOVF        draw_score_jugador_L0, 0, 1
0x10A0	0x26E9      	ADDWF       FSR0L, 1 
0x10A2	0xB0D8      	BTFSC       STATUS, 0 
0x10A4	0x2AEA      	INCF        FSR0H, 1 
0x10A6	0x50EE      	MOVF        POSTINC0, 0 
0x10A8	0x0A03      	XORLW       3
0x10AA	0xE10A      	BNZ         L_draw_score55
;pong.c,198 :: 		Glcd_Write_Char('3',posx,0,1);
0x10AC	0x0E33      	MOVLW       51
0x10AE	0x6FE0      	MOVWF       FARG_Glcd_Write_Char_chr, 1
0x10B0	0xF0E1C0DA  	MOVFF       draw_score_posx_L0, FARG_Glcd_Write_Char_x_pos
0x10B4	0x6BE2      	CLRF        FARG_Glcd_Write_Char_page_num, 1
0x10B6	0x0E01      	MOVLW       1
0x10B8	0x6FE3      	MOVWF       FARG_Glcd_Write_Char_color, 1
0x10BA	0xF003ECE0  	CALL        _Glcd_Write_Char, 0
;pong.c,199 :: 		}
0x10BE	0xD029      	BRA         L_draw_score56
L_draw_score55:
;pong.c,200 :: 		else if(score[jugador] == 4){
0x10C0	0x0E73      	MOVLW       _score
0x10C2	0x6EE9      	MOVWF       FSR0L 
0x10C4	0x0E00      	MOVLW       hi_addr(_score)
0x10C6	0x6EEA      	MOVWF       FSR0H 
0x10C8	0x51DB      	MOVF        draw_score_jugador_L0, 0, 1
0x10CA	0x26E9      	ADDWF       FSR0L, 1 
0x10CC	0xB0D8      	BTFSC       STATUS, 0 
0x10CE	0x2AEA      	INCF        FSR0H, 1 
0x10D0	0x50EE      	MOVF        POSTINC0, 0 
0x10D2	0x0A04      	XORLW       4
0x10D4	0xE10A      	BNZ         L_draw_score57
;pong.c,201 :: 		Glcd_Write_Char('4',posx,0,1);
0x10D6	0x0E34      	MOVLW       52
0x10D8	0x6FE0      	MOVWF       FARG_Glcd_Write_Char_chr, 1
0x10DA	0xF0E1C0DA  	MOVFF       draw_score_posx_L0, FARG_Glcd_Write_Char_x_pos
0x10DE	0x6BE2      	CLRF        FARG_Glcd_Write_Char_page_num, 1
0x10E0	0x0E01      	MOVLW       1
0x10E2	0x6FE3      	MOVWF       FARG_Glcd_Write_Char_color, 1
0x10E4	0xF003ECE0  	CALL        _Glcd_Write_Char, 0
;pong.c,202 :: 		}
0x10E8	0xD014      	BRA         L_draw_score58
L_draw_score57:
;pong.c,203 :: 		else if(score[jugador] == 5){
0x10EA	0x0E73      	MOVLW       _score
0x10EC	0x6EE9      	MOVWF       FSR0L 
0x10EE	0x0E00      	MOVLW       hi_addr(_score)
0x10F0	0x6EEA      	MOVWF       FSR0H 
0x10F2	0x51DB      	MOVF        draw_score_jugador_L0, 0, 1
0x10F4	0x26E9      	ADDWF       FSR0L, 1 
0x10F6	0xB0D8      	BTFSC       STATUS, 0 
0x10F8	0x2AEA      	INCF        FSR0H, 1 
0x10FA	0x50EE      	MOVF        POSTINC0, 0 
0x10FC	0x0A05      	XORLW       5
0x10FE	0xE109      	BNZ         L_draw_score59
;pong.c,204 :: 		Glcd_Write_Char('5',posx,0,1);
0x1100	0x0E35      	MOVLW       53
0x1102	0x6FE0      	MOVWF       FARG_Glcd_Write_Char_chr, 1
0x1104	0xF0E1C0DA  	MOVFF       draw_score_posx_L0, FARG_Glcd_Write_Char_x_pos
0x1108	0x6BE2      	CLRF        FARG_Glcd_Write_Char_page_num, 1
0x110A	0x0E01      	MOVLW       1
0x110C	0x6FE3      	MOVWF       FARG_Glcd_Write_Char_color, 1
0x110E	0xF003ECE0  	CALL        _Glcd_Write_Char, 0
;pong.c,205 :: 		}
L_draw_score59:
L_draw_score58:
L_draw_score56:
L_draw_score54:
L_draw_score52:
L_draw_score50:
;pong.c,181 :: 		for(jugador = 0;  jugador < 2; jugador ++){
0x1112	0x2BDB      	INCF        draw_score_jugador_L0, 1, 1
;pong.c,206 :: 		}
0x1114	0xD773      	BRA         L_draw_score44
L_draw_score45:
;pong.c,207 :: 		}
L_end_draw_score:
0x1116	0x0012      	RETURN      0
; end of _draw_score
_move_ia:
;pong.c,243 :: 		void move_ia(){
;pong.c,244 :: 		unsigned short centro_ia = paddle[0].y + 4;
0x1118	0x0E04      	MOVLW       4
0x111A	0x0100      	MOVLB       0
0x111C	0x259A      	ADDWF       _paddle+1, 0, 1
0x111E	0x6E00      	MOVWF       R0 
0x1120	0x6A01      	CLRF        R1 
0x1122	0x0E00      	MOVLW       0
0x1124	0x2201      	ADDWFC      R1, 1 
0x1126	0xF0DAC000  	MOVFF       R0, move_ia_centro_ia_L0
;pong.c,245 :: 		short ball_speed = ball.dy;
0x112A	0xF0DBC098  	MOVFF       _ball+3, move_ia_ball_speed_L0
;pong.c,246 :: 		int contador = rand() % 3;
0x112E	0xF002EC53  	CALL        _rand, 0
0x1132	0x0E03      	MOVLW       3
0x1134	0x6E04      	MOVWF       R4 
0x1136	0x0E00      	MOVLW       0
0x1138	0x6E05      	MOVWF       R5 
0x113A	0xF002EC91  	CALL        _Div_16x16_S, 0
0x113E	0xF000C008  	MOVFF       R8, R0
0x1142	0xF001C009  	MOVFF       R9, R1
0x1146	0xF0DCC000  	MOVFF       R0, move_ia_contador_L0
0x114A	0xF0DDC001  	MOVFF       R1, move_ia_contador_L0+1
;pong.c,247 :: 		if(turno == 10){
0x114E	0x0100      	MOVLB       0
0x1150	0x5175      	MOVF        _turno, 0, 1
0x1152	0x0A0A      	XORLW       10
0x1154	0xA4D8      	BTFSS       STATUS, 2 
0x1156	0xD0DA      	BRA         L_move_ia72
;pong.c,248 :: 		erase_player(paddle[0].x, paddle[0].y, paddle[0].w, paddle[0].h);
0x1158	0xF0E0C099  	MOVFF       _paddle, FARG_erase_player_x
0x115C	0xF0E1C09A  	MOVFF       _paddle+1, FARG_erase_player_y
0x1160	0xF0E2C09B  	MOVFF       _paddle+2, FARG_erase_player_w
0x1164	0xF0E3C09C  	MOVFF       _paddle+3, FARG_erase_player_h
0x1168	0xF003EC8A  	CALL        _erase_player, 0
;pong.c,249 :: 		if(ball_speed < 0){
0x116C	0x0E80      	MOVLW       128
0x116E	0x19DB      	XORWF       move_ia_ball_speed_L0, 0, 1
0x1170	0x6E00      	MOVWF       R0 
0x1172	0x0E80      	MOVLW       128
0x1174	0x0A00      	XORLW       0
0x1176	0x5C00      	SUBWF       R0, 0 
0x1178	0xE203      	BC          L_move_ia73
;pong.c,250 :: 		ball_speed = -ball_speed;
0x117A	0x51DB      	MOVF        move_ia_ball_speed_L0, 0, 1
0x117C	0x0800      	SUBLW       0
0x117E	0x6FDB      	MOVWF       move_ia_ball_speed_L0, 1
;pong.c,251 :: 		}
L_move_ia73:
;pong.c,252 :: 		if(ball.dx > 0){    // Si la bola se mueve a la derecha la paleta ia se mueve aleatoriamente
0x1180	0x0E80      	MOVLW       128
0x1182	0x0A00      	XORLW       0
0x1184	0x6E00      	MOVWF       R0 
0x1186	0x0E80      	MOVLW       128
0x1188	0x1997      	XORWF       _ball+2, 0, 1
0x118A	0x5C00      	SUBWF       R0, 0 
0x118C	0xE221      	BC          L_move_ia74
;pong.c,253 :: 		switch(contador){
0x118E	0xD00D      	BRA         L_move_ia75
;pong.c,254 :: 		case 0:
L_move_ia77:
;pong.c,255 :: 		paddle[0].y = paddle[0].y;
;pong.c,256 :: 		break;
0x1190	0xD01E      	BRA         L_move_ia76
;pong.c,257 :: 		case 1:
L_move_ia78:
;pong.c,258 :: 		paddle[0].y = paddle[0].y+2;
0x1192	0x0E02      	MOVLW       2
0x1194	0x259A      	ADDWF       _paddle+1, 0, 1
0x1196	0x6E00      	MOVWF       R0 
0x1198	0xF09AC000  	MOVFF       R0, _paddle+1
;pong.c,259 :: 		break;
0x119C	0xD018      	BRA         L_move_ia76
;pong.c,260 :: 		case 2:
L_move_ia79:
;pong.c,261 :: 		paddle[0].y = paddle[0].y-2;
0x119E	0x0E02      	MOVLW       2
0x11A0	0x5D9A      	SUBWF       _paddle+1, 0, 1
0x11A2	0x6E00      	MOVWF       R0 
0x11A4	0xF09AC000  	MOVFF       R0, _paddle+1
;pong.c,262 :: 		break;
0x11A8	0xD012      	BRA         L_move_ia76
;pong.c,263 :: 		}
L_move_ia75:
0x11AA	0x0E00      	MOVLW       0
0x11AC	0x19DD      	XORWF       move_ia_contador_L0+1, 0, 1
0x11AE	0xE102      	BNZ         L__move_ia236
0x11B0	0x0E00      	MOVLW       0
0x11B2	0x19DC      	XORWF       move_ia_contador_L0, 0, 1
L__move_ia236:
0x11B4	0xE0ED      	BZ          L_move_ia77
0x11B6	0x0E00      	MOVLW       0
0x11B8	0x19DD      	XORWF       move_ia_contador_L0+1, 0, 1
0x11BA	0xE102      	BNZ         L__move_ia237
0x11BC	0x0E01      	MOVLW       1
0x11BE	0x19DC      	XORWF       move_ia_contador_L0, 0, 1
L__move_ia237:
0x11C0	0xE0E8      	BZ          L_move_ia78
0x11C2	0x0E00      	MOVLW       0
0x11C4	0x19DD      	XORWF       move_ia_contador_L0+1, 0, 1
0x11C6	0xE102      	BNZ         L__move_ia238
0x11C8	0x0E02      	MOVLW       2
0x11CA	0x19DC      	XORWF       move_ia_contador_L0, 0, 1
L__move_ia238:
0x11CC	0xE0E8      	BZ          L_move_ia79
L_move_ia76:
;pong.c,264 :: 		}
0x11CE	0xD09E      	BRA         L_move_ia80
L_move_ia74:
;pong.c,266 :: 		if(ball.x < 64){
0x11D0	0x0E80      	MOVLW       128
0x11D2	0x1995      	XORWF       _ball, 0, 1
0x11D4	0x6E00      	MOVWF       R0 
0x11D6	0x0E80      	MOVLW       128
0x11D8	0x0A40      	XORLW       64
0x11DA	0x5C00      	SUBWF       R0, 0 
0x11DC	0xB0D8      	BTFSC       STATUS, 0 
0x11DE	0xD096      	BRA         L_move_ia81
;pong.c,267 :: 		if(ball.dy > 0){
0x11E0	0x0E80      	MOVLW       128
0x11E2	0x0A00      	XORLW       0
0x11E4	0x6E00      	MOVWF       R0 
0x11E6	0x0E80      	MOVLW       128
0x11E8	0x1998      	XORWF       _ball+3, 0, 1
0x11EA	0x5C00      	SUBWF       R0, 0 
0x11EC	0xE23F      	BC          L_move_ia82
;pong.c,268 :: 		if(ball.y > centro_ia){
0x11EE	0x0E80      	MOVLW       128
0x11F0	0x6E00      	MOVWF       R0 
0x11F2	0x0E80      	MOVLW       128
0x11F4	0xBF96      	BTFSC       _ball+1, 7, 1
0x11F6	0x0E7F      	MOVLW       127
0x11F8	0x5C00      	SUBWF       R0, 0 
0x11FA	0xE102      	BNZ         L__move_ia239
0x11FC	0x5196      	MOVF        _ball+1, 0, 1
0x11FE	0x5DDA      	SUBWF       move_ia_centro_ia_L0, 0, 1
L__move_ia239:
0x1200	0xE21D      	BC          L_move_ia83
;pong.c,269 :: 		if(paddle[0].y + ball_speed < 64){
0x1202	0x51DB      	MOVF        move_ia_ball_speed_L0, 0, 1
0x1204	0x259A      	ADDWF       _paddle+1, 0, 1
0x1206	0x6E01      	MOVWF       R1 
0x1208	0x6A02      	CLRF        R2 
0x120A	0x0E00      	MOVLW       0
0x120C	0xBFDB      	BTFSC       move_ia_ball_speed_L0, 7, 1
0x120E	0x0EFF      	MOVLW       255
0x1210	0x2202      	ADDWFC      R2, 1 
0x1212	0x0E80      	MOVLW       128
0x1214	0x1802      	XORWF       R2, 0 
0x1216	0x6E00      	MOVWF       R0 
0x1218	0x0E80      	MOVLW       128
0x121A	0x5C00      	SUBWF       R0, 0 
0x121C	0xE102      	BNZ         L__move_ia240
0x121E	0x0E40      	MOVLW       64
0x1220	0x5C01      	SUBWF       R1, 0 
L__move_ia240:
0x1222	0xE206      	BC          L_move_ia84
;pong.c,270 :: 		paddle[0].y += (ball_speed);
0x1224	0x51DB      	MOVF        move_ia_ball_speed_L0, 0, 1
0x1226	0x259A      	ADDWF       _paddle+1, 0, 1
0x1228	0x6E00      	MOVWF       R0 
0x122A	0xF09AC000  	MOVFF       R0, _paddle+1
;pong.c,271 :: 		}
0x122E	0xD005      	BRA         L_move_ia85
L_move_ia84:
;pong.c,273 :: 		paddle[0].y = 63 - paddle[0].h;
0x1230	0x519C      	MOVF        _paddle+3, 0, 1
0x1232	0x083F      	SUBLW       63
0x1234	0x6E00      	MOVWF       R0 
0x1236	0xF09AC000  	MOVFF       R0, _paddle+1
;pong.c,274 :: 		}
L_move_ia85:
;pong.c,275 :: 		}
0x123A	0xD018      	BRA         L_move_ia86
L_move_ia83:
;pong.c,277 :: 		if(paddle[0].y - ball_speed > 0){
0x123C	0x51DB      	MOVF        move_ia_ball_speed_L0, 0, 1
0x123E	0x5D9A      	SUBWF       _paddle+1, 0, 1
0x1240	0x6E01      	MOVWF       R1 
0x1242	0x6A02      	CLRF        R2 
0x1244	0x0E00      	MOVLW       0
0x1246	0xBFDB      	BTFSC       move_ia_ball_speed_L0, 7, 1
0x1248	0x0EFF      	MOVLW       255
0x124A	0x5A02      	SUBWFB      R2, 1 
0x124C	0x0E80      	MOVLW       128
0x124E	0x6E00      	MOVWF       R0 
0x1250	0x0E80      	MOVLW       128
0x1252	0x1802      	XORWF       R2, 0 
0x1254	0x5C00      	SUBWF       R0, 0 
0x1256	0xE102      	BNZ         L__move_ia241
0x1258	0x5001      	MOVF        R1, 0 
0x125A	0x0800      	SUBLW       0
L__move_ia241:
0x125C	0xE206      	BC          L_move_ia87
;pong.c,278 :: 		paddle[0].y -= (ball_speed);
0x125E	0x51DB      	MOVF        move_ia_ball_speed_L0, 0, 1
0x1260	0x5D9A      	SUBWF       _paddle+1, 0, 1
0x1262	0x6E00      	MOVWF       R0 
0x1264	0xF09AC000  	MOVFF       R0, _paddle+1
;pong.c,279 :: 		}
0x1268	0xD001      	BRA         L_move_ia88
L_move_ia87:
;pong.c,281 :: 		paddle[0].y = 0;
0x126A	0x6B9A      	CLRF        _paddle+1, 1
;pong.c,282 :: 		}
L_move_ia88:
;pong.c,283 :: 		}
L_move_ia86:
;pong.c,284 :: 		}
L_move_ia82:
;pong.c,285 :: 		if(ball.dy < 0){
0x126C	0x0E80      	MOVLW       128
0x126E	0x1998      	XORWF       _ball+3, 0, 1
0x1270	0x6E00      	MOVWF       R0 
0x1272	0x0E80      	MOVLW       128
0x1274	0x0A00      	XORLW       0
0x1276	0x5C00      	SUBWF       R0, 0 
0x1278	0xE231      	BC          L_move_ia89
;pong.c,286 :: 		if(ball.y < centro_ia){
0x127A	0x0E80      	MOVLW       128
0x127C	0xBF96      	BTFSC       _ball+1, 7, 1
0x127E	0x0E7F      	MOVLW       127
0x1280	0x6E00      	MOVWF       R0 
0x1282	0x0E80      	MOVLW       128
0x1284	0x5C00      	SUBWF       R0, 0 
0x1286	0xE102      	BNZ         L__move_ia242
0x1288	0x51DA      	MOVF        move_ia_centro_ia_L0, 0, 1
0x128A	0x5D96      	SUBWF       _ball+1, 0, 1
L__move_ia242:
0x128C	0xE219      	BC          L_move_ia90
;pong.c,287 :: 		if(paddle[0].y - ball_speed > 0){
0x128E	0x51DB      	MOVF        move_ia_ball_speed_L0, 0, 1
0x1290	0x5D9A      	SUBWF       _paddle+1, 0, 1
0x1292	0x6E01      	MOVWF       R1 
0x1294	0x6A02      	CLRF        R2 
0x1296	0x0E00      	MOVLW       0
0x1298	0xBFDB      	BTFSC       move_ia_ball_speed_L0, 7, 1
0x129A	0x0EFF      	MOVLW       255
0x129C	0x5A02      	SUBWFB      R2, 1 
0x129E	0x0E80      	MOVLW       128
0x12A0	0x6E00      	MOVWF       R0 
0x12A2	0x0E80      	MOVLW       128
0x12A4	0x1802      	XORWF       R2, 0 
0x12A6	0x5C00      	SUBWF       R0, 0 
0x12A8	0xE102      	BNZ         L__move_ia243
0x12AA	0x5001      	MOVF        R1, 0 
0x12AC	0x0800      	SUBLW       0
L__move_ia243:
0x12AE	0xE206      	BC          L_move_ia91
;pong.c,288 :: 		paddle[0].y -= (ball_speed);
0x12B0	0x51DB      	MOVF        move_ia_ball_speed_L0, 0, 1
0x12B2	0x5D9A      	SUBWF       _paddle+1, 0, 1
0x12B4	0x6E00      	MOVWF       R0 
0x12B6	0xF09AC000  	MOVFF       R0, _paddle+1
;pong.c,289 :: 		}
0x12BA	0xD001      	BRA         L_move_ia92
L_move_ia91:
;pong.c,291 :: 		paddle[0].y = 0;
0x12BC	0x6B9A      	CLRF        _paddle+1, 1
;pong.c,292 :: 		}
L_move_ia92:
;pong.c,293 :: 		}
0x12BE	0xD00E      	BRA         L_move_ia93
L_move_ia90:
;pong.c,295 :: 		if(paddle[0].y < 64){
0x12C0	0x0E40      	MOVLW       64
0x12C2	0x5D9A      	SUBWF       _paddle+1, 0, 1
0x12C4	0xE206      	BC          L_move_ia94
;pong.c,296 :: 		paddle[0].y += (ball_speed);
0x12C6	0x51DB      	MOVF        move_ia_ball_speed_L0, 0, 1
0x12C8	0x259A      	ADDWF       _paddle+1, 0, 1
0x12CA	0x6E00      	MOVWF       R0 
0x12CC	0xF09AC000  	MOVFF       R0, _paddle+1
;pong.c,297 :: 		}
0x12D0	0xD005      	BRA         L_move_ia95
L_move_ia94:
;pong.c,299 :: 		paddle[0].y = 63 - paddle[0].h;
0x12D2	0x519C      	MOVF        _paddle+3, 0, 1
0x12D4	0x083F      	SUBLW       63
0x12D6	0x6E00      	MOVWF       R0 
0x12D8	0xF09AC000  	MOVFF       R0, _paddle+1
;pong.c,300 :: 		}
L_move_ia95:
;pong.c,301 :: 		}
L_move_ia93:
;pong.c,302 :: 		}
L_move_ia89:
;pong.c,303 :: 		if(ball.dy == 0){
0x12DC	0x5198      	MOVF        _ball+3, 0, 1
0x12DE	0x0A00      	XORLW       0
0x12E0	0xE115      	BNZ         L_move_ia96
;pong.c,304 :: 		if(ball.y < centro_ia){
0x12E2	0x0E80      	MOVLW       128
0x12E4	0xBF96      	BTFSC       _ball+1, 7, 1
0x12E6	0x0E7F      	MOVLW       127
0x12E8	0x6E00      	MOVWF       R0 
0x12EA	0x0E80      	MOVLW       128
0x12EC	0x5C00      	SUBWF       R0, 0 
0x12EE	0xE102      	BNZ         L__move_ia244
0x12F0	0x51DA      	MOVF        move_ia_centro_ia_L0, 0, 1
0x12F2	0x5D96      	SUBWF       _ball+1, 0, 1
L__move_ia244:
0x12F4	0xE206      	BC          L_move_ia97
;pong.c,305 :: 		paddle[0].y -= 3;
0x12F6	0x0E03      	MOVLW       3
0x12F8	0x5D9A      	SUBWF       _paddle+1, 0, 1
0x12FA	0x6E00      	MOVWF       R0 
0x12FC	0xF09AC000  	MOVFF       R0, _paddle+1
;pong.c,306 :: 		}
0x1300	0xD005      	BRA         L_move_ia98
L_move_ia97:
;pong.c,308 :: 		paddle[0].y += 3;
0x1302	0x0E03      	MOVLW       3
0x1304	0x259A      	ADDWF       _paddle+1, 0, 1
0x1306	0x6E00      	MOVWF       R0 
0x1308	0xF09AC000  	MOVFF       R0, _paddle+1
;pong.c,309 :: 		}
L_move_ia98:
;pong.c,310 :: 		}
L_move_ia96:
;pong.c,311 :: 		}
L_move_ia81:
;pong.c,312 :: 		}
L_move_ia80:
;pong.c,313 :: 		}
L_move_ia72:
;pong.c,314 :: 		}
L_end_move_ia:
0x130C	0x0012      	RETURN      0
; end of _move_ia
_main:
0x130E	0xF010EC68  	CALL        8400, 0
;pong.c,399 :: 		void main(){
;pong.c,401 :: 		unsigned short Master = 0;
0x1312	0x0100      	MOVLB       0
0x1314	0x6BD7      	CLRF        main_Master_L0, 1
0x1316	0x0E30      	MOVLW       48
0x1318	0x6FD8      	MOVWF       main_Master_slave_L0, 1
0x131A	0x6BD9      	CLRF        main_move_other_L0, 1
;pong.c,408 :: 		PORTC = 0;              //Establecemos las entradas en 0 para evitar conflictos
0x131C	0x6A82      	CLRF        PORTC 
;pong.c,409 :: 		TRISC.F0 = 1;   //Entrada para el eje y
0x131E	0x8094      	BSF         TRISC, 0 
;pong.c,410 :: 		TRISC.F1 = 1;        // Entrada para el boton del joystick
0x1320	0x8294      	BSF         TRISC, 1 
;pong.c,413 :: 		Glcd_Init();
0x1322	0xF004EC9D  	CALL        _Glcd_Init, 0
;pong.c,414 :: 		Glcd_Fill(0x00);
0x1326	0x6BE0      	CLRF        FARG_Glcd_Fill_pattern, 1
0x1328	0xF003EC60  	CALL        _Glcd_Fill, 0
;pong.c,416 :: 		UART1_Init(9600);
0x132C	0x86B8      	BSF         BAUDCON, 3, 0
0x132E	0x6AB0      	CLRF        SPBRGH 
0x1330	0x0ECF      	MOVLW       207
0x1332	0x6EAF      	MOVWF       SPBRG 
0x1334	0x84AC      	BSF         TXSTA, 2, 0
0x1336	0xF005EC1F  	CALL        _UART1_Init, 0
;pong.c,417 :: 		Delay_ms(200);
0x133A	0x0E03      	MOVLW       3
0x133C	0x6E0B      	MOVWF       R11, 0
0x133E	0x0E08      	MOVLW       8
0x1340	0x6E0C      	MOVWF       R12, 0
0x1342	0x0E77      	MOVLW       119
0x1344	0x6E0D      	MOVWF       R13, 0
L_main115:
0x1346	0x2E0D      	DECFSZ      R13, 1, 0
0x1348	0xD7FE      	BRA         L_main115
0x134A	0x2E0C      	DECFSZ      R12, 1, 0
0x134C	0xD7FC      	BRA         L_main115
0x134E	0x2E0B      	DECFSZ      R11, 1, 0
0x1350	0xD7FA      	BRA         L_main115
;pong.c,419 :: 		ADC_Init();
0x1352	0xF005EC0C  	CALL        _ADC_Init, 0
;pong.c,421 :: 		cover();                //Imprimimos la portada hasta que se presiona
0x1356	0xF004ECF3  	CALL        _cover, 0
;pong.c,422 :: 		delay_ms(1000);
0x135A	0x0E0B      	MOVLW       11
0x135C	0x6E0B      	MOVWF       R11, 0
0x135E	0x0E26      	MOVLW       38
0x1360	0x6E0C      	MOVWF       R12, 0
0x1362	0x0E5D      	MOVLW       93
0x1364	0x6E0D      	MOVWF       R13, 0
L_main116:
0x1366	0x2E0D      	DECFSZ      R13, 1, 0
0x1368	0xD7FE      	BRA         L_main116
0x136A	0x2E0C      	DECFSZ      R12, 1, 0
0x136C	0xD7FC      	BRA         L_main116
0x136E	0x2E0B      	DECFSZ      R11, 1, 0
0x1370	0xD7FA      	BRA         L_main116
0x1372	0x0000      	NOP
0x1374	0x0000      	NOP
;pong.c,424 :: 		while(1){
L_main117:
;pong.c,425 :: 		switch(flag){
0x1376	0xD371      	BRA         L_main119
;pong.c,426 :: 		case 0:                        //Menu de inicio
L_main121:
;pong.c,427 :: 		while(1){
L_main122:
0x1378	0x0100      	MOVLB       0
;pong.c,428 :: 		y = ADC_Read(0);
0x137A	0x6BDA      	CLRF        FARG_ADC_Read_channel, 1
0x137C	0xF004ECD3  	CALL        _ADC_Read, 0
0x1380	0xF077C000  	MOVFF       R0, _y
;pong.c,429 :: 		if(y <= 20){
0x1384	0x5000      	MOVF        R0, 0 
0x1386	0x0814      	SUBLW       20
0x1388	0xE337      	BNC         L_main124
;pong.c,430 :: 		Glcd_Write_Text("one player",15,0,1);
0x138A	0x0E25      	MOVLW       ?lstr2_pong
0x138C	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x138E	0x0E00      	MOVLW       hi_addr(?lstr2_pong)
0x1390	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x1392	0x0E0F      	MOVLW       15
0x1394	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x1396	0x6BDD      	CLRF        FARG_Glcd_Write_Text_page_num, 1
0x1398	0x0E01      	MOVLW       1
0x139A	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x139C	0xF005EC4B  	CALL        _Glcd_Write_Text, 0
;pong.c,431 :: 		delay_ms(1000);
0x13A0	0x0E0B      	MOVLW       11
0x13A2	0x6E0B      	MOVWF       R11, 0
0x13A4	0x0E26      	MOVLW       38
0x13A6	0x6E0C      	MOVWF       R12, 0
0x13A8	0x0E5D      	MOVLW       93
0x13AA	0x6E0D      	MOVWF       R13, 0
L_main125:
0x13AC	0x2E0D      	DECFSZ      R13, 1, 0
0x13AE	0xD7FE      	BRA         L_main125
0x13B0	0x2E0C      	DECFSZ      R12, 1, 0
0x13B2	0xD7FC      	BRA         L_main125
0x13B4	0x2E0B      	DECFSZ      R11, 1, 0
0x13B6	0xD7FA      	BRA         L_main125
0x13B8	0x0000      	NOP
0x13BA	0x0000      	NOP
;pong.c,432 :: 		while(1){
L_main126:
;pong.c,433 :: 		y = ADC_Read(0);
0x13BC	0x6BDA      	CLRF        FARG_ADC_Read_channel, 1
0x13BE	0xF004ECD3  	CALL        _ADC_Read, 0
0x13C2	0xF077C000  	MOVFF       R0, _y
;pong.c,435 :: 		if(Button(&PORTC,1,1,0)){
0x13C6	0x0E82      	MOVLW       PORTC
0x13C8	0x6FE0      	MOVWF       FARG_Button_port, 1
0x13CA	0x0E0F      	MOVLW       hi_addr(PORTC)
0x13CC	0x6FE1      	MOVWF       FARG_Button_port+1, 1
0x13CE	0x0E01      	MOVLW       1
0x13D0	0x6FE2      	MOVWF       FARG_Button_pin, 1
0x13D2	0x0E01      	MOVLW       1
0x13D4	0x6FE3      	MOVWF       FARG_Button_time_ms, 1
0x13D6	0x6BE4      	CLRF        FARG_Button_active_state, 1
0x13D8	0xF002EC1B  	CALL        _Button, 0
0x13DC	0x5200      	MOVF        R0, 1 
0x13DE	0xE003      	BZ          L_main128
;pong.c,436 :: 		flag = 1;
0x13E0	0x0E01      	MOVLW       1
0x13E2	0x6F76      	MOVWF       _flag, 1
;pong.c,437 :: 		break;
0x13E4	0xD005      	BRA         L_main127
;pong.c,438 :: 		}
L_main128:
;pong.c,439 :: 		else if(y >= 200){
0x13E6	0x0EC8      	MOVLW       200
0x13E8	0x5D77      	SUBWF       _y, 0, 1
0x13EA	0xE301      	BNC         L_main130
;pong.c,440 :: 		break;
0x13EC	0xD001      	BRA         L_main127
;pong.c,441 :: 		}
L_main130:
;pong.c,442 :: 		}Glcd_Fill(0x00);
0x13EE	0xD7E6      	BRA         L_main126
L_main127:
0x13F0	0x6BE0      	CLRF        FARG_Glcd_Fill_pattern, 1
0x13F2	0xF003EC60  	CALL        _Glcd_Fill, 0
;pong.c,444 :: 		}
0x13F6	0xD048      	BRA         L_main131
L_main124:
;pong.c,445 :: 		else if(y >= 200){
0x13F8	0x0EC8      	MOVLW       200
0x13FA	0x5D77      	SUBWF       _y, 0, 1
0x13FC	0xE33D      	BNC         L_main132
;pong.c,446 :: 		Glcd_Write_Text("multiplayer",15,0,1);
0x13FE	0x0E30      	MOVLW       ?lstr3_pong
0x1400	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x1402	0x0E00      	MOVLW       hi_addr(?lstr3_pong)
0x1404	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x1406	0x0E0F      	MOVLW       15
0x1408	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x140A	0x6BDD      	CLRF        FARG_Glcd_Write_Text_page_num, 1
0x140C	0x0E01      	MOVLW       1
0x140E	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x1410	0xF005EC4B  	CALL        _Glcd_Write_Text, 0
;pong.c,447 :: 		delay_ms(1000);
0x1414	0x0E0B      	MOVLW       11
0x1416	0x6E0B      	MOVWF       R11, 0
0x1418	0x0E26      	MOVLW       38
0x141A	0x6E0C      	MOVWF       R12, 0
0x141C	0x0E5D      	MOVLW       93
0x141E	0x6E0D      	MOVWF       R13, 0
L_main133:
0x1420	0x2E0D      	DECFSZ      R13, 1, 0
0x1422	0xD7FE      	BRA         L_main133
0x1424	0x2E0C      	DECFSZ      R12, 1, 0
0x1426	0xD7FC      	BRA         L_main133
0x1428	0x2E0B      	DECFSZ      R11, 1, 0
0x142A	0xD7FA      	BRA         L_main133
0x142C	0x0000      	NOP
0x142E	0x0000      	NOP
;pong.c,449 :: 		while(1){
L_main134:
;pong.c,450 :: 		y = ADC_Read(0);
0x1430	0x6BDA      	CLRF        FARG_ADC_Read_channel, 1
0x1432	0xF004ECD3  	CALL        _ADC_Read, 0
0x1436	0xF077C000  	MOVFF       R0, _y
;pong.c,451 :: 		if(Button(&PORTC,1,1,0)){
0x143A	0x0E82      	MOVLW       PORTC
0x143C	0x6FE0      	MOVWF       FARG_Button_port, 1
0x143E	0x0E0F      	MOVLW       hi_addr(PORTC)
0x1440	0x6FE1      	MOVWF       FARG_Button_port+1, 1
0x1442	0x0E01      	MOVLW       1
0x1444	0x6FE2      	MOVWF       FARG_Button_pin, 1
0x1446	0x0E01      	MOVLW       1
0x1448	0x6FE3      	MOVWF       FARG_Button_time_ms, 1
0x144A	0x6BE4      	CLRF        FARG_Button_active_state, 1
0x144C	0xF002EC1B  	CALL        _Button, 0
0x1450	0x5200      	MOVF        R0, 1 
0x1452	0xE006      	BZ          L_main136
;pong.c,452 :: 		flag = 2;
0x1454	0x0E02      	MOVLW       2
0x1456	0x6F76      	MOVWF       _flag, 1
;pong.c,453 :: 		Glcd_Fill(0x00);
0x1458	0x6BE0      	CLRF        FARG_Glcd_Fill_pattern, 1
0x145A	0xF003EC60  	CALL        _Glcd_Fill, 0
;pong.c,454 :: 		break ;
0x145E	0xD008      	BRA         L_main135
;pong.c,455 :: 		}
L_main136:
;pong.c,456 :: 		else if(y <= 20){
0x1460	0x5177      	MOVF        _y, 0, 1
0x1462	0x0814      	SUBLW       20
0x1464	0xE304      	BNC         L_main138
;pong.c,457 :: 		Glcd_Fill(0x00);
0x1466	0x6BE0      	CLRF        FARG_Glcd_Fill_pattern, 1
0x1468	0xF003EC60  	CALL        _Glcd_Fill, 0
;pong.c,458 :: 		break;
0x146C	0xD001      	BRA         L_main135
;pong.c,459 :: 		}
L_main138:
;pong.c,460 :: 		}
0x146E	0xD7E0      	BRA         L_main134
L_main135:
;pong.c,461 :: 		Glcd_Fill(0x00);
0x1470	0x6BE0      	CLRF        FARG_Glcd_Fill_pattern, 1
0x1472	0xF003EC60  	CALL        _Glcd_Fill, 0
;pong.c,462 :: 		}
0x1476	0xD008      	BRA         L_main139
L_main132:
;pong.c,463 :: 		else if(flag == 1 || flag == 2){
0x1478	0x5176      	MOVF        _flag, 0, 1
0x147A	0x0A01      	XORLW       1
0x147C	0xE004      	BZ          L__main217
0x147E	0x5176      	MOVF        _flag, 0, 1
0x1480	0x0A02      	XORLW       2
0x1482	0xE001      	BZ          L__main217
0x1484	0xD001      	BRA         L_main142
L__main217:
;pong.c,464 :: 		break;
0x1486	0xD001      	BRA         L_main123
;pong.c,465 :: 		}
L_main142:
L_main139:
L_main131:
;pong.c,466 :: 		}Master == 0;
0x1488	0xD777      	BRA         L_main122
L_main123:
;pong.c,467 :: 		break;
0x148A	0xD2F4      	BRA         L_main120
;pong.c,468 :: 		case 1:
L_main143:
;pong.c,469 :: 		delay_ms(100);
0x148C	0x0E02      	MOVLW       2
0x148E	0x6E0B      	MOVWF       R11, 0
0x1490	0x0E04      	MOVLW       4
0x1492	0x6E0C      	MOVWF       R12, 0
0x1494	0x0EBA      	MOVLW       186
0x1496	0x6E0D      	MOVWF       R13, 0
L_main144:
0x1498	0x2E0D      	DECFSZ      R13, 1, 0
0x149A	0xD7FE      	BRA         L_main144
0x149C	0x2E0C      	DECFSZ      R12, 1, 0
0x149E	0xD7FC      	BRA         L_main144
0x14A0	0x2E0B      	DECFSZ      R11, 1, 0
0x14A2	0xD7FA      	BRA         L_main144
0x14A4	0x0000      	NOP
;pong.c,470 :: 		Glcd_Fill(0x00);
0x14A6	0x6BE0      	CLRF        FARG_Glcd_Fill_pattern, 1
0x14A8	0xF003EC60  	CALL        _Glcd_Fill, 0
;pong.c,471 :: 		init();
0x14AC	0xF004EC6C  	CALL        _init, 0
;pong.c,472 :: 		while(1){
L_main145:
;pong.c,473 :: 		y = ADC_Read(0);
0x14B0	0x6BDA      	CLRF        FARG_ADC_Read_channel, 1
0x14B2	0xF004ECD3  	CALL        _ADC_Read, 0
0x14B6	0xF077C000  	MOVFF       R0, _y
;pong.c,474 :: 		if(turno > 10){
0x14BA	0x5175      	MOVF        _turno, 0, 1
0x14BC	0x080A      	SUBLW       10
0x14BE	0xA0D8      	BTFSS       STATUS, 0 
;pong.c,475 :: 		turno = 0;
0x14C0	0x6B75      	CLRF        _turno, 1
;pong.c,476 :: 		}
L_main147:
;pong.c,477 :: 		if(turno_paleta > 10){
0x14C2	0x5178      	MOVF        _turno_paleta, 0, 1
0x14C4	0x080A      	SUBLW       10
0x14C6	0xA0D8      	BTFSS       STATUS, 0 
;pong.c,478 :: 		turno_paleta = 0;
0x14C8	0x6B78      	CLRF        _turno_paleta, 1
;pong.c,479 :: 		}
L_main148:
;pong.c,480 :: 		if( y >= 190){                //Mover hacia abajo
0x14CA	0x0EBE      	MOVLW       190
0x14CC	0x5D77      	SUBWF       _y, 0, 1
0x14CE	0xE31A      	BNC         L_main149
;pong.c,481 :: 		erase_player(paddle[1].x, paddle[1].y-2, paddle[1].w, paddle[1].h);
0x14D0	0xF0E0C09D  	MOVFF       _paddle+4, FARG_erase_player_x
0x14D4	0x0E02      	MOVLW       2
0x14D6	0x5D9E      	SUBWF       _paddle+5, 0, 1
0x14D8	0x6FE1      	MOVWF       FARG_erase_player_y, 1
0x14DA	0xF0E2C09F  	MOVFF       _paddle+6, FARG_erase_player_w
0x14DE	0xF0E3C0A0  	MOVFF       _paddle+7, FARG_erase_player_h
0x14E2	0xF003EC8A  	CALL        _erase_player, 0
;pong.c,482 :: 		move_player(1,0);
0x14E6	0x0E01      	MOVLW       1
0x14E8	0x6FDA      	MOVWF       FARG_move_player_i, 1
0x14EA	0x6BDB      	CLRF        FARG_move_player_direction, 1
0x14EC	0xDCA0      	RCALL       _move_player
;pong.c,483 :: 		draw_player(paddle[1].x, paddle[1].y, paddle[1].w, paddle[1].h);
0x14EE	0xF0EAC09D  	MOVFF       _paddle+4, FARG_draw_player_x
0x14F2	0xF0EBC09E  	MOVFF       _paddle+5, FARG_draw_player_y
0x14F6	0xF0ECC09F  	MOVFF       _paddle+6, FARG_draw_player_w
0x14FA	0xF0EDC0A0  	MOVFF       _paddle+7, FARG_draw_player_h
0x14FE	0xF001EC83  	CALL        _draw_player, 0
;pong.c,484 :: 		}
0x1502	0xD01D      	BRA         L_main150
L_main149:
;pong.c,485 :: 		else if(y <= 30){                //Mover hacia arriba
0x1504	0x5177      	MOVF        _y, 0, 1
0x1506	0x081E      	SUBLW       30
0x1508	0xE31A      	BNC         L_main151
;pong.c,486 :: 		erase_player(paddle[1].x, paddle[1].y+2, paddle[1].w, paddle[1].h);
0x150A	0xF0E0C09D  	MOVFF       _paddle+4, FARG_erase_player_x
0x150E	0x0E02      	MOVLW       2
0x1510	0x259E      	ADDWF       _paddle+5, 0, 1
0x1512	0x6FE1      	MOVWF       FARG_erase_player_y, 1
0x1514	0xF0E2C09F  	MOVFF       _paddle+6, FARG_erase_player_w
0x1518	0xF0E3C0A0  	MOVFF       _paddle+7, FARG_erase_player_h
0x151C	0xF003EC8A  	CALL        _erase_player, 0
;pong.c,487 :: 		move_player(1,1);
0x1520	0x0E01      	MOVLW       1
0x1522	0x6FDA      	MOVWF       FARG_move_player_i, 1
0x1524	0x0E01      	MOVLW       1
0x1526	0x6FDB      	MOVWF       FARG_move_player_direction, 1
0x1528	0xDC82      	RCALL       _move_player
;pong.c,488 :: 		draw_player(paddle[1].x, paddle[1].y, paddle[1].w, paddle[1].h);
0x152A	0xF0EAC09D  	MOVFF       _paddle+4, FARG_draw_player_x
0x152E	0xF0EBC09E  	MOVFF       _paddle+5, FARG_draw_player_y
0x1532	0xF0ECC09F  	MOVFF       _paddle+6, FARG_draw_player_w
0x1536	0xF0EDC0A0  	MOVFF       _paddle+7, FARG_draw_player_h
0x153A	0xF001EC83  	CALL        _draw_player, 0
;pong.c,489 :: 		}
L_main151:
L_main150:
;pong.c,491 :: 		move_ball();
0x153E	0xF005ECF6  	CALL        _move_ball, 0
;pong.c,492 :: 		DrawBall(ball.x, ball.y);
0x1542	0xF0EAC095  	MOVFF       _ball, FARG_DrawBall_x
0x1546	0xF0EBC096  	MOVFF       _ball+1, FARG_DrawBall_y
0x154A	0xF001EC4A  	CALL        _DrawBall, 0
;pong.c,493 :: 		move_ia();     //Para que la paleta se mueva sola
0x154E	0xDDE4      	RCALL       _move_ia
;pong.c,495 :: 		draw_player(paddle[0].x, paddle[0].y, paddle[0].w, paddle[0].h);
0x1550	0xF0EAC099  	MOVFF       _paddle, FARG_draw_player_x
0x1554	0xF0EBC09A  	MOVFF       _paddle+1, FARG_draw_player_y
0x1558	0xF0ECC09B  	MOVFF       _paddle+2, FARG_draw_player_w
0x155C	0xF0EDC09C  	MOVFF       _paddle+3, FARG_draw_player_h
0x1560	0xF001EC83  	CALL        _draw_player, 0
;pong.c,497 :: 		draw_score();
0x1564	0xDD47      	RCALL       _draw_score
;pong.c,499 :: 		check = check_winner();
0x1566	0xF005ECCB  	CALL        _check_winner, 0
0x156A	0xF0D5C000  	MOVFF       R0, main_check_L0
;pong.c,501 :: 		if(check != 0){
0x156E	0x5000      	MOVF        R0, 0 
0x1570	0x0A00      	XORLW       0
0x1572	0xE041      	BZ          L_main152
;pong.c,502 :: 		if(check == 1){
0x1574	0x0100      	MOVLB       0
0x1576	0x51D5      	MOVF        main_check_L0, 0, 1
0x1578	0x0A01      	XORLW       1
0x157A	0xE11D      	BNZ         L_main153
;pong.c,503 :: 		Glcd_Write_Text("PC WINS", 43, 4,1);
0x157C	0x0E15      	MOVLW       ?lstr4_pong
0x157E	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x1580	0x0E00      	MOVLW       hi_addr(?lstr4_pong)
0x1582	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x1584	0x0E2B      	MOVLW       43
0x1586	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x1588	0x0E04      	MOVLW       4
0x158A	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_page_num, 1
0x158C	0x0E01      	MOVLW       1
0x158E	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x1590	0xF005EC4B  	CALL        _Glcd_Write_Text, 0
;pong.c,504 :: 		delay_ms (10000);
0x1594	0x0E66      	MOVLW       102
0x1596	0x6E0B      	MOVWF       R11, 0
0x1598	0x0E76      	MOVLW       118
0x159A	0x6E0C      	MOVWF       R12, 0
0x159C	0x0EC1      	MOVLW       193
0x159E	0x6E0D      	MOVWF       R13, 0
L_main154:
0x15A0	0x2E0D      	DECFSZ      R13, 1, 0
0x15A2	0xD7FE      	BRA         L_main154
0x15A4	0x2E0C      	DECFSZ      R12, 1, 0
0x15A6	0xD7FC      	BRA         L_main154
0x15A8	0x2E0B      	DECFSZ      R11, 1, 0
0x15AA	0xD7FA      	BRA         L_main154
;pong.c,508 :: 		Glcd_Fill(0x00);
0x15AC	0x6BE0      	CLRF        FARG_Glcd_Fill_pattern, 1
0x15AE	0xF003EC60  	CALL        _Glcd_Fill, 0
;pong.c,509 :: 		flag = 0;
0x15B2	0x6B76      	CLRF        _flag, 1
;pong.c,510 :: 		break;
0x15B4	0xD024      	BRA         L_main146
;pong.c,511 :: 		}
L_main153:
;pong.c,512 :: 		if(check == 2){
0x15B6	0x51D5      	MOVF        main_check_L0, 0, 1
0x15B8	0x0A02      	XORLW       2
0x15BA	0xE11D      	BNZ         L_main155
;pong.c,513 :: 		Glcd_Write_Text("YOU WIN", 43, 4,1);
0x15BC	0x0E1D      	MOVLW       ?lstr5_pong
0x15BE	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x15C0	0x0E00      	MOVLW       hi_addr(?lstr5_pong)
0x15C2	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x15C4	0x0E2B      	MOVLW       43
0x15C6	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x15C8	0x0E04      	MOVLW       4
0x15CA	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_page_num, 1
0x15CC	0x0E01      	MOVLW       1
0x15CE	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x15D0	0xF005EC4B  	CALL        _Glcd_Write_Text, 0
;pong.c,514 :: 		delay_ms (10000);
0x15D4	0x0E66      	MOVLW       102
0x15D6	0x6E0B      	MOVWF       R11, 0
0x15D8	0x0E76      	MOVLW       118
0x15DA	0x6E0C      	MOVWF       R12, 0
0x15DC	0x0EC1      	MOVLW       193
0x15DE	0x6E0D      	MOVWF       R13, 0
L_main156:
0x15E0	0x2E0D      	DECFSZ      R13, 1, 0
0x15E2	0xD7FE      	BRA         L_main156
0x15E4	0x2E0C      	DECFSZ      R12, 1, 0
0x15E6	0xD7FC      	BRA         L_main156
0x15E8	0x2E0B      	DECFSZ      R11, 1, 0
0x15EA	0xD7FA      	BRA         L_main156
;pong.c,518 :: 		Glcd_Fill(0x00);
0x15EC	0x6BE0      	CLRF        FARG_Glcd_Fill_pattern, 1
0x15EE	0xF003EC60  	CALL        _Glcd_Fill, 0
;pong.c,519 :: 		flag = 0;
0x15F2	0x6B76      	CLRF        _flag, 1
;pong.c,520 :: 		break;
0x15F4	0xD004      	BRA         L_main146
;pong.c,521 :: 		}
L_main155:
;pong.c,522 :: 		}
L_main152:
0x15F6	0x0100      	MOVLB       0
;pong.c,523 :: 		turno ++;
0x15F8	0x2B75      	INCF        _turno, 1, 1
;pong.c,524 :: 		turno_paleta ++;
0x15FA	0x2B78      	INCF        _turno_paleta, 1, 1
;pong.c,525 :: 		}
0x15FC	0xD759      	BRA         L_main145
L_main146:
;pong.c,526 :: 		break;
0x15FE	0xD23A      	BRA         L_main120
;pong.c,527 :: 		case 2:
L_main157:
;pong.c,528 :: 		init();
0x1600	0xF004EC6C  	CALL        _init, 0
;pong.c,529 :: 		Glcd_Fill(0x00);
0x1604	0x6BE0      	CLRF        FARG_Glcd_Fill_pattern, 1
0x1606	0xF003EC60  	CALL        _Glcd_Fill, 0
;pong.c,530 :: 		delay_ms(1000);
0x160A	0x0E0B      	MOVLW       11
0x160C	0x6E0B      	MOVWF       R11, 0
0x160E	0x0E26      	MOVLW       38
0x1610	0x6E0C      	MOVWF       R12, 0
0x1612	0x0E5D      	MOVLW       93
0x1614	0x6E0D      	MOVWF       R13, 0
L_main158:
0x1616	0x2E0D      	DECFSZ      R13, 1, 0
0x1618	0xD7FE      	BRA         L_main158
0x161A	0x2E0C      	DECFSZ      R12, 1, 0
0x161C	0xD7FC      	BRA         L_main158
0x161E	0x2E0B      	DECFSZ      R11, 1, 0
0x1620	0xD7FA      	BRA         L_main158
0x1622	0x0000      	NOP
0x1624	0x0000      	NOP
;pong.c,532 :: 		if(UART1_Data_Ready()==0){//Espera a que se conecte la otra consola
0x1626	0xF001EC45  	CALL        _UART1_Data_Ready, 0
0x162A	0x5000      	MOVF        R0, 0 
0x162C	0x0A00      	XORLW       0
0x162E	0xE11B      	BNZ         L_main159
;pong.c,533 :: 		while(1){        //Manda constantemente un 1, siempre y cuando no detecte la otra consola
L_main160:
0x1630	0x0100      	MOVLB       0
;pong.c,534 :: 		Glcd_Write_Text("Waiting for other player",0,0,1);
0x1632	0x0E3C      	MOVLW       ?lstr6_pong
0x1634	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x1636	0x0E00      	MOVLW       hi_addr(?lstr6_pong)
0x1638	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x163A	0x6BDC      	CLRF        FARG_Glcd_Write_Text_x_pos, 1
0x163C	0x6BDD      	CLRF        FARG_Glcd_Write_Text_page_num, 1
0x163E	0x0E01      	MOVLW       1
0x1640	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x1642	0xF005EC4B  	CALL        _Glcd_Write_Text, 0
;pong.c,535 :: 		UART1_Write('1');
0x1646	0x0E31      	MOVLW       49
0x1648	0x6FEA      	MOVWF       FARG_UART1_Write_data_, 1
0x164A	0xF001EC7C  	CALL        _UART1_Write, 0
;pong.c,536 :: 		if(UART1_Data_Ready() ==1){
0x164E	0xF001EC45  	CALL        _UART1_Data_Ready, 0
0x1652	0x5000      	MOVF        R0, 0 
0x1654	0x0A01      	XORLW       1
0x1656	0xE101      	BNZ         L_main162
;pong.c,537 :: 		break;
0x1658	0xD001      	BRA         L_main161
;pong.c,538 :: 		}
L_main162:
;pong.c,540 :: 		}
0x165A	0xD7EA      	BRA         L_main160
L_main161:
;pong.c,541 :: 		Glcd_Fill(0x00);
0x165C	0x0100      	MOVLB       0
0x165E	0x6BE0      	CLRF        FARG_Glcd_Fill_pattern, 1
0x1660	0xF003EC60  	CALL        _Glcd_Fill, 0
;pong.c,542 :: 		}
0x1664	0xD039      	BRA         L_main163
L_main159:
;pong.c,544 :: 		for (tiempo = 0; tiempo < 200; tiempo ++){
0x1666	0x6BD6      	CLRF        main_tiempo_L0, 1
L_main164:
0x1668	0x0EC8      	MOVLW       200
0x166A	0x5DD6      	SUBWF       main_tiempo_L0, 0, 1
0x166C	0xE207      	BC          L_main165
;pong.c,545 :: 		UART1_Write('1');
0x166E	0x0E31      	MOVLW       49
0x1670	0x6FEA      	MOVWF       FARG_UART1_Write_data_, 1
0x1672	0xF001EC7C  	CALL        _UART1_Write, 0
;pong.c,544 :: 		for (tiempo = 0; tiempo < 200; tiempo ++){
0x1676	0x0100      	MOVLB       0
0x1678	0x2BD6      	INCF        main_tiempo_L0, 1, 1
;pong.c,547 :: 		}
0x167A	0xD7F6      	BRA         L_main164
L_main165:
;pong.c,548 :: 		Glcd_Write_Text("Press to start",0,0,1);        //Una vez que se conecta,
0x167C	0x0E64      	MOVLW       ?lstr7_pong
0x167E	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x1680	0x0E00      	MOVLW       hi_addr(?lstr7_pong)
0x1682	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x1684	0x6BDC      	CLRF        FARG_Glcd_Write_Text_x_pos, 1
0x1686	0x6BDD      	CLRF        FARG_Glcd_Write_Text_page_num, 1
0x1688	0x0E01      	MOVLW       1
0x168A	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x168C	0xF005EC4B  	CALL        _Glcd_Write_Text, 0
;pong.c,550 :: 		while(1){
L_main167:
;pong.c,552 :: 		Master_slave = UART1_Read();                        //Asi el primero que presione, sera el maestro
0x1690	0xF001EC3C  	CALL        _UART1_Read, 0
0x1694	0xF0D8C000  	MOVFF       R0, main_Master_slave_L0
;pong.c,553 :: 		if(Button(&PORTC,1,1,0)){                                //Y el que no presiono se le manda la senal para que
0x1698	0x0E82      	MOVLW       PORTC
0x169A	0x0100      	MOVLB       0
0x169C	0x6FE0      	MOVWF       FARG_Button_port, 1
0x169E	0x0E0F      	MOVLW       hi_addr(PORTC)
0x16A0	0x6FE1      	MOVWF       FARG_Button_port+1, 1
0x16A2	0x0E01      	MOVLW       1
0x16A4	0x6FE2      	MOVWF       FARG_Button_pin, 1
0x16A6	0x0E01      	MOVLW       1
0x16A8	0x6FE3      	MOVWF       FARG_Button_time_ms, 1
0x16AA	0x6BE4      	CLRF        FARG_Button_active_state, 1
0x16AC	0xF002EC1B  	CALL        _Button, 0
0x16B0	0x5200      	MOVF        R0, 1 
0x16B2	0xE008      	BZ          L_main169
;pong.c,554 :: 		UART1_Write('3');
0x16B4	0x0E33      	MOVLW       51
0x16B6	0x6FEA      	MOVWF       FARG_UART1_Write_data_, 1
0x16B8	0xF001EC7C  	CALL        _UART1_Write, 0
;pong.c,555 :: 		Master = 1;
0x16BC	0x0E01      	MOVLW       1
0x16BE	0x0100      	MOVLB       0
0x16C0	0x6FD7      	MOVWF       main_Master_L0, 1
;pong.c,556 :: 		break;
0x16C2	0xD007      	BRA         L_main168
;pong.c,557 :: 		}
L_main169:
;pong.c,558 :: 		else if(Master_slave == '3'){
0x16C4	0x51D8      	MOVF        main_Master_slave_L0, 0, 1
0x16C6	0x0A33      	XORLW       51
0x16C8	0xE103      	BNZ         L_main171
;pong.c,559 :: 		Master = 2;
0x16CA	0x0E02      	MOVLW       2
0x16CC	0x6FD7      	MOVWF       main_Master_L0, 1
;pong.c,560 :: 		break;
0x16CE	0xD001      	BRA         L_main168
;pong.c,561 :: 		}
L_main171:
;pong.c,562 :: 		}
0x16D0	0xD7DF      	BRA         L_main167
L_main168:
;pong.c,564 :: 		Glcd_Fill(0x00);
0x16D2	0x6BE0      	CLRF        FARG_Glcd_Fill_pattern, 1
0x16D4	0xF003EC60  	CALL        _Glcd_Fill, 0
;pong.c,565 :: 		}
L_main163:
;pong.c,566 :: 		delay_ms(500);
0x16D8	0x0E06      	MOVLW       6
0x16DA	0x6E0B      	MOVWF       R11, 0
0x16DC	0x0E13      	MOVLW       19
0x16DE	0x6E0C      	MOVWF       R12, 0
0x16E0	0x0EAD      	MOVLW       173
0x16E2	0x6E0D      	MOVWF       R13, 0
L_main172:
0x16E4	0x2E0D      	DECFSZ      R13, 1, 0
0x16E6	0xD7FE      	BRA         L_main172
0x16E8	0x2E0C      	DECFSZ      R12, 1, 0
0x16EA	0xD7FC      	BRA         L_main172
0x16EC	0x2E0B      	DECFSZ      R11, 1, 0
0x16EE	0xD7FA      	BRA         L_main172
0x16F0	0x0000      	NOP
0x16F2	0x0000      	NOP
;pong.c,568 :: 		if(Master == 1){//Si existe Master es porque este pic es el maestro
0x16F4	0x51D7      	MOVF        main_Master_L0, 0, 1
0x16F6	0x0A01      	XORLW       1
0x16F8	0xA4D8      	BTFSS       STATUS, 2 
0x16FA	0xD0F9      	BRA         L_main173
;pong.c,569 :: 		while(1){
L_main174:
;pong.c,570 :: 		y = ADC_Read(0);
0x16FC	0x6BDA      	CLRF        FARG_ADC_Read_channel, 1
0x16FE	0xF004ECD3  	CALL        _ADC_Read, 0
0x1702	0xF077C000  	MOVFF       R0, _y
;pong.c,571 :: 		if(turno > 5){
0x1706	0x5175      	MOVF        _turno, 0, 1
0x1708	0x0805      	SUBLW       5
0x170A	0xA0D8      	BTFSS       STATUS, 0 
;pong.c,572 :: 		turno = 0;
0x170C	0x6B75      	CLRF        _turno, 1
;pong.c,573 :: 		}
L_main176:
;pong.c,574 :: 		if(turno_paleta > 10){
0x170E	0x5178      	MOVF        _turno_paleta, 0, 1
0x1710	0x080A      	SUBLW       10
0x1712	0xA0D8      	BTFSS       STATUS, 0 
;pong.c,575 :: 		turno_paleta = 0;
0x1714	0x6B78      	CLRF        _turno_paleta, 1
;pong.c,576 :: 		}
L_main177:
;pong.c,577 :: 		if(y >= 190){ //Mover hacia abajo
0x1716	0x0EBE      	MOVLW       190
0x1718	0x5D77      	SUBWF       _y, 0, 1
0x171A	0xE31A      	BNC         L_main178
;pong.c,578 :: 		erase_player(paddle[0].x, paddle[0].y-2, paddle[0].w, paddle[0].h);
0x171C	0xF0E0C099  	MOVFF       _paddle, FARG_erase_player_x
0x1720	0x0E02      	MOVLW       2
0x1722	0x5D9A      	SUBWF       _paddle+1, 0, 1
0x1724	0x6FE1      	MOVWF       FARG_erase_player_y, 1
0x1726	0xF0E2C09B  	MOVFF       _paddle+2, FARG_erase_player_w
0x172A	0xF0E3C09C  	MOVFF       _paddle+3, FARG_erase_player_h
0x172E	0xF003EC8A  	CALL        _erase_player, 0
;pong.c,579 :: 		move_player(0,0);        //Jugador, direccion
0x1732	0x6BDA      	CLRF        FARG_move_player_i, 1
0x1734	0x6BDB      	CLRF        FARG_move_player_direction, 1
0x1736	0xF007EC17  	CALL        _move_player, 0
;pong.c,580 :: 		draw_player(paddle[0].x, paddle[0].y, paddle[0].w, paddle[0].h);
0x173A	0xF0EAC099  	MOVFF       _paddle, FARG_draw_player_x
0x173E	0xF0EBC09A  	MOVFF       _paddle+1, FARG_draw_player_y
0x1742	0xF0ECC09B  	MOVFF       _paddle+2, FARG_draw_player_w
0x1746	0xF0EDC09C  	MOVFF       _paddle+3, FARG_draw_player_h
0x174A	0xF001EC83  	CALL        _draw_player, 0
;pong.c,581 :: 		}
0x174E	0xD01D      	BRA         L_main179
L_main178:
;pong.c,582 :: 		else if(y <= 25){ //Mover hacia arriba
0x1750	0x5177      	MOVF        _y, 0, 1
0x1752	0x0819      	SUBLW       25
0x1754	0xE31A      	BNC         L_main180
;pong.c,583 :: 		erase_player(paddle[0].x, paddle[0].y+2, paddle[0].w, paddle[0].h);
0x1756	0xF0E0C099  	MOVFF       _paddle, FARG_erase_player_x
0x175A	0x0E02      	MOVLW       2
0x175C	0x259A      	ADDWF       _paddle+1, 0, 1
0x175E	0x6FE1      	MOVWF       FARG_erase_player_y, 1
0x1760	0xF0E2C09B  	MOVFF       _paddle+2, FARG_erase_player_w
0x1764	0xF0E3C09C  	MOVFF       _paddle+3, FARG_erase_player_h
0x1768	0xF003EC8A  	CALL        _erase_player, 0
;pong.c,584 :: 		move_player(0,1);
0x176C	0x6BDA      	CLRF        FARG_move_player_i, 1
0x176E	0x0E01      	MOVLW       1
0x1770	0x6FDB      	MOVWF       FARG_move_player_direction, 1
0x1772	0xF007EC17  	CALL        _move_player, 0
;pong.c,585 :: 		draw_player(paddle[0].x, paddle[0].y, paddle[0].w, paddle[0].h);
0x1776	0xF0EAC099  	MOVFF       _paddle, FARG_draw_player_x
0x177A	0xF0EBC09A  	MOVFF       _paddle+1, FARG_draw_player_y
0x177E	0xF0ECC09B  	MOVFF       _paddle+2, FARG_draw_player_w
0x1782	0xF0EDC09C  	MOVFF       _paddle+3, FARG_draw_player_h
0x1786	0xF001EC83  	CALL        _draw_player, 0
;pong.c,586 :: 		}
L_main180:
L_main179:
;pong.c,588 :: 		while(UART1_Data_Ready()==0);
L_main181:
0x178A	0xF001EC45  	CALL        _UART1_Data_Ready, 0
0x178E	0x5000      	MOVF        R0, 0 
0x1790	0x0A00      	XORLW       0
0x1792	0xE101      	BNZ         L_main182
0x1794	0xD7FA      	BRA         L_main181
L_main182:
;pong.c,590 :: 		if(UART1_Read() == '1'){
0x1796	0xF001EC3C  	CALL        _UART1_Read, 0
0x179A	0x5000      	MOVF        R0, 0 
0x179C	0x0A31      	XORLW       49
0x179E	0xE11C      	BNZ         L_main183
;pong.c,591 :: 		erase_player(paddle[1].x, paddle[1].y-2, paddle[1].w, paddle[1].h);
0x17A0	0xF0E0C09D  	MOVFF       _paddle+4, FARG_erase_player_x
0x17A4	0x0E02      	MOVLW       2
0x17A6	0x0100      	MOVLB       0
0x17A8	0x5D9E      	SUBWF       _paddle+5, 0, 1
0x17AA	0x6FE1      	MOVWF       FARG_erase_player_y, 1
0x17AC	0xF0E2C09F  	MOVFF       _paddle+6, FARG_erase_player_w
0x17B0	0xF0E3C0A0  	MOVFF       _paddle+7, FARG_erase_player_h
0x17B4	0xF003EC8A  	CALL        _erase_player, 0
;pong.c,592 :: 		move_player(1,0); //Jugador, direccion
0x17B8	0x0E01      	MOVLW       1
0x17BA	0x6FDA      	MOVWF       FARG_move_player_i, 1
0x17BC	0x6BDB      	CLRF        FARG_move_player_direction, 1
0x17BE	0xF007EC17  	CALL        _move_player, 0
;pong.c,593 :: 		draw_player(paddle[1].x, paddle[1].y, paddle[1].w, paddle[1].h);
0x17C2	0xF0EAC09D  	MOVFF       _paddle+4, FARG_draw_player_x
0x17C6	0xF0EBC09E  	MOVFF       _paddle+5, FARG_draw_player_y
0x17CA	0xF0ECC09F  	MOVFF       _paddle+6, FARG_draw_player_w
0x17CE	0xF0EDC0A0  	MOVFF       _paddle+7, FARG_draw_player_h
0x17D2	0xF001EC83  	CALL        _draw_player, 0
;pong.c,594 :: 		}
0x17D6	0xD021      	BRA         L_main184
L_main183:
;pong.c,595 :: 		else if(UART1_Read() == '2'){
0x17D8	0xF001EC3C  	CALL        _UART1_Read, 0
0x17DC	0x5000      	MOVF        R0, 0 
0x17DE	0x0A32      	XORLW       50
0x17E0	0xE11C      	BNZ         L_main185
;pong.c,596 :: 		erase_player(paddle[1].x, paddle[1].y+2, paddle[1].w, paddle[1].h);
0x17E2	0xF0E0C09D  	MOVFF       _paddle+4, FARG_erase_player_x
0x17E6	0x0E02      	MOVLW       2
0x17E8	0x0100      	MOVLB       0
0x17EA	0x259E      	ADDWF       _paddle+5, 0, 1
0x17EC	0x6FE1      	MOVWF       FARG_erase_player_y, 1
0x17EE	0xF0E2C09F  	MOVFF       _paddle+6, FARG_erase_player_w
0x17F2	0xF0E3C0A0  	MOVFF       _paddle+7, FARG_erase_player_h
0x17F6	0xF003EC8A  	CALL        _erase_player, 0
;pong.c,597 :: 		move_player(1,1); //Jugador, direccion
0x17FA	0x0E01      	MOVLW       1
0x17FC	0x6FDA      	MOVWF       FARG_move_player_i, 1
0x17FE	0x0E01      	MOVLW       1
0x1800	0x6FDB      	MOVWF       FARG_move_player_direction, 1
0x1802	0xF007EC17  	CALL        _move_player, 0
;pong.c,598 :: 		draw_player(paddle[1].x, paddle[1].y, paddle[1].w, paddle[1].h);
0x1806	0xF0EAC09D  	MOVFF       _paddle+4, FARG_draw_player_x
0x180A	0xF0EBC09E  	MOVFF       _paddle+5, FARG_draw_player_y
0x180E	0xF0ECC09F  	MOVFF       _paddle+6, FARG_draw_player_w
0x1812	0xF0EDC0A0  	MOVFF       _paddle+7, FARG_draw_player_h
0x1816	0xF001EC83  	CALL        _draw_player, 0
;pong.c,599 :: 		}
L_main185:
L_main184:
;pong.c,601 :: 		move_ball();
0x181A	0xF005ECF6  	CALL        _move_ball, 0
;pong.c,602 :: 		DrawBall(ball.x, ball.y);
0x181E	0xF0EAC095  	MOVFF       _ball, FARG_DrawBall_x
0x1822	0xF0EBC096  	MOVFF       _ball+1, FARG_DrawBall_y
0x1826	0xF001EC4A  	CALL        _DrawBall, 0
;pong.c,603 :: 		draw_score();
0x182A	0xF007ECFA  	CALL        _draw_score, 0
;pong.c,605 :: 		data_pack(); //serial_pack_data
0x182E	0xF005EC88  	CALL        _data_pack, 0
;pong.c,606 :: 		output_data(info); //send_pack_data(serial_data);
0x1832	0x0E8C      	MOVLW       _info
0x1834	0x6FDA      	MOVWF       FARG_output_data_serial_dir, 1
0x1836	0x0E00      	MOVLW       hi_addr(_info)
0x1838	0x6FDB      	MOVWF       FARG_output_data_serial_dir+1, 1
0x183A	0xF005EC7D  	CALL        _output_data, 0
;pong.c,608 :: 		while (UART1_Tx_Idle() != 1);
L_main186:
0x183E	0xF003EC5B  	CALL        _UART1_Tx_Idle, 0
0x1842	0x5000      	MOVF        R0, 0 
0x1844	0x0A01      	XORLW       1
0x1846	0xE001      	BZ          L_main187
0x1848	0xD7FA      	BRA         L_main186
L_main187:
;pong.c,610 :: 		check = check_winner();
0x184A	0xF005ECCB  	CALL        _check_winner, 0
0x184E	0xF0D5C000  	MOVFF       R0, main_check_L0
;pong.c,611 :: 		if(check != 0){                        //Solamente si check es diferente a 0 entra
0x1852	0x5000      	MOVF        R0, 0 
0x1854	0x0A00      	XORLW       0
0x1856	0xE047      	BZ          L_main188
;pong.c,612 :: 		if(check == 1){
0x1858	0x0100      	MOVLB       0
0x185A	0x51D5      	MOVF        main_check_L0, 0, 1
0x185C	0x0A01      	XORLW       1
0x185E	0xE11D      	BNZ         L_main189
;pong.c,613 :: 		Glcd_Write_Text("P1 WINS", 43, 4,1);
0x1860	0x0E55      	MOVLW       ?lstr8_pong
0x1862	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x1864	0x0E00      	MOVLW       hi_addr(?lstr8_pong)
0x1866	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x1868	0x0E2B      	MOVLW       43
0x186A	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x186C	0x0E04      	MOVLW       4
0x186E	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_page_num, 1
0x1870	0x0E01      	MOVLW       1
0x1872	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x1874	0xF005EC4B  	CALL        _Glcd_Write_Text, 0
;pong.c,614 :: 		delay_ms(10000);
0x1878	0x0E66      	MOVLW       102
0x187A	0x6E0B      	MOVWF       R11, 0
0x187C	0x0E76      	MOVLW       118
0x187E	0x6E0C      	MOVWF       R12, 0
0x1880	0x0EC1      	MOVLW       193
0x1882	0x6E0D      	MOVWF       R13, 0
L_main190:
0x1884	0x2E0D      	DECFSZ      R13, 1, 0
0x1886	0xD7FE      	BRA         L_main190
0x1888	0x2E0C      	DECFSZ      R12, 1, 0
0x188A	0xD7FC      	BRA         L_main190
0x188C	0x2E0B      	DECFSZ      R11, 1, 0
0x188E	0xD7FA      	BRA         L_main190
;pong.c,616 :: 		Glcd_Fill(0x00);
0x1890	0x6BE0      	CLRF        FARG_Glcd_Fill_pattern, 1
0x1892	0xF003EC60  	CALL        _Glcd_Fill, 0
;pong.c,619 :: 		flag = 0;
0x1896	0x6B76      	CLRF        _flag, 1
;pong.c,620 :: 		break;
0x1898	0xD02A      	BRA         L_main175
;pong.c,621 :: 		}
L_main189:
;pong.c,622 :: 		if(check == 2){
0x189A	0x51D5      	MOVF        main_check_L0, 0, 1
0x189C	0x0A02      	XORLW       2
0x189E	0xE123      	BNZ         L_main191
;pong.c,623 :: 		Glcd_Write_Text("P2 WIN", 43, 4,1);
0x18A0	0x0E5D      	MOVLW       ?lstr9_pong
0x18A2	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x18A4	0x0E00      	MOVLW       hi_addr(?lstr9_pong)
0x18A6	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x18A8	0x0E2B      	MOVLW       43
0x18AA	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x18AC	0x0E04      	MOVLW       4
0x18AE	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_page_num, 1
0x18B0	0x0E01      	MOVLW       1
0x18B2	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x18B4	0xF005EC4B  	CALL        _Glcd_Write_Text, 0
;pong.c,624 :: 		delay_ms(10000);
0x18B8	0x0E66      	MOVLW       102
0x18BA	0x6E0B      	MOVWF       R11, 0
0x18BC	0x0E76      	MOVLW       118
0x18BE	0x6E0C      	MOVWF       R12, 0
0x18C0	0x0EC1      	MOVLW       193
0x18C2	0x6E0D      	MOVWF       R13, 0
L_main192:
0x18C4	0x2E0D      	DECFSZ      R13, 1, 0
0x18C6	0xD7FE      	BRA         L_main192
0x18C8	0x2E0C      	DECFSZ      R12, 1, 0
0x18CA	0xD7FC      	BRA         L_main192
0x18CC	0x2E0B      	DECFSZ      R11, 1, 0
0x18CE	0xD7FA      	BRA         L_main192
;pong.c,625 :: 		UART1_Write_Text(fin);
0x18D0	0x0EC5      	MOVLW       _fin
0x18D2	0x6FE0      	MOVWF       FARG_UART1_Write_Text_uart_text, 1
0x18D4	0x0E00      	MOVLW       hi_addr(_fin)
0x18D6	0x6FE1      	MOVWF       FARG_UART1_Write_Text_uart_text+1, 1
0x18D8	0xF002ECF4  	CALL        _UART1_Write_Text, 0
;pong.c,626 :: 		Glcd_Fill(0x00);
0x18DC	0x6BE0      	CLRF        FARG_Glcd_Fill_pattern, 1
0x18DE	0xF003EC60  	CALL        _Glcd_Fill, 0
;pong.c,629 :: 		flag = 0;
0x18E2	0x6B76      	CLRF        _flag, 1
;pong.c,630 :: 		break;
0x18E4	0xD004      	BRA         L_main175
;pong.c,631 :: 		}
L_main191:
;pong.c,632 :: 		}
L_main188:
0x18E6	0x0100      	MOVLB       0
;pong.c,633 :: 		turno ++;
0x18E8	0x2B75      	INCF        _turno, 1, 1
;pong.c,634 :: 		turno_paleta++;
0x18EA	0x2B78      	INCF        _turno_paleta, 1, 1
;pong.c,635 :: 		}
0x18EC	0xD707      	BRA         L_main174
L_main175:
;pong.c,636 :: 		}
L_main173:
;pong.c,638 :: 		if (Master == 2){                //Si no existe Master es porque este pic es el esclavo
0x18EE	0x51D7      	MOVF        main_Master_L0, 0, 1
0x18F0	0x0A02      	XORLW       2
0x18F2	0xA4D8      	BTFSS       STATUS, 2 
0x18F4	0xD0B1      	BRA         L_main193
;pong.c,639 :: 		while(1){
L_main194:
0x18F6	0x0100      	MOVLB       0
;pong.c,641 :: 		y = ADC_Read(1);
0x18F8	0x0E01      	MOVLW       1
0x18FA	0x6FDA      	MOVWF       FARG_ADC_Read_channel, 1
0x18FC	0xF004ECD3  	CALL        _ADC_Read, 0
0x1900	0xF077C000  	MOVFF       R0, _y
;pong.c,642 :: 		save_old_data();
0x1904	0xF005ECA1  	CALL        _save_old_data, 0
;pong.c,644 :: 		if(y >= 190){        //Mover hacia abajo
0x1908	0x0EBE      	MOVLW       190
0x190A	0x5D77      	SUBWF       _y, 0, 1
0x190C	0xE303      	BNC         L_main196
;pong.c,645 :: 		move_other = '1';
0x190E	0x0E31      	MOVLW       49
0x1910	0x6FD9      	MOVWF       main_move_other_L0, 1
;pong.c,646 :: 		}
0x1912	0xD008      	BRA         L_main197
L_main196:
;pong.c,647 :: 		else if(y <= 25){         //Mover hacia arriba
0x1914	0x5177      	MOVF        _y, 0, 1
0x1916	0x0819      	SUBLW       25
0x1918	0xE303      	BNC         L_main198
;pong.c,648 :: 		move_other = '2';
0x191A	0x0E32      	MOVLW       50
0x191C	0x6FD9      	MOVWF       main_move_other_L0, 1
;pong.c,649 :: 		}
0x191E	0xD002      	BRA         L_main199
L_main198:
;pong.c,650 :: 		else{move_other = '0';}
0x1920	0x0E30      	MOVLW       48
0x1922	0x6FD9      	MOVWF       main_move_other_L0, 1
L_main199:
L_main197:
;pong.c,652 :: 		output_character(move_other);
0x1924	0xF0DAC0D9  	MOVFF       main_move_other_L0, FARG_output_character_charValue
0x1928	0xF005ECC1  	CALL        _output_character, 0
;pong.c,653 :: 		input_data(info);
0x192C	0x0E8C      	MOVLW       _info
0x192E	0x0100      	MOVLB       0
0x1930	0x6FDA      	MOVWF       FARG_input_data_text_dir, 1
0x1932	0x0E00      	MOVLW       hi_addr(_info)
0x1934	0x6FDB      	MOVWF       FARG_input_data_text_dir+1, 1
0x1936	0xF005ECAE  	CALL        _input_data, 0
;pong.c,654 :: 		desdata_pack ();
0x193A	0xF007ECDE  	CALL        _desdata_pack, 0
;pong.c,656 :: 		if(send_balls.x != ball.x || send_balls.y != ball.y){
0x193E	0x51A1      	MOVF        _send_balls, 0, 1
0x1940	0x1995      	XORWF       _ball, 0, 1
0x1942	0xE104      	BNZ         L__main216
0x1944	0x51A2      	MOVF        _send_balls+1, 0, 1
0x1946	0x1996      	XORWF       _ball+1, 0, 1
0x1948	0xE101      	BNZ         L__main216
0x194A	0xD007      	BRA         L_main202
L__main216:
;pong.c,657 :: 		Glcd_Dot(send_balls.x, send_balls.y, 0);
0x194C	0xF0F3C0A1  	MOVFF       _send_balls, FARG_Glcd_Dot_x_pos
0x1950	0xF0F4C0A2  	MOVFF       _send_balls+1, FARG_Glcd_Dot_y_pos
0x1954	0x6BF5      	CLRF        FARG_Glcd_Dot_color, 1
0x1956	0xF000EC73  	CALL        _Glcd_Dot, 0
;pong.c,658 :: 		}
L_main202:
;pong.c,659 :: 		if(send_paddles[0].y != paddle[0].y){
0x195A	0x51A6      	MOVF        _send_paddles+1, 0, 1
0x195C	0x199A      	XORWF       _paddle+1, 0, 1
0x195E	0xE00A      	BZ          L_main203
;pong.c,660 :: 		erase_player(paddle[0].x, send_paddles[0].y, paddle[0].w, paddle[0].h);
0x1960	0xF0E0C099  	MOVFF       _paddle, FARG_erase_player_x
0x1964	0xF0E1C0A6  	MOVFF       _send_paddles+1, FARG_erase_player_y
0x1968	0xF0E2C09B  	MOVFF       _paddle+2, FARG_erase_player_w
0x196C	0xF0E3C09C  	MOVFF       _paddle+3, FARG_erase_player_h
0x1970	0xF003EC8A  	CALL        _erase_player, 0
;pong.c,661 :: 		}
L_main203:
;pong.c,662 :: 		if(send_paddles[1].y != paddle[1].y){
0x1974	0x51AA      	MOVF        _send_paddles+5, 0, 1
0x1976	0x199E      	XORWF       _paddle+5, 0, 1
0x1978	0xE00A      	BZ          L_main204
;pong.c,663 :: 		erase_player(paddle[1].x, send_paddles[1].y, paddle[1].w, paddle[1].h);
0x197A	0xF0E0C09D  	MOVFF       _paddle+4, FARG_erase_player_x
0x197E	0xF0E1C0AA  	MOVFF       _send_paddles+5, FARG_erase_player_y
0x1982	0xF0E2C09F  	MOVFF       _paddle+6, FARG_erase_player_w
0x1986	0xF0E3C0A0  	MOVFF       _paddle+7, FARG_erase_player_h
0x198A	0xF003EC8A  	CALL        _erase_player, 0
;pong.c,664 :: 		}
L_main204:
;pong.c,666 :: 		draw_score();
0x198E	0xF007ECFA  	CALL        _draw_score, 0
;pong.c,668 :: 		draw_player(paddle[0].x, paddle[0].y, paddle[0].w, paddle[0].h);
0x1992	0xF0EAC099  	MOVFF       _paddle, FARG_draw_player_x
0x1996	0xF0EBC09A  	MOVFF       _paddle+1, FARG_draw_player_y
0x199A	0xF0ECC09B  	MOVFF       _paddle+2, FARG_draw_player_w
0x199E	0xF0EDC09C  	MOVFF       _paddle+3, FARG_draw_player_h
0x19A2	0xF001EC83  	CALL        _draw_player, 0
;pong.c,669 :: 		draw_player(paddle[1].x, paddle[1].y, paddle[1].w, paddle[1].h);
0x19A6	0xF0EAC09D  	MOVFF       _paddle+4, FARG_draw_player_x
0x19AA	0xF0EBC09E  	MOVFF       _paddle+5, FARG_draw_player_y
0x19AE	0xF0ECC09F  	MOVFF       _paddle+6, FARG_draw_player_w
0x19B2	0xF0EDC0A0  	MOVFF       _paddle+7, FARG_draw_player_h
0x19B6	0xF001EC83  	CALL        _draw_player, 0
;pong.c,670 :: 		DrawBall(ball.x,ball.y);
0x19BA	0xF0EAC095  	MOVFF       _ball, FARG_DrawBall_x
0x19BE	0xF0EBC096  	MOVFF       _ball+1, FARG_DrawBall_y
0x19C2	0xF001EC4A  	CALL        _DrawBall, 0
;pong.c,672 :: 		check = check_winner();
0x19C6	0xF005ECCB  	CALL        _check_winner, 0
0x19CA	0xF0D5C000  	MOVFF       R0, main_check_L0
;pong.c,673 :: 		if(check != 0){                        //Solamente si check es diferente a 0 entra
0x19CE	0x5000      	MOVF        R0, 0 
0x19D0	0x0A00      	XORLW       0
0x19D2	0xE041      	BZ          L_main205
;pong.c,674 :: 		if(check == 1){
0x19D4	0x0100      	MOVLB       0
0x19D6	0x51D5      	MOVF        main_check_L0, 0, 1
0x19D8	0x0A01      	XORLW       1
0x19DA	0xE11D      	BNZ         L_main206
;pong.c,675 :: 		Glcd_Write_Text("P1 WINS", 43, 4,1);
0x19DC	0x0E83      	MOVLW       ?lstr10_pong
0x19DE	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x19E0	0x0E00      	MOVLW       hi_addr(?lstr10_pong)
0x19E2	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x19E4	0x0E2B      	MOVLW       43
0x19E6	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x19E8	0x0E04      	MOVLW       4
0x19EA	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_page_num, 1
0x19EC	0x0E01      	MOVLW       1
0x19EE	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x19F0	0xF005EC4B  	CALL        _Glcd_Write_Text, 0
;pong.c,676 :: 		delay_ms(10000);
0x19F4	0x0E66      	MOVLW       102
0x19F6	0x6E0B      	MOVWF       R11, 0
0x19F8	0x0E76      	MOVLW       118
0x19FA	0x6E0C      	MOVWF       R12, 0
0x19FC	0x0EC1      	MOVLW       193
0x19FE	0x6E0D      	MOVWF       R13, 0
L_main207:
0x1A00	0x2E0D      	DECFSZ      R13, 1, 0
0x1A02	0xD7FE      	BRA         L_main207
0x1A04	0x2E0C      	DECFSZ      R12, 1, 0
0x1A06	0xD7FC      	BRA         L_main207
0x1A08	0x2E0B      	DECFSZ      R11, 1, 0
0x1A0A	0xD7FA      	BRA         L_main207
;pong.c,677 :: 		Glcd_Fill(0x00);
0x1A0C	0x6BE0      	CLRF        FARG_Glcd_Fill_pattern, 1
0x1A0E	0xF003EC60  	CALL        _Glcd_Fill, 0
;pong.c,680 :: 		flag = 0;
0x1A12	0x6B76      	CLRF        _flag, 1
;pong.c,681 :: 		break;
0x1A14	0xD021      	BRA         L_main195
;pong.c,682 :: 		}
L_main206:
;pong.c,683 :: 		if(check == 2){
0x1A16	0x51D5      	MOVF        main_check_L0, 0, 1
0x1A18	0x0A02      	XORLW       2
0x1A1A	0xE11D      	BNZ         L_main208
;pong.c,684 :: 		Glcd_Write_Text("P2 WIN", 43, 4,1);
0x1A1C	0x0E79      	MOVLW       ?lstr11_pong
0x1A1E	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x1A20	0x0E00      	MOVLW       hi_addr(?lstr11_pong)
0x1A22	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x1A24	0x0E2B      	MOVLW       43
0x1A26	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x1A28	0x0E04      	MOVLW       4
0x1A2A	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_page_num, 1
0x1A2C	0x0E01      	MOVLW       1
0x1A2E	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x1A30	0xF005EC4B  	CALL        _Glcd_Write_Text, 0
;pong.c,685 :: 		delay_ms(10000);
0x1A34	0x0E66      	MOVLW       102
0x1A36	0x6E0B      	MOVWF       R11, 0
0x1A38	0x0E76      	MOVLW       118
0x1A3A	0x6E0C      	MOVWF       R12, 0
0x1A3C	0x0EC1      	MOVLW       193
0x1A3E	0x6E0D      	MOVWF       R13, 0
L_main209:
0x1A40	0x2E0D      	DECFSZ      R13, 1, 0
0x1A42	0xD7FE      	BRA         L_main209
0x1A44	0x2E0C      	DECFSZ      R12, 1, 0
0x1A46	0xD7FC      	BRA         L_main209
0x1A48	0x2E0B      	DECFSZ      R11, 1, 0
0x1A4A	0xD7FA      	BRA         L_main209
;pong.c,686 :: 		Glcd_Fill(0x00);
0x1A4C	0x6BE0      	CLRF        FARG_Glcd_Fill_pattern, 1
0x1A4E	0xF003EC60  	CALL        _Glcd_Fill, 0
;pong.c,689 :: 		flag = 0;
0x1A52	0x6B76      	CLRF        _flag, 1
;pong.c,690 :: 		break;
0x1A54	0xD001      	BRA         L_main195
;pong.c,691 :: 		}
L_main208:
;pong.c,692 :: 		}
L_main205:
;pong.c,693 :: 		}
0x1A56	0xD74F      	BRA         L_main194
L_main195:
;pong.c,694 :: 		}
L_main193:
;pong.c,695 :: 		break;
0x1A58	0xD00D      	BRA         L_main120
;pong.c,697 :: 		}
L_main119:
0x1A5A	0x0100      	MOVLB       0
0x1A5C	0x5176      	MOVF        _flag, 0, 1
0x1A5E	0x0A00      	XORLW       0
0x1A60	0xB4D8      	BTFSC       STATUS, 2 
0x1A62	0xD48A      	BRA         L_main121
0x1A64	0x5176      	MOVF        _flag, 0, 1
0x1A66	0x0A01      	XORLW       1
0x1A68	0xB4D8      	BTFSC       STATUS, 2 
0x1A6A	0xD510      	BRA         L_main143
0x1A6C	0x5176      	MOVF        _flag, 0, 1
0x1A6E	0x0A02      	XORLW       2
0x1A70	0xB4D8      	BTFSC       STATUS, 2 
0x1A72	0xD5C6      	BRA         L_main157
L_main120:
;pong.c,698 :: 		}
0x1A74	0xD480      	BRA         L_main117
;pong.c,699 :: 		}
L_end_main:
0x1A76	0xD7FF      	BRA         $+0
; end of _main
0x20D0	0xF015EE10  	LFSR        1, 21
0x20D4	0x0E77      	MOVLW       119
0x20D6	0x6E00      	MOVWF       R0 
0x20D8	0x0E01      	MOVLW       1
0x20DA	0x6E01      	MOVWF       R1 
0x20DC	0x0E58      	MOVLW       88
0x20DE	0x6EF6      	MOVWF       4086 
0x20E0	0x0E20      	MOVLW       32
0x20E2	0x6EF7      	MOVWF       TBLPTRH 
0x20E4	0x0E00      	MOVLW       0
0x20E6	0x6EF8      	MOVWF       TBLPTRU 
0x20E8	0xF004ECCB  	CALL        2454, 0
0x20EC	0x0012      	RETURN      0
;Portada.c,6 :: _Portada
0x1A78	0x0000 ;_Portada+0
0x1A7A	0x0000 ;_Portada+2
0x1A7C	0x0000 ;_Portada+4
0x1A7E	0x0000 ;_Portada+6
0x1A80	0x0000 ;_Portada+8
0x1A82	0x0000 ;_Portada+10
0x1A84	0x0000 ;_Portada+12
0x1A86	0x0000 ;_Portada+14
0x1A88	0x0000 ;_Portada+16
0x1A8A	0x0000 ;_Portada+18
0x1A8C	0x0000 ;_Portada+20
0x1A8E	0x0000 ;_Portada+22
0x1A90	0x0000 ;_Portada+24
0x1A92	0x0000 ;_Portada+26
0x1A94	0x0000 ;_Portada+28
0x1A96	0x0000 ;_Portada+30
0x1A98	0x0000 ;_Portada+32
0x1A9A	0x0000 ;_Portada+34
0x1A9C	0x0000 ;_Portada+36
0x1A9E	0x0000 ;_Portada+38
0x1AA0	0x0000 ;_Portada+40
0x1AA2	0x0000 ;_Portada+42
0x1AA4	0x0000 ;_Portada+44
0x1AA6	0x0000 ;_Portada+46
0x1AA8	0x0000 ;_Portada+48
0x1AAA	0x0000 ;_Portada+50
0x1AAC	0x2000 ;_Portada+52
0x1AAE	0xE020 ;_Portada+54
0x1AB0	0x2020 ;_Portada+56
0x1AB2	0xE000 ;_Portada+58
0x1AB4	0xA0A0 ;_Portada+60
0x1AB6	0x0020 ;_Portada+62
0x1AB8	0x20E0 ;_Portada+64
0x1ABA	0x2020 ;_Portada+66
0x1ABC	0x0000 ;_Portada+68
0x1ABE	0x0000 ;_Portada+70
0x1AC0	0x0000 ;_Portada+72
0x1AC2	0x0000 ;_Portada+74
0x1AC4	0x0000 ;_Portada+76
0x1AC6	0x0000 ;_Portada+78
0x1AC8	0x0000 ;_Portada+80
0x1ACA	0x0000 ;_Portada+82
0x1ACC	0x0000 ;_Portada+84
0x1ACE	0x0000 ;_Portada+86
0x1AD0	0x0000 ;_Portada+88
0x1AD2	0x0000 ;_Portada+90
0x1AD4	0x0000 ;_Portada+92
0x1AD6	0x0000 ;_Portada+94
0x1AD8	0x0000 ;_Portada+96
0x1ADA	0x0000 ;_Portada+98
0x1ADC	0x0000 ;_Portada+100
0x1ADE	0x0000 ;_Portada+102
0x1AE0	0x0000 ;_Portada+104
0x1AE2	0x0000 ;_Portada+106
0x1AE4	0x0000 ;_Portada+108
0x1AE6	0x0000 ;_Portada+110
0x1AE8	0x0000 ;_Portada+112
0x1AEA	0x0000 ;_Portada+114
0x1AEC	0x0000 ;_Portada+116
0x1AEE	0x0000 ;_Portada+118
0x1AF0	0x0000 ;_Portada+120
0x1AF2	0x0000 ;_Portada+122
0x1AF4	0x0000 ;_Portada+124
0x1AF6	0x0000 ;_Portada+126
0x1AF8	0x0000 ;_Portada+128
0x1AFA	0x0000 ;_Portada+130
0x1AFC	0x0000 ;_Portada+132
0x1AFE	0x0000 ;_Portada+134
0x1B00	0x0000 ;_Portada+136
0x1B02	0x0000 ;_Portada+138
0x1B04	0x0000 ;_Portada+140
0x1B06	0x0000 ;_Portada+142
0x1B08	0x0000 ;_Portada+144
0x1B0A	0x0000 ;_Portada+146
0x1B0C	0x0000 ;_Portada+148
0x1B0E	0x0000 ;_Portada+150
0x1B10	0x0000 ;_Portada+152
0x1B12	0x0000 ;_Portada+154
0x1B14	0x0000 ;_Portada+156
0x1B16	0x8000 ;_Portada+158
0x1B18	0x0000 ;_Portada+160
0x1B1A	0x0000 ;_Portada+162
0x1B1C	0x0000 ;_Portada+164
0x1B1E	0x0000 ;_Portada+166
0x1B20	0x0000 ;_Portada+168
0x1B22	0x0000 ;_Portada+170
0x1B24	0x0000 ;_Portada+172
0x1B26	0x0000 ;_Portada+174
0x1B28	0x0000 ;_Portada+176
0x1B2A	0x0000 ;_Portada+178
0x1B2C	0x0000 ;_Portada+180
0x1B2E	0x0700 ;_Portada+182
0x1B30	0x0000 ;_Portada+184
0x1B32	0x0700 ;_Portada+186
0x1B34	0x0404 ;_Portada+188
0x1B36	0x0004 ;_Portada+190
0x1B38	0x0407 ;_Portada+192
0x1B3A	0x0404 ;_Portada+194
0x1B3C	0x0000 ;_Portada+196
0x1B3E	0x0000 ;_Portada+198
0x1B40	0x0000 ;_Portada+200
0x1B42	0x0000 ;_Portada+202
0x1B44	0x0000 ;_Portada+204
0x1B46	0x8000 ;_Portada+206
0x1B48	0x0000 ;_Portada+208
0x1B4A	0x0000 ;_Portada+210
0x1B4C	0x0000 ;_Portada+212
0x1B4E	0x0000 ;_Portada+214
0x1B50	0x0000 ;_Portada+216
0x1B52	0x0000 ;_Portada+218
0x1B54	0x0080 ;_Portada+220
0x1B56	0x0000 ;_Portada+222
0x1B58	0x0000 ;_Portada+224
0x1B5A	0x0000 ;_Portada+226
0x1B5C	0x0000 ;_Portada+228
0x1B5E	0x0000 ;_Portada+230
0x1B60	0x0000 ;_Portada+232
0x1B62	0x0000 ;_Portada+234
0x1B64	0x0000 ;_Portada+236
0x1B66	0x0000 ;_Portada+238
0x1B68	0x0000 ;_Portada+240
0x1B6A	0x0000 ;_Portada+242
0x1B6C	0x0000 ;_Portada+244
0x1B6E	0x0000 ;_Portada+246
0x1B70	0x0000 ;_Portada+248
0x1B72	0x0000 ;_Portada+250
0x1B74	0x0000 ;_Portada+252
0x1B76	0x0000 ;_Portada+254
0x1B78	0x0000 ;_Portada+256
0x1B7A	0x0000 ;_Portada+258
0x1B7C	0x0000 ;_Portada+260
0x1B7E	0x0000 ;_Portada+262
0x1B80	0x0000 ;_Portada+264
0x1B82	0x0000 ;_Portada+266
0x1B84	0x0000 ;_Portada+268
0x1B86	0x0000 ;_Portada+270
0x1B88	0x0000 ;_Portada+272
0x1B8A	0x0000 ;_Portada+274
0x1B8C	0x1517 ;_Portada+276
0x1B8E	0x001D ;_Portada+278
0x1B90	0x001D ;_Portada+280
0x1B92	0x1517 ;_Portada+282
0x1B94	0x001D ;_Portada+284
0x1B96	0x1F01 ;_Portada+286
0x1B98	0x0001 ;_Portada+288
0x1B9A	0x151F ;_Portada+290
0x1B9C	0x1715 ;_Portada+292
0x1B9E	0x1F00 ;_Portada+294
0x1BA0	0x0E02 ;_Portada+296
0x1BA2	0x1E02 ;_Portada+298
0x1BA4	0x1D00 ;_Portada+300
0x1BA6	0x1F15 ;_Portada+302
0x1BA8	0x0000 ;_Portada+304
0x1BAA	0x1517 ;_Portada+306
0x1BAC	0x001D ;_Portada+308
0x1BAE	0x0000 ;_Portada+310
0x1BB0	0x0000 ;_Portada+312
0x1BB2	0x151F ;_Portada+314
0x1BB4	0x1715 ;_Portada+316
0x1BB6	0x1F00 ;_Portada+318
0x1BB8	0x0E02 ;_Portada+320
0x1BBA	0x1E02 ;_Portada+322
0x1BBC	0x7E00 ;_Portada+324
0x1BBE	0x1212 ;_Portada+326
0x1BC0	0x001E ;_Portada+328
0x1BC2	0x111F ;_Portada+330
0x1BC4	0x001F ;_Portada+332
0x1BC6	0x1F01 ;_Portada+334
0x1BC8	0x0001 ;_Portada+336
0x1BCA	0x021F ;_Portada+338
0x1BCC	0x0002 ;_Portada+340
0x1BCE	0x151D ;_Portada+342
0x1BD0	0x001F ;_Portada+344
0x1BD2	0x121E ;_Portada+346
0x1BD4	0x001F ;_Portada+348
0x1BD6	0x111F ;_Portada+350
0x1BD8	0x001F ;_Portada+352
0x1BDA	0x1517 ;_Portada+354
0x1BDC	0x001D ;_Portada+356
0x1BDE	0x0000 ;_Portada+358
0x1BE0	0x0000 ;_Portada+360
0x1BE2	0x0000 ;_Portada+362
0x1BE4	0x0000 ;_Portada+364
0x1BE6	0x0000 ;_Portada+366
0x1BE8	0x0000 ;_Portada+368
0x1BEA	0x0000 ;_Portada+370
0x1BEC	0x0000 ;_Portada+372
0x1BEE	0x0000 ;_Portada+374
0x1BF0	0x0000 ;_Portada+376
0x1BF2	0x0000 ;_Portada+378
0x1BF4	0x0000 ;_Portada+380
0x1BF6	0x0000 ;_Portada+382
0x1BF8	0x0000 ;_Portada+384
0x1BFA	0x0000 ;_Portada+386
0x1BFC	0x0000 ;_Portada+388
0x1BFE	0x0000 ;_Portada+390
0x1C00	0x0000 ;_Portada+392
0x1C02	0x0000 ;_Portada+394
0x1C04	0x0000 ;_Portada+396
0x1C06	0x0000 ;_Portada+398
0x1C08	0x0000 ;_Portada+400
0x1C0A	0x0000 ;_Portada+402
0x1C0C	0x0000 ;_Portada+404
0x1C0E	0x0000 ;_Portada+406
0x1C10	0x0000 ;_Portada+408
0x1C12	0x0000 ;_Portada+410
0x1C14	0x0000 ;_Portada+412
0x1C16	0x0000 ;_Portada+414
0x1C18	0x0000 ;_Portada+416
0x1C1A	0x0000 ;_Portada+418
0x1C1C	0x0000 ;_Portada+420
0x1C1E	0x0000 ;_Portada+422
0x1C20	0x0000 ;_Portada+424
0x1C22	0x0000 ;_Portada+426
0x1C24	0x0000 ;_Portada+428
0x1C26	0x0000 ;_Portada+430
0x1C28	0x0000 ;_Portada+432
0x1C2A	0x0000 ;_Portada+434
0x1C2C	0x0000 ;_Portada+436
0x1C2E	0x0000 ;_Portada+438
0x1C30	0x0000 ;_Portada+440
0x1C32	0x0000 ;_Portada+442
0x1C34	0x0000 ;_Portada+444
0x1C36	0x0000 ;_Portada+446
0x1C38	0x0000 ;_Portada+448
0x1C3A	0x0000 ;_Portada+450
0x1C3C	0x0000 ;_Portada+452
0x1C3E	0xE000 ;_Portada+454
0x1C40	0xA0A0 ;_Portada+456
0x1C42	0x0020 ;_Portada+458
0x1C44	0x80C0 ;_Portada+460
0x1C46	0x0080 ;_Portada+462
0x1C48	0x80C0 ;_Portada+464
0x1C4A	0x8080 ;_Portada+466
0x1C4C	0xC000 ;_Portada+468
0x1C4E	0x4040 ;_Portada+470
0x1C50	0x00C0 ;_Portada+472
0x1C52	0x40C0 ;_Portada+474
0x1C54	0x0040 ;_Portada+476
0x1C56	0xE040 ;_Portada+478
0x1C58	0x0040 ;_Portada+480
0x1C5A	0x40C0 ;_Portada+482
0x1C5C	0x00C0 ;_Portada+484
0x1C5E	0x0000 ;_Portada+486
0x1C60	0xE000 ;_Portada+488
0x1C62	0xA0A0 ;_Portada+490
0x1C64	0x00E0 ;_Portada+492
0x1C66	0x0000 ;_Portada+494
0x1C68	0x0000 ;_Portada+496
0x1C6A	0x0000 ;_Portada+498
0x1C6C	0x0000 ;_Portada+500
0x1C6E	0x0000 ;_Portada+502
0x1C70	0x0000 ;_Portada+504
0x1C72	0x0000 ;_Portada+506
0x1C74	0x0000 ;_Portada+508
0x1C76	0x0000 ;_Portada+510
0x1C78	0x0000 ;_Portada+512
0x1C7A	0x0000 ;_Portada+514
0x1C7C	0x0000 ;_Portada+516
0x1C7E	0x0000 ;_Portada+518
0x1C80	0x0000 ;_Portada+520
0x1C82	0x067E ;_Portada+522
0x1C84	0x6018 ;_Portada+524
0x1C86	0x007E ;_Portada+526
0x1C88	0x0074 ;_Portada+528
0x1C8A	0x447C ;_Portada+530
0x1C8C	0x0044 ;_Portada+532
0x1C8E	0x447C ;_Portada+534
0x1C90	0x007C ;_Portada+536
0x1C92	0x007E ;_Portada+538
0x1C94	0x5474 ;_Portada+540
0x1C96	0x007C ;_Portada+542
0x1C98	0x545C ;_Portada+544
0x1C9A	0x7454 ;_Portada+546
0x1C9C	0x0000 ;_Portada+548
0x1C9E	0x7E00 ;_Portada+550
0x1CA0	0x0A0A ;_Portada+552
0x1CA2	0x000E ;_Portada+554
0x1CA4	0x0040 ;_Portada+556
0x1CA6	0x0000 ;_Portada+558
0x1CA8	0x0000 ;_Portada+560
0x1CAA	0x0000 ;_Portada+562
0x1CAC	0x0000 ;_Portada+564
0x1CAE	0x0000 ;_Portada+566
0x1CB0	0x0000 ;_Portada+568
0x1CB2	0x0000 ;_Portada+570
0x1CB4	0x0000 ;_Portada+572
0x1CB6	0x0000 ;_Portada+574
0x1CB8	0x0000 ;_Portada+576
0x1CBA	0x0000 ;_Portada+578
0x1CBC	0x0000 ;_Portada+580
0x1CBE	0x0700 ;_Portada+582
0x1CC0	0x0404 ;_Portada+584
0x1CC2	0x0004 ;_Portada+586
0x1CC4	0x0007 ;_Portada+588
0x1CC6	0x0000 ;_Portada+590
0x1CC8	0x0007 ;_Portada+592
0x1CCA	0x0700 ;_Portada+594
0x1CCC	0x0700 ;_Portada+596
0x1CCE	0x0505 ;_Portada+598
0x1CD0	0x0005 ;_Portada+600
0x1CD2	0x0505 ;_Portada+602
0x1CD4	0x0007 ;_Portada+604
0x1CD6	0x0700 ;_Portada+606
0x1CD8	0x0000 ;_Portada+608
0x1CDA	0x0407 ;_Portada+610
0x1CDC	0x0007 ;_Portada+612
0x1CDE	0x0000 ;_Portada+614
0x1CE0	0x0700 ;_Portada+616
0x1CE2	0x0100 ;_Portada+618
0x1CE4	0x0006 ;_Portada+620
0x1CE6	0x0004 ;_Portada+622
0x1CE8	0x0000 ;_Portada+624
0x1CEA	0x0000 ;_Portada+626
0x1CEC	0x0000 ;_Portada+628
0x1CEE	0x0000 ;_Portada+630
0x1CF0	0x0000 ;_Portada+632
0x1CF2	0x0000 ;_Portada+634
0x1CF4	0x0000 ;_Portada+636
0x1CF6	0x0000 ;_Portada+638
0x1CF8	0x0000 ;_Portada+640
0x1CFA	0x0000 ;_Portada+642
0x1CFC	0x0000 ;_Portada+644
0x1CFE	0x0000 ;_Portada+646
0x1D00	0x0000 ;_Portada+648
0x1D02	0x427E ;_Portada+650
0x1D04	0x7252 ;_Portada+652
0x1D06	0x7400 ;_Portada+654
0x1D08	0x7C54 ;_Portada+656
0x1D0A	0x7E00 ;_Portada+658
0x1D0C	0x7050 ;_Portada+660
0x1D0E	0x7C00 ;_Portada+662
0x1D10	0x0808 ;_Portada+664
0x1D12	0x7400 ;_Portada+666
0x1D14	0x7C00 ;_Portada+668
0x1D16	0x5454 ;_Portada+670
0x1D18	0x005C ;_Portada+672
0x1D1A	0x7E00 ;_Portada+674
0x1D1C	0x0000 ;_Portada+676
0x1D1E	0x7E00 ;_Portada+678
0x1D20	0x1A0A ;_Portada+680
0x1D22	0x006E ;_Portada+682
0x1D24	0x0040 ;_Portada+684
0x1D26	0x0000 ;_Portada+686
0x1D28	0x0000 ;_Portada+688
0x1D2A	0x0000 ;_Portada+690
0x1D2C	0x0000 ;_Portada+692
0x1D2E	0x0000 ;_Portada+694
0x1D30	0x0000 ;_Portada+696
0x1D32	0x0000 ;_Portada+698
0x1D34	0x0000 ;_Portada+700
0x1D36	0x0000 ;_Portada+702
0x1D38	0x0000 ;_Portada+704
0x1D3A	0x0000 ;_Portada+706
0x1D3C	0x0000 ;_Portada+708
0x1D3E	0xFCFC ;_Portada+710
0x1D40	0x0404 ;_Portada+712
0x1D42	0x0404 ;_Portada+714
0x1D44	0xFC04 ;_Portada+716
0x1D46	0x00F8 ;_Portada+718
0x1D48	0x0000 ;_Portada+720
0x1D4A	0xF0C0 ;_Portada+722
0x1D4C	0x0C38 ;_Portada+724
0x1D4E	0x380C ;_Portada+726
0x1D50	0xC0F0 ;_Portada+728
0x1D52	0x0000 ;_Portada+730
0x1D54	0xFC00 ;_Portada+732
0x1D56	0xFCFC ;_Portada+734
0x1D58	0xC0F8 ;_Portada+736
0x1D5A	0xFC00 ;_Portada+738
0x1D5C	0x00FC ;_Portada+740
0x1D5E	0x0000 ;_Portada+742
0x1D60	0xC000 ;_Portada+744
0x1D62	0x38F0 ;_Portada+746
0x1D64	0x0C1C ;_Portada+748
0x1D66	0x0404 ;_Portada+750
0x1D68	0x0004 ;_Portada+752
0x1D6A	0x0000 ;_Portada+754
0x1D6C	0x0000 ;_Portada+756
0x1D6E	0x0000 ;_Portada+758
0x1D70	0x0000 ;_Portada+760
0x1D72	0x0000 ;_Portada+762
0x1D74	0x0000 ;_Portada+764
0x1D76	0x0000 ;_Portada+766
0x1D78	0x0000 ;_Portada+768
0x1D7A	0x0000 ;_Portada+770
0x1D7C	0x0000 ;_Portada+772
0x1D7E	0x0000 ;_Portada+774
0x1D80	0x0000 ;_Portada+776
0x1D82	0x427E ;_Portada+778
0x1D84	0x7252 ;_Portada+780
0x1D86	0x7C00 ;_Portada+782
0x1D88	0x5454 ;_Portada+784
0x1D8A	0x005C ;_Portada+786
0x1D8C	0x087C ;_Portada+788
0x1D8E	0x7808 ;_Portada+790
0x1D90	0x7C00 ;_Portada+792
0x1D92	0x5454 ;_Portada+794
0x1D94	0x005C ;_Portada+796
0x1D96	0x545C ;_Portada+798
0x1D98	0x0074 ;_Portada+800
0x1D9A	0x7400 ;_Portada+802
0x1D9C	0x5C00 ;_Portada+804
0x1D9E	0x7454 ;_Portada+806
0x1DA0	0x0000 ;_Portada+808
0x1DA2	0x7E00 ;_Portada+810
0x1DA4	0x1806 ;_Portada+812
0x1DA6	0x7E06 ;_Portada+814
0x1DA8	0x4000 ;_Portada+816
0x1DAA	0x0000 ;_Portada+818
0x1DAC	0x0000 ;_Portada+820
0x1DAE	0x0000 ;_Portada+822
0x1DB0	0x0000 ;_Portada+824
0x1DB2	0x0000 ;_Portada+826
0x1DB4	0x0000 ;_Portada+828
0x1DB6	0x0000 ;_Portada+830
0x1DB8	0x0000 ;_Portada+832
0x1DBA	0x0000 ;_Portada+834
0x1DBC	0x0000 ;_Portada+836
0x1DBE	0x1F1F ;_Portada+838
0x1DC0	0x0101 ;_Portada+840
0x1DC2	0x0101 ;_Portada+842
0x1DC4	0x0101 ;_Portada+844
0x1DC6	0x0000 ;_Portada+846
0x1DC8	0x0000 ;_Portada+848
0x1DCA	0x0701 ;_Portada+850
0x1DCC	0x180E ;_Portada+852
0x1DCE	0x0E18 ;_Portada+854
0x1DD0	0x0107 ;_Portada+856
0x1DD2	0x0000 ;_Portada+858
0x1DD4	0x1F00 ;_Portada+860
0x1DD6	0x001F ;_Portada+862
0x1DD8	0x0F03 ;_Portada+864
0x1DDA	0x1F1F ;_Portada+866
0x1DDC	0x001F ;_Portada+868
0x1DDE	0x0000 ;_Portada+870
0x1DE0	0x0F00 ;_Portada+872
0x1DE2	0x101F ;_Portada+874
0x1DE4	0x1110 ;_Portada+876
0x1DE6	0x1F19 ;_Portada+878
0x1DE8	0x000E ;_Portada+880
0x1DEA	0x0000 ;_Portada+882
0x1DEC	0x0000 ;_Portada+884
0x1DEE	0x0000 ;_Portada+886
0x1DF0	0x0000 ;_Portada+888
0x1DF2	0x0000 ;_Portada+890
0x1DF4	0x0000 ;_Portada+892
0x1DF6	0x0000 ;_Portada+894
0x1DF8	0x0000 ;_Portada+896
0x1DFA	0x0000 ;_Portada+898
0x1DFC	0x0000 ;_Portada+900
0x1DFE	0x0000 ;_Portada+902
0x1E00	0x0000 ;_Portada+904
0x1E02	0x0000 ;_Portada+906
0x1E04	0x0000 ;_Portada+908
0x1E06	0x0000 ;_Portada+910
0x1E08	0x0000 ;_Portada+912
0x1E0A	0x0000 ;_Portada+914
0x1E0C	0x0000 ;_Portada+916
0x1E0E	0x0000 ;_Portada+918
0x1E10	0x0000 ;_Portada+920
0x1E12	0x0000 ;_Portada+922
0x1E14	0x0000 ;_Portada+924
0x1E16	0x0000 ;_Portada+926
0x1E18	0x0000 ;_Portada+928
0x1E1A	0x0000 ;_Portada+930
0x1E1C	0x0000 ;_Portada+932
0x1E1E	0x0000 ;_Portada+934
0x1E20	0x0000 ;_Portada+936
0x1E22	0x0000 ;_Portada+938
0x1E24	0x0000 ;_Portada+940
0x1E26	0x0000 ;_Portada+942
0x1E28	0x0000 ;_Portada+944
0x1E2A	0x0000 ;_Portada+946
0x1E2C	0x0000 ;_Portada+948
0x1E2E	0x0000 ;_Portada+950
0x1E30	0x0000 ;_Portada+952
0x1E32	0x0000 ;_Portada+954
0x1E34	0x0000 ;_Portada+956
0x1E36	0x0000 ;_Portada+958
0x1E38	0x0000 ;_Portada+960
0x1E3A	0x0000 ;_Portada+962
0x1E3C	0x0000 ;_Portada+964
0x1E3E	0x0000 ;_Portada+966
0x1E40	0x0000 ;_Portada+968
0x1E42	0x0000 ;_Portada+970
0x1E44	0x0000 ;_Portada+972
0x1E46	0x0000 ;_Portada+974
0x1E48	0x0000 ;_Portada+976
0x1E4A	0x0000 ;_Portada+978
0x1E4C	0x0000 ;_Portada+980
0x1E4E	0x0000 ;_Portada+982
0x1E50	0x0000 ;_Portada+984
0x1E52	0x0000 ;_Portada+986
0x1E54	0x0000 ;_Portada+988
0x1E56	0x0000 ;_Portada+990
0x1E58	0x0000 ;_Portada+992
0x1E5A	0x0000 ;_Portada+994
0x1E5C	0x0000 ;_Portada+996
0x1E5E	0x0000 ;_Portada+998
0x1E60	0x0000 ;_Portada+1000
0x1E62	0x0000 ;_Portada+1002
0x1E64	0x0000 ;_Portada+1004
0x1E66	0x0000 ;_Portada+1006
0x1E68	0x0000 ;_Portada+1008
0x1E6A	0x0000 ;_Portada+1010
0x1E6C	0x0000 ;_Portada+1012
0x1E6E	0x0000 ;_Portada+1014
0x1E70	0x0000 ;_Portada+1016
0x1E72	0x0000 ;_Portada+1018
0x1E74	0x0000 ;_Portada+1020
0x1E76	0x0000 ;_Portada+1022
; end of _Portada
;__Lib_GlcdFonts.c,612 :: _font5x7
0x1E78	0x0000 ;_font5x7+0
0x1E7A	0x0000 ;_font5x7+2
0x1E7C	0x0000 ;_font5x7+4
0x1E7E	0x5F00 ;_font5x7+6
0x1E80	0x0000 ;_font5x7+8
0x1E82	0x0700 ;_font5x7+10
0x1E84	0x0700 ;_font5x7+12
0x1E86	0x1400 ;_font5x7+14
0x1E88	0x147F ;_font5x7+16
0x1E8A	0x147F ;_font5x7+18
0x1E8C	0x2A24 ;_font5x7+20
0x1E8E	0x2A7F ;_font5x7+22
0x1E90	0x2312 ;_font5x7+24
0x1E92	0x0813 ;_font5x7+26
0x1E94	0x6264 ;_font5x7+28
0x1E96	0x4936 ;_font5x7+30
0x1E98	0x2255 ;_font5x7+32
0x1E9A	0x0050 ;_font5x7+34
0x1E9C	0x0305 ;_font5x7+36
0x1E9E	0x0000 ;_font5x7+38
0x1EA0	0x1C00 ;_font5x7+40
0x1EA2	0x4122 ;_font5x7+42
0x1EA4	0x0000 ;_font5x7+44
0x1EA6	0x2241 ;_font5x7+46
0x1EA8	0x001C ;_font5x7+48
0x1EAA	0x2A08 ;_font5x7+50
0x1EAC	0x2A1C ;_font5x7+52
0x1EAE	0x0808 ;_font5x7+54
0x1EB0	0x3E08 ;_font5x7+56
0x1EB2	0x0808 ;_font5x7+58
0x1EB4	0x5000 ;_font5x7+60
0x1EB6	0x0030 ;_font5x7+62
0x1EB8	0x0800 ;_font5x7+64
0x1EBA	0x0808 ;_font5x7+66
0x1EBC	0x0808 ;_font5x7+68
0x1EBE	0x3000 ;_font5x7+70
0x1EC0	0x0030 ;_font5x7+72
0x1EC2	0x2000 ;_font5x7+74
0x1EC4	0x0810 ;_font5x7+76
0x1EC6	0x0204 ;_font5x7+78
0x1EC8	0x513E ;_font5x7+80
0x1ECA	0x4549 ;_font5x7+82
0x1ECC	0x003E ;_font5x7+84
0x1ECE	0x7F42 ;_font5x7+86
0x1ED0	0x0040 ;_font5x7+88
0x1ED2	0x6142 ;_font5x7+90
0x1ED4	0x4951 ;_font5x7+92
0x1ED6	0x2146 ;_font5x7+94
0x1ED8	0x4541 ;_font5x7+96
0x1EDA	0x314B ;_font5x7+98
0x1EDC	0x1418 ;_font5x7+100
0x1EDE	0x7F12 ;_font5x7+102
0x1EE0	0x2710 ;_font5x7+104
0x1EE2	0x4545 ;_font5x7+106
0x1EE4	0x3945 ;_font5x7+108
0x1EE6	0x4A3C ;_font5x7+110
0x1EE8	0x4949 ;_font5x7+112
0x1EEA	0x0130 ;_font5x7+114
0x1EEC	0x0971 ;_font5x7+116
0x1EEE	0x0305 ;_font5x7+118
0x1EF0	0x4936 ;_font5x7+120
0x1EF2	0x4949 ;_font5x7+122
0x1EF4	0x0636 ;_font5x7+124
0x1EF6	0x4949 ;_font5x7+126
0x1EF8	0x1E29 ;_font5x7+128
0x1EFA	0x3600 ;_font5x7+130
0x1EFC	0x0036 ;_font5x7+132
0x1EFE	0x0000 ;_font5x7+134
0x1F00	0x3656 ;_font5x7+136
0x1F02	0x0000 ;_font5x7+138
0x1F04	0x0800 ;_font5x7+140
0x1F06	0x2214 ;_font5x7+142
0x1F08	0x1441 ;_font5x7+144
0x1F0A	0x1414 ;_font5x7+146
0x1F0C	0x1414 ;_font5x7+148
0x1F0E	0x2241 ;_font5x7+150
0x1F10	0x0814 ;_font5x7+152
0x1F12	0x0200 ;_font5x7+154
0x1F14	0x5101 ;_font5x7+156
0x1F16	0x0609 ;_font5x7+158
0x1F18	0x4932 ;_font5x7+160
0x1F1A	0x4179 ;_font5x7+162
0x1F1C	0x7E3E ;_font5x7+164
0x1F1E	0x1111 ;_font5x7+166
0x1F20	0x7E11 ;_font5x7+168
0x1F22	0x497F ;_font5x7+170
0x1F24	0x4949 ;_font5x7+172
0x1F26	0x3E36 ;_font5x7+174
0x1F28	0x4141 ;_font5x7+176
0x1F2A	0x2241 ;_font5x7+178
0x1F2C	0x417F ;_font5x7+180
0x1F2E	0x2241 ;_font5x7+182
0x1F30	0x7F1C ;_font5x7+184
0x1F32	0x4949 ;_font5x7+186
0x1F34	0x4149 ;_font5x7+188
0x1F36	0x097F ;_font5x7+190
0x1F38	0x0109 ;_font5x7+192
0x1F3A	0x3E01 ;_font5x7+194
0x1F3C	0x4141 ;_font5x7+196
0x1F3E	0x3251 ;_font5x7+198
0x1F40	0x087F ;_font5x7+200
0x1F42	0x0808 ;_font5x7+202
0x1F44	0x007F ;_font5x7+204
0x1F46	0x7F41 ;_font5x7+206
0x1F48	0x0041 ;_font5x7+208
0x1F4A	0x4020 ;_font5x7+210
0x1F4C	0x3F41 ;_font5x7+212
0x1F4E	0x7F01 ;_font5x7+214
0x1F50	0x1408 ;_font5x7+216
0x1F52	0x4122 ;_font5x7+218
0x1F54	0x407F ;_font5x7+220
0x1F56	0x4040 ;_font5x7+222
0x1F58	0x7F40 ;_font5x7+224
0x1F5A	0x0402 ;_font5x7+226
0x1F5C	0x7F02 ;_font5x7+228
0x1F5E	0x047F ;_font5x7+230
0x1F60	0x1008 ;_font5x7+232
0x1F62	0x3E7F ;_font5x7+234
0x1F64	0x4141 ;_font5x7+236
0x1F66	0x3E41 ;_font5x7+238
0x1F68	0x097F ;_font5x7+240
0x1F6A	0x0909 ;_font5x7+242
0x1F6C	0x3E06 ;_font5x7+244
0x1F6E	0x5141 ;_font5x7+246
0x1F70	0x5E21 ;_font5x7+248
0x1F72	0x097F ;_font5x7+250
0x1F74	0x2919 ;_font5x7+252
0x1F76	0x4646 ;_font5x7+254
0x1F78	0x4949 ;_font5x7+256
0x1F7A	0x3149 ;_font5x7+258
0x1F7C	0x0101 ;_font5x7+260
0x1F7E	0x017F ;_font5x7+262
0x1F80	0x3F01 ;_font5x7+264
0x1F82	0x4040 ;_font5x7+266
0x1F84	0x3F40 ;_font5x7+268
0x1F86	0x201F ;_font5x7+270
0x1F88	0x2040 ;_font5x7+272
0x1F8A	0x7F1F ;_font5x7+274
0x1F8C	0x1820 ;_font5x7+276
0x1F8E	0x7F20 ;_font5x7+278
0x1F90	0x1463 ;_font5x7+280
0x1F92	0x1408 ;_font5x7+282
0x1F94	0x0363 ;_font5x7+284
0x1F96	0x7804 ;_font5x7+286
0x1F98	0x0304 ;_font5x7+288
0x1F9A	0x5161 ;_font5x7+290
0x1F9C	0x4549 ;_font5x7+292
0x1F9E	0x0043 ;_font5x7+294
0x1FA0	0x7F00 ;_font5x7+296
0x1FA2	0x4141 ;_font5x7+298
0x1FA4	0x0402 ;_font5x7+300
0x1FA6	0x1008 ;_font5x7+302
0x1FA8	0x4120 ;_font5x7+304
0x1FAA	0x7F41 ;_font5x7+306
0x1FAC	0x0000 ;_font5x7+308
0x1FAE	0x0204 ;_font5x7+310
0x1FB0	0x0201 ;_font5x7+312
0x1FB2	0x4004 ;_font5x7+314
0x1FB4	0x4040 ;_font5x7+316
0x1FB6	0x4040 ;_font5x7+318
0x1FB8	0x0100 ;_font5x7+320
0x1FBA	0x0402 ;_font5x7+322
0x1FBC	0x2000 ;_font5x7+324
0x1FBE	0x5454 ;_font5x7+326
0x1FC0	0x7854 ;_font5x7+328
0x1FC2	0x487F ;_font5x7+330
0x1FC4	0x4444 ;_font5x7+332
0x1FC6	0x3838 ;_font5x7+334
0x1FC8	0x4444 ;_font5x7+336
0x1FCA	0x2044 ;_font5x7+338
0x1FCC	0x4438 ;_font5x7+340
0x1FCE	0x4844 ;_font5x7+342
0x1FD0	0x387F ;_font5x7+344
0x1FD2	0x5454 ;_font5x7+346
0x1FD4	0x1854 ;_font5x7+348
0x1FD6	0x7E08 ;_font5x7+350
0x1FD8	0x0109 ;_font5x7+352
0x1FDA	0x0802 ;_font5x7+354
0x1FDC	0x5414 ;_font5x7+356
0x1FDE	0x3C54 ;_font5x7+358
0x1FE0	0x087F ;_font5x7+360
0x1FE2	0x0404 ;_font5x7+362
0x1FE4	0x0078 ;_font5x7+364
0x1FE6	0x7D44 ;_font5x7+366
0x1FE8	0x0040 ;_font5x7+368
0x1FEA	0x4020 ;_font5x7+370
0x1FEC	0x3D44 ;_font5x7+372
0x1FEE	0x0000 ;_font5x7+374
0x1FF0	0x107F ;_font5x7+376
0x1FF2	0x4428 ;_font5x7+378
0x1FF4	0x4100 ;_font5x7+380
0x1FF6	0x407F ;_font5x7+382
0x1FF8	0x7C00 ;_font5x7+384
0x1FFA	0x1804 ;_font5x7+386
0x1FFC	0x7804 ;_font5x7+388
0x1FFE	0x087C ;_font5x7+390
0x2000	0x0404 ;_font5x7+392
0x2002	0x3878 ;_font5x7+394
0x2004	0x4444 ;_font5x7+396
0x2006	0x3844 ;_font5x7+398
0x2008	0x147C ;_font5x7+400
0x200A	0x1414 ;_font5x7+402
0x200C	0x0808 ;_font5x7+404
0x200E	0x1414 ;_font5x7+406
0x2010	0x7C18 ;_font5x7+408
0x2012	0x087C ;_font5x7+410
0x2014	0x0404 ;_font5x7+412
0x2016	0x4808 ;_font5x7+414
0x2018	0x5454 ;_font5x7+416
0x201A	0x2054 ;_font5x7+418
0x201C	0x3F04 ;_font5x7+420
0x201E	0x4044 ;_font5x7+422
0x2020	0x3C20 ;_font5x7+424
0x2022	0x4040 ;_font5x7+426
0x2024	0x7C20 ;_font5x7+428
0x2026	0x201C ;_font5x7+430
0x2028	0x2040 ;_font5x7+432
0x202A	0x3C1C ;_font5x7+434
0x202C	0x3040 ;_font5x7+436
0x202E	0x3C40 ;_font5x7+438
0x2030	0x2844 ;_font5x7+440
0x2032	0x2810 ;_font5x7+442
0x2034	0x0C44 ;_font5x7+444
0x2036	0x5050 ;_font5x7+446
0x2038	0x3C50 ;_font5x7+448
0x203A	0x6444 ;_font5x7+450
0x203C	0x4C54 ;_font5x7+452
0x203E	0x0044 ;_font5x7+454
0x2040	0x3608 ;_font5x7+456
0x2042	0x0041 ;_font5x7+458
0x2044	0x0000 ;_font5x7+460
0x2046	0x007F ;_font5x7+462
0x2048	0x0000 ;_font5x7+464
0x204A	0x3641 ;_font5x7+466
0x204C	0x0008 ;_font5x7+468
0x204E	0x0808 ;_font5x7+470
0x2050	0x1C2A ;_font5x7+472
0x2052	0x0808 ;_font5x7+474
0x2054	0x2A1C ;_font5x7+476
0x2056	0x0808 ;_font5x7+478
; end of _font5x7
;pong.c,0 :: ?ICS?lstr4_pong
0x2058	0x4350 ;?ICS?lstr4_pong+0
0x205A	0x5720 ;?ICS?lstr4_pong+2
0x205C	0x4E49 ;?ICS?lstr4_pong+4
0x205E	0x0053 ;?ICS?lstr4_pong+6
; end of ?ICS?lstr4_pong
;pong.c,0 :: ?ICS?lstr5_pong
0x2060	0x4F59 ;?ICS?lstr5_pong+0
0x2062	0x2055 ;?ICS?lstr5_pong+2
0x2064	0x4957 ;?ICS?lstr5_pong+4
0x2066	0x004E ;?ICS?lstr5_pong+6
; end of ?ICS?lstr5_pong
;pong.c,0 :: ?ICS?lstr2_pong
0x2068	0x6E6F ;?ICS?lstr2_pong+0
0x206A	0x2065 ;?ICS?lstr2_pong+2
0x206C	0x6C70 ;?ICS?lstr2_pong+4
0x206E	0x7961 ;?ICS?lstr2_pong+6
0x2070	0x7265 ;?ICS?lstr2_pong+8
0x2072	0x00 ;?ICS?lstr2_pong+10
; end of ?ICS?lstr2_pong
;pong.c,0 :: ?ICS?lstr3_pong
0x2073	0x756D ;?ICS?lstr3_pong+0
0x2075	0x746C ;?ICS?lstr3_pong+2
0x2077	0x7069 ;?ICS?lstr3_pong+4
0x2079	0x616C ;?ICS?lstr3_pong+6
0x207B	0x6579 ;?ICS?lstr3_pong+8
0x207D	0x0072 ;?ICS?lstr3_pong+10
; end of ?ICS?lstr3_pong
;pong.c,0 :: ?ICS?lstr6_pong
0x207F	0x6157 ;?ICS?lstr6_pong+0
0x2081	0x7469 ;?ICS?lstr6_pong+2
0x2083	0x6E69 ;?ICS?lstr6_pong+4
0x2085	0x2067 ;?ICS?lstr6_pong+6
0x2087	0x6F66 ;?ICS?lstr6_pong+8
0x2089	0x2072 ;?ICS?lstr6_pong+10
0x208B	0x746F ;?ICS?lstr6_pong+12
0x208D	0x6568 ;?ICS?lstr6_pong+14
0x208F	0x2072 ;?ICS?lstr6_pong+16
0x2091	0x6C70 ;?ICS?lstr6_pong+18
0x2093	0x7961 ;?ICS?lstr6_pong+20
0x2095	0x7265 ;?ICS?lstr6_pong+22
0x2097	0x00 ;?ICS?lstr6_pong+24
; end of ?ICS?lstr6_pong
;pong.c,0 :: ?ICS?lstr8_pong
0x2098	0x3150 ;?ICS?lstr8_pong+0
0x209A	0x5720 ;?ICS?lstr8_pong+2
0x209C	0x4E49 ;?ICS?lstr8_pong+4
0x209E	0x0053 ;?ICS?lstr8_pong+6
; end of ?ICS?lstr8_pong
;pong.c,0 :: ?ICS?lstr9_pong
0x20A0	0x3250 ;?ICS?lstr9_pong+0
0x20A2	0x5720 ;?ICS?lstr9_pong+2
0x20A4	0x4E49 ;?ICS?lstr9_pong+4
0x20A6	0x00 ;?ICS?lstr9_pong+6
; end of ?ICS?lstr9_pong
;pong.c,0 :: ?ICS?lstr7_pong
0x20A7	0x7250 ;?ICS?lstr7_pong+0
0x20A9	0x7365 ;?ICS?lstr7_pong+2
0x20AB	0x2073 ;?ICS?lstr7_pong+4
0x20AD	0x6F74 ;?ICS?lstr7_pong+6
0x20AF	0x7320 ;?ICS?lstr7_pong+8
0x20B1	0x6174 ;?ICS?lstr7_pong+10
0x20B3	0x7472 ;?ICS?lstr7_pong+12
0x20B5	0x00 ;?ICS?lstr7_pong+14
; end of ?ICS?lstr7_pong
;pong.c,0 :: ?ICS_score
0x20B6	0x0000 ;?ICS_score+0
; end of ?ICS_score
;pong.c,0 :: ?ICS_turno
0x20B8	0x00 ;?ICS_turno+0
; end of ?ICS_turno
;pong.c,0 :: ?ICS_flag
0x20B9	0x00 ;?ICS_flag+0
; end of ?ICS_flag
;pong.c,0 :: ?ICS_y
0x20BA	0x00 ;?ICS_y+0
; end of ?ICS_y
;pong.c,0 :: ?ICS_turno_paleta
0x20BB	0x00 ;?ICS_turno_paleta+0
; end of ?ICS_turno_paleta
;pong.c,0 :: ?ICS?lstr11_pong
0x20BC	0x3250 ;?ICS?lstr11_pong+0
0x20BE	0x5720 ;?ICS?lstr11_pong+2
0x20C0	0x4E49 ;?ICS?lstr11_pong+4
0x20C2	0x00 ;?ICS?lstr11_pong+6
; end of ?ICS?lstr11_pong
;pong.c,0 :: ?ICS?lstr1_pong
0x20C3	0x4B4F ;?ICS?lstr1_pong+0
0x20C5	0x00 ;?ICS?lstr1_pong+2
; end of ?ICS?lstr1_pong
;pong.c,0 :: ?ICS?lstr10_pong
0x20C6	0x3150 ;?ICS?lstr10_pong+0
0x20C8	0x5720 ;?ICS?lstr10_pong+2
0x20CA	0x4E49 ;?ICS?lstr10_pong+4
0x20CC	0x0053 ;?ICS?lstr10_pong+6
; end of ?ICS?lstr10_pong
;__Lib_ADC_A_D.c,0 :: ?ICS_vref_mask
0x20CE	0x30 ;?ICS_vref_mask+0
; end of ?ICS_vref_mask
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [12]    _Delay_10us
0x0028       [6]    _Delay_1us
0x002E      [10]    __Lib_Glcd_Strobe
0x0038      [16]    _Glcd_Set_Page
0x0048      [28]    _Glcd_Set_Side
0x0064      [78]    _Glcd_Read_Data
0x00B2      [14]    _Glcd_Write_Data
0x00C0      [38]    _Glcd_Set_X
0x00E6     [180]    _Glcd_Dot
0x019A      [98]    _Glcd_V_Line
0x01FC      [80]    _Mul_16X16_U
0x024C      [22]    _srand
0x0262      [22]    _Delay_500us
0x0278      [18]    _UART1_Read
0x028A      [10]    _UART1_Data_Ready
0x0294      [18]    _DrawBall
0x02A6      [82]    _Mul_32x32_U
0x02F8      [14]    _UART1_Write
0x0306      [24]    _draw_player
0x031E      [88]    _Div_16x16_S_L
0x0376     [192]    _check_collision
0x0436     [112]    _Button
0x04A6     [124]    _rand
0x0522     [198]    _Div_16x16_S
0x05E8      [52]    _UART1_Write_Text
0x061C     [154]    _UART1_Read_Text
0x06B6      [10]    _UART1_Tx_Idle
0x06C0      [84]    _Glcd_Fill
0x0714      [22]    _erase_player
0x072A      [12]    _Delay_22us
0x0736     [138]    _Glcd_Image
0x07C0     [280]    _Glcd_Write_Char
0x08D8      [98]    _init
0x093A      [92]    _Glcd_Init
0x0996      [16]    ___CC2DW
0x09A6      [64]    _ADC_Read
0x09E6      [50]    _cover
0x0A18      [38]    _ADC_Init
0x0A3E      [88]    _UART1_Init
0x0A96     [100]    _Glcd_Write_Text
0x0AFA      [22]    _output_data
0x0B10      [50]    _data_pack
0x0B42      [26]    _save_old_data
0x0B5C      [38]    _input_data
0x0B82      [20]    _output_character
0x0B96      [86]    _check_winner
0x0BEC     [578]    _move_ball
0x0E2E     [398]    _move_player
0x0FBC      [56]    _desdata_pack
0x0FF4     [292]    _draw_score
0x1118     [502]    _move_ia
0x130E    [1898]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    SPI1_Write_tmp_L0
0x0001       [1]    check_winner_i_L0
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0001       [1]    __Lib_USB_genHID_?FLOC____Lib_USB_genHID_USB_Handle_BusyT1
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    R1
0x0002       [1]    R2
0x0002       [2]    memcpy_dd_L0
0x0002       [1]    __Lib_USB_genHID_USB_CtrlTrf_Rx_Service_byteToRead_L0
0x0002       [2]    memchr_s_L0
0x0002       [1]    check_winner_j_L0
0x0002       [2]    strlen_cp_L0
0x0002       [2]    memset_pp_L0
0x0003       [1]    MM_Init_i_L0
0x0003       [2]    __Lib_USB_genHID_USB_CtrlTrf_Tx_Service_byteToSend_L0
0x0003       [1]    __Lib_USB_genHID_USB_CtrlTrf_Rx_Service_i_L0
0x0003       [1]    R3
0x0003       [2]    MM_TotalFreeMemSize_Tot_L0
0x0003       [2]    Ltrim_original_L0
0x0003       [2]    memmove_tt_L0
0x0004       [2]    __Lib_USB_genHID_USB_Get_Status_Handler_p_L2
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    __Lib_USB_genHID_USB_Std_Feature_Req_Handler_p_L0
0x0004       [2]    __Lib_USB_genHID_USB_Transfer_Packet_handle_L0
0x0004       [1]    R4
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    strncat_cp_L0
0x0004       [2]    __Lib_MemManager_MM_GetMemAlign_P_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    frexp_pom_L0
0x0004       [1]    __Lib_USB_genHID_GetMaxIndexInDevDsc_index_L0
0x0004       [2]    strcat_cp_L0
0x0005       [2]    memmove_ff_L0
0x0005       [2]    Ltrim_p_L0
0x0005       [1]    MM_TotalFreeMemSize_i_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [1]    R5
0x0005       [2]    LongIntToHex_input_half_L0
0x0006       [1]    __Lib_MemManager_MM_GetMemAlign_i_L0
0x0006       [1]    R6
0x0006       [2]    __Lib_USB_genHID_GetMaxIndexInConfigDsc_totalLen_L0
0x0007       [1]    R7
0x0008       [1]    R8
0x0008       [3]    __Lib_USB_genHID_GetMaxIndexInConfigDsc_ptr_L0
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [8]    ?lstr4_pong
0x001D       [8]    ?lstr5_pong
0x0025      [11]    ?lstr2_pong
0x0030      [12]    ?lstr3_pong
0x003C      [25]    ?lstr6_pong
0x0055       [8]    ?lstr8_pong
0x005D       [7]    ?lstr9_pong
0x0064      [15]    ?lstr7_pong
0x0073       [2]    _score
0x0075       [1]    _turno
0x0076       [1]    _flag
0x0077       [1]    _y
0x0078       [1]    _turno_paleta
0x0079       [7]    ?lstr11_pong
0x0080       [3]    ?lstr1_pong
0x0083       [8]    ?lstr10_pong
0x008B       [1]    _vref_mask
0x008C       [9]    _info
0x0095       [4]    _ball
0x0099       [8]    _paddle
0x00A1       [4]    _send_balls
0x00A5       [8]    _send_paddles
0x00AD       [1]    __Lib_Glcd_FontInitialized
0x00AE       [1]    __Lib_Glcd_fontH
0x00AF       [1]    __Lib_Glcd_fontW
0x00B0       [3]    __Lib_Glcd_fontDef
0x00B3       [2]    __Lib_Glcd_ExternalFontSet
0x00B5       [4]    _UART_Rdy_Ptr
0x00B9       [4]    _UART_Tx_Idle_Ptr
0x00BD       [4]    _UART_Wr_Ptr
0x00C1       [4]    _UART_Rd_Ptr
0x00C5       [5]    _fin
0x00CA       [1]    __Lib_CStdlib_randf
0x00CB       [2]    __Lib_Glcd_fontOffset
0x00CD       [4]    _ADC_Get_Sample_Ptr
0x00D1       [4]    __Lib_CStdlib_randx
0x00D5       [1]    main_check_L0
0x00D6       [1]    main_tiempo_L0
0x00D7       [1]    main_Master_L0
0x00D8       [1]    main_Master_slave_L0
0x00D9       [1]    main_move_other_L0
0x00DA       [1]    draw_score_posx_L0
0x00DA       [2]    FARG_output_data_serial_dir
0x00DA       [1]    move_ball_i_L0
0x00DA       [2]    FARG_input_data_text_dir
0x00DA       [2]    FARG_Glcd_Write_Text_text
0x00DA       [1]    FARG_move_player_i
0x00DA       [1]    move_ia_centro_ia_L0
0x00DA       [1]    FARG_output_character_charValue
0x00DA       [1]    FARG_ADC_Read_channel
0x00DB       [1]    draw_score_jugador_L0
0x00DB       [1]    FARG_move_player_direction
0x00DB       [1]    move_ball_angle_L0
0x00DB       [1]    move_ia_ball_speed_L0
0x00DC       [1]    FARG_Glcd_Write_Text_x_pos
0x00DC       [2]    move_ia_contador_L0
0x00DD       [1]    FARG_Glcd_Write_Text_page_num
0x00DE       [1]    FARG_Glcd_Write_Text_color
0x00DF       [1]    Glcd_Write_Text_i_L0
0x00E0       [1]    FARG_Glcd_Write_Char_chr
0x00E0       [2]    FARG_Button_port
0x00E0       [1]    FARG_erase_player_x
0x00E0       [2]    FARG_UART1_Read_Text_Output
0x00E0       [2]    FARG_UART1_Write_Text_uart_text
0x00E0       [4]    FARG_check_collision_paleta
0x00E0       [3]    FARG_Glcd_Image_image
0x00E0       [1]    FARG_Glcd_Fill_pattern
0x00E1       [1]    Glcd_Fill_yy_L0
0x00E1       [1]    FARG_Glcd_Write_Char_x_pos
0x00E1       [1]    FARG_erase_player_y
0x00E2       [1]    FARG_Glcd_Write_Char_page_num
0x00E2       [2]    FARG_UART1_Read_Text_Delimiter
0x00E2       [1]    FARG_Button_pin
0x00E2       [1]    Glcd_Fill_page_L0
0x00E2       [1]    UART1_Write_Text_data__L0
0x00E2       [1]    FARG_erase_player_w
0x00E3       [1]    FARG_erase_player_h
0x00E3       [1]    FARG_Glcd_Write_Char_color
0x00E3       [1]    Glcd_Image_col_L0
0x00E3       [1]    UART1_Write_Text_counter_L0
0x00E3       [1]    FARG_Button_time_ms
0x00E4       [1]    FARG_Button_active_state
0x00E4       [1]    Glcd_Write_Char_ii_L0
0x00E4       [1]    FARG_UART1_Read_Text_Attempts
0x00E4       [1]    Glcd_Image_pg_L0
0x00E4       [4]    FARG_check_collision_bola
0x00E5       [1]    Glcd_Write_Char_data_read_L0
0x00E5       [2]    Glcd_Image_clan_niza_L0
0x00E5       [1]    UART1_Read_Text_r_data_L0
0x00E5       [1]    Button_pMask_L0
0x00E6       [1]    UART1_Read_Text_out_idx_L0
0x00E6       [1]    Glcd_Write_Char_font_ch_L0
0x00E6       [1]    Button_rslt_L0
0x00E7       [1]    UART1_Read_Text_delim_idx_L0
0x00E7       [1]    Glcd_Write_Char_font_ch_inv_L0
0x00E8       [2]    Glcd_Write_Char_pointer_L0
0x00E8       [1]    FARG_check_collision_a
0x00EA       [1]    FARG_draw_player_x
0x00EA       [2]    FARG_srand_x
0x00EA       [1]    FARG_UART1_Write_data_
0x00EA       [1]    FARG_DrawBall_x
0x00EB       [1]    FARG_draw_player_y
0x00EB       [1]    FARG_DrawBall_y
0x00EC       [1]    FARG_draw_player_w
0x00ED       [1]    FARG_draw_player_h
0x00EE       [1]    FARG_Glcd_V_Line_y_start
0x00EF       [1]    FARG_Glcd_V_Line_y_end
0x00F0       [1]    FARG_Glcd_V_Line_x_pos
0x00F1       [1]    FARG_Glcd_V_Line_color
0x00F2       [1]    Glcd_V_Line_loc_L0
0x00F3       [1]    FARG_Glcd_Dot_x_pos
0x00F4       [1]    FARG_Glcd_Dot_y_pos
0x00F5       [1]    FARG_Glcd_Dot_color
0x00F6       [1]    Glcd_Dot_bit_mask1_L0
0x00F7       [1]    Glcd_Dot_bit_mask0_L0
0x00F8       [1]    Glcd_Dot_ddata_L0
0x00F9       [1]    Glcd_Read_Data_local_L0
0x00F9       [1]    FARG_Glcd_Write_Data_ddata
0x00F9       [1]    FARG_Glcd_Set_X_x_pos
0x00F9       [1]    FARG_Glcd_Set_Page_page
0x00F9       [1]    FARG_Glcd_Set_Side_x_pos
0x0F82       [1]    PORTC
0x0F83       [1]    PORTD
0x0F83       [1]    GLCD_DataPort
0x0F8A       [0]    LATB3_bit
0x0F8A       [0]    GLCD_CS2
0x0F8A       [0]    LATB4_bit
0x0F8A       [0]    LATB5_bit
0x0F8A       [0]    GLCD_RST
0x0F8A       [0]    LATB0_bit
0x0F8A       [0]    GLCD_CS1
0x0F8A       [0]    LATB2_bit
0x0F8A       [0]    LATB1_bit
0x0F8A       [0]    GLCD_RW
0x0F8A       [0]    GLCD_RS
0x0F8A       [0]    GLCD_EN
0x0F93       [0]    GLCD_EN_Direction
0x0F93       [0]    GLCD_RST_Direction
0x0F93       [0]    GLCD_CS1_Direction
0x0F93       [0]    GLCD_CS2_Direction
0x0F93       [0]    GLCD_RW_Direction
0x0F93       [0]    TRISB2_bit
0x0F93       [0]    TRISB3_bit
0x0F93       [0]    TRISB0_bit
0x0F93       [0]    TRISB1_bit
0x0F93       [0]    TRISB4_bit
0x0F93       [0]    TRISB5_bit
0x0F93       [0]    GLCD_RS_Direction
0x0F94       [1]    TRISC
0x0F94       [0]    TRISC7_bit
0x0F94       [0]    TRISC6_bit
0x0F9E       [1]    PIR1
0x0FAB       [1]    RCSTA
0x0FAC       [1]    TXSTA
0x0FAD       [1]    TXREG
0x0FAE       [1]    RCREG
0x0FAF       [1]    SPBRG
0x0FB0       [1]    SPBRGH
0x0FB8       [1]    BAUDCON
0x0FC0       [1]    ADCON2
0x0FC1       [1]    ADCON1
0x0FC2       [1]    ADCON0
0x0FC3       [1]    ADRESL
0x0FC4       [1]    ADRESH
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x1A78    [1024]    _Portada
0x1E78     [480]    _font5x7
0x2058       [8]    ?ICS?lstr4_pong
0x2060       [8]    ?ICS?lstr5_pong
0x2068      [11]    ?ICS?lstr2_pong
0x2073      [12]    ?ICS?lstr3_pong
0x207F      [25]    ?ICS?lstr6_pong
0x2098       [8]    ?ICS?lstr8_pong
0x20A0       [7]    ?ICS?lstr9_pong
0x20A7      [15]    ?ICS?lstr7_pong
0x20B6       [2]    ?ICS_score
0x20B8       [1]    ?ICS_turno
0x20B9       [1]    ?ICS_flag
0x20BA       [1]    ?ICS_y
0x20BB       [1]    ?ICS_turno_paleta
0x20BC       [7]    ?ICS?lstr11_pong
0x20C3       [3]    ?ICS?lstr1_pong
0x20C6       [8]    ?ICS?lstr10_pong
0x20CE       [1]    ?ICS_vref_mask
